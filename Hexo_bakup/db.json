{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/head_icon.png","path":"images/head_icon.png","modified":1,"renderable":0},{"_id":"themes/jacman/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.eot","path":"font/fontdiao.eot","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.ttf","path":"font/fontdiao.ttf","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.woff","path":"font/fontdiao.woff","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","path":"img/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","path":"img/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc.svg","path":"img/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nd.svg","path":"img/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-sa.svg","path":"img/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/cc-by.svg","path":"img/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/cc-zero.svg","path":"img/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/jacman.jpg","path":"img/jacman.jpg","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/logo.png","path":"img/logo.png","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/logo.svg","path":"img/logo.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/scrollup.png","path":"img/scrollup.png","modified":1,"renderable":1},{"_id":"themes/jacman/source/js/gallery.js","path":"js/gallery.js","modified":1,"renderable":1},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":1,"renderable":1},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","path":"js/jquery.qrcode-0.12.0.min.js","modified":1,"renderable":1},{"_id":"themes/jacman/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.svg","path":"font/fontdiao.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/author.jpg","path":"img/author.jpg","modified":1,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/jacman/source/img/banner.jpg","path":"img/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"57a1dac4f84cacfe9b27c171a1b334cf5b687625","modified":1527310738741},{"_id":"themes/jacman/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1548473861478},{"_id":"themes/jacman/LICENSE","hash":"931516aa36c53eb7843c83d82662eb50cc3c4367","modified":1548473861478},{"_id":"themes/jacman/README.md","hash":"098545637b0aeb27b14707c15e429470c603d78d","modified":1548473861479},{"_id":"themes/jacman/README_zh.md","hash":"9c73931bca4883de13eedd4be254da547d4ca52e","modified":1548473861479},{"_id":"themes/jacman/_config.yml","hash":"df61051747295c56bca81fa0f8fdfdd4ebdce682","modified":1548477222042},{"_id":"source/about/index.md","hash":"1f7a5ff6188e797e26546401aff8a03c57367701","modified":1527302294922},{"_id":"source/_posts/.vscode-upload.json","hash":"2e69b61f6f51c158c3fb6adee6c26eb8d92d87bb","modified":1540567209529},{"_id":"source/images/head_icon.png","hash":"a82e07e691b9f57f86c475facad1d5aa5bbbd3f4","modified":1527312945026},{"_id":"themes/jacman/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1548473861474},{"_id":"themes/jacman/.git/config","hash":"71a17f0848f3cb95bfe3e9ca9596648be30c46ff","modified":1548473861477},{"_id":"themes/jacman/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1548473841009},{"_id":"themes/jacman/.git/index","hash":"bbb69bd9a1905e86d63b2e9e046c121f197fea71","modified":1548473861508},{"_id":"themes/jacman/.git/packed-refs","hash":"872b592ab4bac2713bb4bfe4ab6c15f54c75eae1","modified":1548473861467},{"_id":"themes/jacman/languages/default.yml","hash":"eea72d6138497287c0b3f4bd93e4f6f62b7aff37","modified":1548473861479},{"_id":"themes/jacman/languages/zh-CN.yml","hash":"1f3b9d00dd4322352b0c9c82a76dc9865a616d41","modified":1548473861479},{"_id":"themes/jacman/languages/zh-TW.yml","hash":"61a02ba818d641579a86fcd7f5926ab1e6ab5f70","modified":1548473861480},{"_id":"themes/jacman/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1548473861485},{"_id":"themes/jacman/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1548473861485},{"_id":"themes/jacman/layout/index.ejs","hash":"75cef2172c286994af412e11ab7f4f5a0daaf1f5","modified":1548473861485},{"_id":"themes/jacman/layout/layout.ejs","hash":"5b4289a4526899809b9c2facea535367ff51ba2b","modified":1548473861485},{"_id":"themes/jacman/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1548473861485},{"_id":"themes/jacman/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1548473861486},{"_id":"themes/jacman/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1548473861486},{"_id":"themes/jacman/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1548473861486},{"_id":"source/_posts/.vscode/settings.json","hash":"a30febd21ccfe4e21bbb0cca934f36fa00f4327e","modified":1540566686876},{"_id":"source/_posts/c/c++io.md","hash":"5671a011928e6221e78b57ff908425ea134152b4","modified":1527302294914},{"_id":"source/_posts/c/unix_netcode.md","hash":"afd37d7150b6869007962d82461a085995a2ef77","modified":1548478716574},{"_id":"source/_posts/git/git_1_config.md","hash":"d56fec46c86f0dea8f165e181211e2a4f1d6df6d","modified":1527302294912},{"_id":"source/_posts/git/git_2_operate.md","hash":"923c78a834c6d5111a8b42bdf08f8ac41802ba9d","modified":1527308750312},{"_id":"source/_posts/linux/2018-10-05_linux.md","hash":"f9586b23b7cd0cf9d8f2f35f4ee7d73b93632b9c","modified":1538713895927},{"_id":"source/_posts/linux/LinuxFTP.md","hash":"b0ed9c5f3475017d4a09d11fa0d47a970d6cb67f","modified":1540053537314},{"_id":"source/_posts/linux/apache_wsgi.md","hash":"44d54bc3376c538e7bee754f0e8419e70051f840","modified":1548478757452},{"_id":"source/_posts/linux/centos6.4install-mysql-python.md","hash":"c6bd2d76b207e88e2afb144c11ec2b9abba944dd","modified":1548478799657},{"_id":"source/_posts/linux/centos6.4升级python.md","hash":"206fce35b1f8e720f5181888579adfbecf1f3d80","modified":1530329001252},{"_id":"source/_posts/linux/linux_c_help.md","hash":"bc005906b9f8912aa5c9e57b6506441cfa3b5549","modified":1527302294913},{"_id":"source/_posts/linux/nginx_config.md","hash":"d45f765e6401319e3062f147388bd5b0a1c7aa26","modified":1548478812396},{"_id":"source/_posts/lua/2018-10-07_openresty.md","hash":"6bb409b7a6f2764c9e7bfd05a43f695ad46daa3b","modified":1548478829042},{"_id":"source/_posts/vim/atom.md","hash":"8ff576f96e0670a80c31abc6ca76dfc3c890fc64","modified":1527302294915},{"_id":"source/_posts/vim/vim-emmet.md","hash":"2a5620f1c5559a638d65da49e22a3442ca24b54b","modified":1540053910953},{"_id":"source/_posts/vim/vim-markdown.md","hash":"18a1634ed2dd627248966246390f2c7244c72f9d","modified":1527302294916},{"_id":"source/_posts/vim/vim_luanma.md","hash":"45f838b952c27a3c5592b4d040875c992ee752aa","modified":1527302294914},{"_id":"source/_posts/vim/vim_nerdtree.md","hash":"6fdd763864013934c451963816c7e2216bd20b25","modified":1527302294915},{"_id":"source/_posts/vim/vim_syntastic.md","hash":"399c076735b15da78ce27e68f9736776189c6c2b","modified":1527302294913},{"_id":"source/_posts/web/ajax.md","hash":"1da06d2fde313fbced16350194e88788e3acf82a","modified":1527302294916},{"_id":"source/_posts/web/html5_tags.md","hash":"738dbea50f9b5b05d858cbf9ef4ba0f507da854f","modified":1548478854512},{"_id":"source/_posts/web/jquery1.md","hash":"2c29204576aa6abb4b417bcf93b31f21c6e48a9d","modified":1548478871606},{"_id":"source/_posts/web/jquery2.md","hash":"aeb558c58747e8a1bb96b3fab492d5fa9e8597c7","modified":1548478883044},{"_id":"source/_posts/windows/dll_export.md","hash":"ac15f9838743520425710881b98abde886b6cad3","modified":1548478897181},{"_id":"source/_posts/windows/public_key_encryption.md","hash":"cf293ca0beaa93219c29c2616d016a603e55f27b","modified":1548478937346},{"_id":"source/_posts/windows/win_time_func.md","hash":"42ef46bc359ec8f77b04c87393ba91a2b027afc9","modified":1548478907195},{"_id":"source/_posts/windows/windowsFTP.md","hash":"d79698cf214e488976c2f7339b96dc2386bb43ff","modified":1527302294919},{"_id":"source/_posts/windows/windows_pipe.md","hash":"498adadb385e6db8243d3e155b17f975e5e84e78","modified":1527302294916},{"_id":"themes/jacman/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1548473841010},{"_id":"themes/jacman/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1548473841009},{"_id":"themes/jacman/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1548473841010},{"_id":"themes/jacman/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1548473841010},{"_id":"themes/jacman/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1548473841010},{"_id":"themes/jacman/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1548473841010},{"_id":"themes/jacman/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1548473841011},{"_id":"themes/jacman/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1548473841009},{"_id":"themes/jacman/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1548473841010},{"_id":"themes/jacman/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1548473841010},{"_id":"themes/jacman/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1548473841011},{"_id":"themes/jacman/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1548473841009},{"_id":"themes/jacman/.git/logs/HEAD","hash":"d3d26d4d6f5639d87daa4d53bb23f32f4170c3af","modified":1548473861476},{"_id":"themes/jacman/layout/_partial/after_footer.ejs","hash":"3e1f1d8dc38b1e17c523d1176f7ee503fc648045","modified":1548473861480},{"_id":"themes/jacman/layout/_partial/analytics.ejs","hash":"697601996220fe0a0f9cd628be67dec3c86ae2aa","modified":1548473861480},{"_id":"themes/jacman/layout/_partial/archive.ejs","hash":"2c7395e7563fe016521712a645c28a13f952d52a","modified":1548473861480},{"_id":"themes/jacman/layout/_partial/article.ejs","hash":"261ecacb8456f4cb972632b6a9103860fa63b9a3","modified":1548473861480},{"_id":"themes/jacman/layout/_partial/article_row.ejs","hash":"4cb855d91ece7f67b2ca0992fffa55472d0b9c93","modified":1548473861480},{"_id":"themes/jacman/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1548473861481},{"_id":"themes/jacman/layout/_partial/footer.ejs","hash":"5f80bf6c6ddcf8c28c4599cd1540b14b25d54f18","modified":1548473861481},{"_id":"themes/jacman/layout/_partial/head.ejs","hash":"99cce716476db52004d4ffeb6a2f47eea5286130","modified":1548477789659},{"_id":"themes/jacman/layout/_partial/header.ejs","hash":"18515612344ff048b9372b91b7eef6f3b143801f","modified":1548473861481},{"_id":"themes/jacman/layout/_partial/mathjax.ejs","hash":"d42994ac696f52ba99c1cbac382cd76d5b04a3e8","modified":1548473861481},{"_id":"themes/jacman/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1548473861481},{"_id":"themes/jacman/layout/_partial/search.ejs","hash":"1083824a6c6c3df02767f2f3b727aee78ebb76ec","modified":1548473861483},{"_id":"themes/jacman/layout/_partial/sidebar.ejs","hash":"c4f527fff0070fbe65919053a16224412317f40d","modified":1548473861483},{"_id":"themes/jacman/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1548473861483},{"_id":"themes/jacman/layout/_partial/tinysou_search.ejs","hash":"06ecddc8a9d40b480fe2e958af1dab857a9d5441","modified":1548473861483},{"_id":"themes/jacman/layout/_partial/totop.ejs","hash":"bea5bb7cb9350b8af7d97a8d223af63a5b30ab78","modified":1548473861483},{"_id":"themes/jacman/layout/_widget/archive.ejs","hash":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1548473861483},{"_id":"themes/jacman/layout/_widget/category.ejs","hash":"c1fae96b5053da021bcc04ab2ce5c2c8d30de8a2","modified":1548473861484},{"_id":"themes/jacman/layout/_widget/douban.ejs","hash":"e3820c36169e88663e6c9177666b2904c1ce47e6","modified":1548473861484},{"_id":"themes/jacman/layout/_widget/github-card.ejs","hash":"d49a8d609c5fbafa9e7ad328163565af03306519","modified":1548473861484},{"_id":"themes/jacman/layout/_widget/links.ejs","hash":"e49868063439c2092cdf9a8ec82cc295b0e42f66","modified":1548473861484},{"_id":"themes/jacman/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1548473861484},{"_id":"themes/jacman/layout/_widget/tag.ejs","hash":"7e82ad9c916b9ce871b2f65ce8f283c5ba47947b","modified":1548473861484},{"_id":"themes/jacman/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1548473861484},{"_id":"themes/jacman/layout/_widget/weibo.ejs","hash":"a31c2b223d0feb2a227e203cac9e5d13b7d328a8","modified":1548473861485},{"_id":"themes/jacman/source/css/style.styl","hash":"a0a45af186a72ae68979bf26f2a5d0d2303189ca","modified":1548473861489},{"_id":"themes/jacman/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1548473861490},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1548473861490},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1548473861490},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1548473861490},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1548473861490},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1548473861491},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1548473861492},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1548473861492},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1548473861493},{"_id":"themes/jacman/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1548473861494},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1548473861494},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1548473861495},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1548473861496},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1548473861496},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1548473861500},{"_id":"themes/jacman/source/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1548473861500},{"_id":"themes/jacman/source/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1548473861502},{"_id":"themes/jacman/source/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1548473861502},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1548473861504},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1548473861504},{"_id":"themes/jacman/source/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1548473861505},{"_id":"themes/jacman/source/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1548473861505},{"_id":"themes/jacman/source/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1548473861505},{"_id":"themes/jacman/source/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1548473861505},{"_id":"themes/jacman/source/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1548473861505},{"_id":"themes/jacman/source/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1548473861505},{"_id":"themes/jacman/source/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1548473861505},{"_id":"themes/jacman/source/img/logo.png","hash":"633faf4bf2305496220b5ed7d518ce802e52665f","modified":1548474987325},{"_id":"themes/jacman/source/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1548473861506},{"_id":"themes/jacman/source/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1548473861506},{"_id":"themes/jacman/source/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1548473861506},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1548473861507},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1548473861508},{"_id":"themes/jacman/source/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1548473861508},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1548473861495},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1548473861499},{"_id":"themes/jacman/source/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1548473861501},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1548473861507},{"_id":"themes/jacman/.git/objects/pack/pack-5ba75a45ab5d1b3ca3532ebb350da48bda15ff12.idx","hash":"23569c1890ad0d6cde3adde42dad76a0964b4752","modified":1548473860505},{"_id":"themes/jacman/.git/refs/heads/master","hash":"cdf7ebb26811b17304103dcf164bb82b88b4f841","modified":1548473861476},{"_id":"themes/jacman/layout/_partial/post/article.ejs","hash":"b09e3acea7076e1f01dfe0c2295e19951ea09437","modified":1548473861481},{"_id":"themes/jacman/layout/_partial/post/catetags.ejs","hash":"0e37bababc8f4659f5b59a552a946b46d89e4158","modified":1548473861482},{"_id":"themes/jacman/layout/_partial/post/comment.ejs","hash":"62584b25f34451818e659e417fdfd18aa3249900","modified":1548473938458},{"_id":"themes/jacman/layout/_partial/post/footer.ejs","hash":"b12ec08a5845a3d8c01257614f1dfead879c87d2","modified":1548473861482},{"_id":"themes/jacman/layout/_partial/post/gallery.ejs","hash":"fafc2501d7e65983b0f5c2b58151ca12e57c0574","modified":1548473861482},{"_id":"themes/jacman/layout/_partial/post/header.ejs","hash":"36a705942b691abe0d643ea8afa339981b32f6f2","modified":1548473861482},{"_id":"themes/jacman/layout/_partial/post/jiathis.ejs","hash":"d7f5960039ac74924559ab6ba03c64457b8f0966","modified":1548473861482},{"_id":"themes/jacman/layout/_partial/post/pagination.ejs","hash":"7de9c07a4c968429a8088c31a28b7f3a993ded1b","modified":1548473861482},{"_id":"themes/jacman/source/css/_base/font.styl","hash":"c8a0faf43b08e37ad07a5669db76d595da966159","modified":1548473861486},{"_id":"themes/jacman/source/css/_base/public.styl","hash":"f016180726019927b9a835ed01e04d153f27a149","modified":1548473861487},{"_id":"themes/jacman/source/css/_base/variable.styl","hash":"cb652eb83c28a208743fabab92de896f8b7cbf7b","modified":1548473861487},{"_id":"themes/jacman/source/css/_partial/article.styl","hash":"c69641b4a34a8c62986b335414413dbde26de25e","modified":1548473861488},{"_id":"themes/jacman/source/css/_partial/aside.styl","hash":"506fde1d67ce750452cbe84bee01a19c7d027c5e","modified":1548473861488},{"_id":"themes/jacman/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1548473861488},{"_id":"themes/jacman/source/css/_partial/footer.styl","hash":"1911613a19b605a58f801c21b03b5d4c83b90f9c","modified":1548473861488},{"_id":"themes/jacman/source/css/_partial/gallery.styl","hash":"7246809f4ce3166ec1b259bf475cae1a48e29aad","modified":1548473861488},{"_id":"themes/jacman/source/css/_partial/header.styl","hash":"5121ceb712be3f2dde98b8b6e589b546e19eab8f","modified":1548473861488},{"_id":"themes/jacman/source/css/_partial/index.styl","hash":"a72ff14effd276015264f870f47ed8f8413bf5d3","modified":1548473861489},{"_id":"themes/jacman/source/css/_partial/helper.styl","hash":"1136600932b97534b88465bf05ef313630b2de3d","modified":1548473861489},{"_id":"themes/jacman/source/css/_partial/totop.styl","hash":"96363d7c5aaed5f649667fc0752a62620a67e872","modified":1548473861489},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1548473861491},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1548473861491},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1548473861491},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1548473861491},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1548473861492},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1548473861492},{"_id":"themes/jacman/source/img/author.jpg","hash":"8b8e61b0e6dcbdf2e285983b1a0ca3044ec42a2f","modified":1548474873200},{"_id":"themes/jacman/.git/logs/refs/heads/master","hash":"d3d26d4d6f5639d87daa4d53bb23f32f4170c3af","modified":1548473861476},{"_id":"themes/jacman/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1548473861474},{"_id":"themes/jacman/source/css/_base/highlight/highlight.styl","hash":"91b62bfc58390b0d5db782a75be6965ee3665eb3","modified":1548473861487},{"_id":"themes/jacman/source/css/_base/highlight/theme.styl","hash":"e3a59bd427ba37a54ead9eeba9a5356b3f720a48","modified":1548473861487},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1548473861498},{"_id":"themes/jacman/source/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1548473861504},{"_id":"themes/jacman/.git/logs/refs/remotes/origin/HEAD","hash":"d3d26d4d6f5639d87daa4d53bb23f32f4170c3af","modified":1548473861474},{"_id":"themes/jacman/.git/objects/pack/pack-5ba75a45ab5d1b3ca3532ebb350da48bda15ff12.pack","hash":"fa0ad64347148887d94275eca06b830813fb2501","modified":1548473860504},{"_id":"public/atom.xml","hash":"bdae7b96aa32f16bc3ebf9bd88e6de8e1c86d462","modified":1548478966403},{"_id":"public/search.xml","hash":"a1f2ca3d02b67fc53bcfd67579c67b1bf510ce14","modified":1548478966711},{"_id":"public/content.json","hash":"200937b71a600819e6ed1413bcefaa3c05f5100e","modified":1548478966719},{"_id":"public/about/index.html","hash":"65b88fb1f8825ec58e996fcf6ef765480e0a1703","modified":1548478966730},{"_id":"public/2016/10/05/linux/linux_c_help/index.html","hash":"d48e982899225479409ae2793505081de8e026a5","modified":1548478966730},{"_id":"public/archives/2016/index.html","hash":"b7780de6e82bc8cf9df1c93c1ebdbd5cc3d2c570","modified":1548478966730},{"_id":"public/archives/2016/06/index.html","hash":"e76721dad904f554e563bd7acbcc8345d802338e","modified":1548478966730},{"_id":"public/archives/2016/07/index.html","hash":"daf922853b1246eea2ccc45327c047744be9e47a","modified":1548478966730},{"_id":"public/archives/2016/08/index.html","hash":"d1bb970f9d9d5f8a19a7cc329171a56829a0a44b","modified":1548478966730},{"_id":"public/archives/2016/09/index.html","hash":"7c5ef61da073e6392a53281f589d5a0c6776c5f5","modified":1548478966730},{"_id":"public/archives/2016/10/index.html","hash":"e1b664777cea31dc670c0cc3f571c1a6dea0b12a","modified":1548478966730},{"_id":"public/archives/2016/12/index.html","hash":"19cef0afc64b10423de624f40150618b3a80b2b9","modified":1548478966730},{"_id":"public/archives/2017/index.html","hash":"0aebbda5447c6527a7a0b4abb1efcb99b476e6eb","modified":1548478966730},{"_id":"public/archives/2017/01/index.html","hash":"a8a72895ac6512f23dad95e89a3c6b7ce851be78","modified":1548478966730},{"_id":"public/archives/2018/index.html","hash":"a3e77de0f1ea05a8978404469bb8bd6caf15118b","modified":1548478966730},{"_id":"public/archives/2018/05/index.html","hash":"7aecc06658b606659590fbd4ace0fd48a4f508de","modified":1548478966730},{"_id":"public/archives/2018/06/index.html","hash":"5c9af9061f7f261df44888c3fcfa8dd0475f74a6","modified":1548478966730},{"_id":"public/archives/2018/10/index.html","hash":"27641cc413e93cef85f9d06206d202af50c3102b","modified":1548478966730},{"_id":"public/categories/c/index.html","hash":"ea49e4acd7f10d461102abb617fc1c1ff5f7bda9","modified":1548478966731},{"_id":"public/categories/git/index.html","hash":"7f6e710aeb7c9937000ac97b1ff9353f60843f4e","modified":1548478966731},{"_id":"public/categories/linux/index.html","hash":"b1ea89c83347357249300de083cdb1dbbcf1f89c","modified":1548478966731},{"_id":"public/categories/lua/index.html","hash":"c3c717c2a8a30b9c126f69accd250d7094f0af99","modified":1548478966731},{"_id":"public/categories/atom/index.html","hash":"243947948c8ebc221ea38a4f25b9f0353101337f","modified":1548478966731},{"_id":"public/categories/vim/index.html","hash":"252cefe88d35d24e08e110e2a1bd1035f918e11b","modified":1548478966731},{"_id":"public/categories/web/index.html","hash":"24fbac9b71467e8a7fce0cff9baa337413e46517","modified":1548478966731},{"_id":"public/categories/windows/index.html","hash":"8d7ec25906b33857dec20c3837e6a177bb12fa8d","modified":1548478966731},{"_id":"public/tags/git/index.html","hash":"62eb5195ce5a69989a0c22be29f467ec202927ff","modified":1548478966731},{"_id":"public/tags/hexo/index.html","hash":"6c576d5bcf4d915041f3fed4897b09118dc22bd6","modified":1548478966731},{"_id":"public/tags/vim/index.html","hash":"366b9ed1f4225375512619aa70c54591c88dbc4f","modified":1548478966731},{"_id":"public/tags/ajax/index.html","hash":"1bcb44dd15c31808d54719ad6df9135da94d7a3e","modified":1548478966732},{"_id":"public/tags/encrypt/index.html","hash":"24fb2243934b57f9995919fe5c893bae2f09b43b","modified":1548478966732},{"_id":"public/tags/c/index.html","hash":"7b260a4e26795d44f1130047fd3e121aeaf85b68","modified":1548478966732},{"_id":"public/tags/windows/index.html","hash":"9c4ac9d2053fc15df68db7db6d61f2a472dd33d3","modified":1548478966732},{"_id":"public/tags/html5/index.html","hash":"dc347d480ec6e6a8c6341c43840bc6663fd25a07","modified":1548478966732},{"_id":"public/2018/10/07/lua/2018-10-07_openresty/index.html","hash":"eef0211a48e040b7c9589739cefa669e8a50c07f","modified":1548478966732},{"_id":"public/2018/10/05/linux/2018-10-05_linux/index.html","hash":"2338f1f4b071787f66ab1200bccc4bda08348087","modified":1548478966732},{"_id":"public/2018/06/30/linux/centos6.4升级python/index.html","hash":"afcea239d08f560fc188e483546e0b55b7ca479d","modified":1548478966732},{"_id":"public/2018/06/30/linux/centos6.4install-mysql-python/index.html","hash":"59109a8c01d637792cd6672eced47fc881bc3042","modified":1548478966732},{"_id":"public/2018/05/26/git/git_2_operate/index.html","hash":"07a250bab702bfbc39f34b75a3693bff2e4007f5","modified":1548478966732},{"_id":"public/2017/01/08/windows/windows_pipe/index.html","hash":"57978ff1bbe11f9467d3b1be69b082a7d0cdb2ba","modified":1548478966732},{"_id":"public/2017/01/07/c/unix_netcode/index.html","hash":"d1dc088abfc6335e9c7f9c59af2e7f59645bba30","modified":1548478966732},{"_id":"public/2017/01/07/linux/apache_wsgi/index.html","hash":"7d24b6cba83505f5e92342387fdb782085ec33e7","modified":1548478966732},{"_id":"public/2016/12/10/linux/nginx_config/index.html","hash":"05ee9424af332b778d0c29a29125a050acc62aaa","modified":1548478966732},{"_id":"public/2016/10/27/vim/vim-markdown/index.html","hash":"5d301475a39e24da1013d7491cb650ee20460f2d","modified":1548478966732},{"_id":"public/2016/10/27/vim/vim-emmet/index.html","hash":"884fb2ada49f26b0c015faae7b86955655856a16","modified":1548478966732},{"_id":"public/2016/10/26/vim/vim_luanma/index.html","hash":"73106fc40563878d3fd96b97370d68840357e963","modified":1548478966732},{"_id":"public/2016/10/23/web/jquery2/index.html","hash":"9e06c0892c90089ba52444294f504d160b617c61","modified":1548478966732},{"_id":"public/2016/10/09/vim/atom/index.html","hash":"abaf246d1c9b9ff230bb9c768d84d2a81b66565b","modified":1548478966732},{"_id":"public/2016/10/06/vim/vim_nerdtree/index.html","hash":"57b2946fad796f89de22a463c8ebbb87d36d5deb","modified":1548478966732},{"_id":"public/2016/10/06/web/ajax/index.html","hash":"af4a49f50dabf1b9a5a95f3e11801c603f0ccd52","modified":1548478966732},{"_id":"public/2016/10/06/windows/dll_export/index.html","hash":"b3911df4ecbc1b6f4991edf57eb6bad224e81290","modified":1548478966733},{"_id":"public/2016/10/05/vim/vim_syntastic/index.html","hash":"e096e176cf2d11f0a727e5350708d7ead6cf53fd","modified":1548478966733},{"_id":"public/2016/09/23/web/jquery1/index.html","hash":"de98de792a2863095b720a905ce87b4964fcc281","modified":1548478966733},{"_id":"public/2016/08/10/web/html5_tags/index.html","hash":"99c1861365db1f5cd9d2b5450b25784ed52c4a96","modified":1548478966733},{"_id":"public/2016/07/31/windows/windowsFTP/index.html","hash":"80356091defc60bb79704a3b56e993ff3f8e021a","modified":1548478966733},{"_id":"public/2016/07/31/linux/LinuxFTP/index.html","hash":"14751e474aaace9fdabfc00a9211afdd9e62dff0","modified":1548478966733},{"_id":"public/2016/07/21/windows/public_key_encryption/index.html","hash":"b9c1993ee4ae2f23e5eb5c31cff0c66e7c6eb1d9","modified":1548478966733},{"_id":"public/2016/06/29/c/c++io/index.html","hash":"5b445a5e0beed7bdda6a202a5c6ee52c4ae74f58","modified":1548478966733},{"_id":"public/2016/06/28/windows/win_time_func/index.html","hash":"d4bb401529d303f9909d9b4b89f53a107afb2bf7","modified":1548478966733},{"_id":"public/2016/06/28/git/git_1_config/index.html","hash":"6196fc86c32133fb144edecc83ef626c107f3c4b","modified":1548478966733},{"_id":"public/archives/index.html","hash":"2e93de1e2d0dd2ca158ec8d6f8e7a2affe2546a5","modified":1548478966733},{"_id":"public/index.html","hash":"f76392a7f29543b3c83cd807c47beb17111f0e68","modified":1548478966734},{"_id":"public/page/2/index.html","hash":"1cfa799e2b5973325b81ed281a42cbfc9a802b21","modified":1548478966734},{"_id":"public/images/head_icon.png","hash":"a82e07e691b9f57f86c475facad1d5aa5bbbd3f4","modified":1548478966739},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1548478966739},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1548478966739},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1548478966739},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1548478966739},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1548478966739},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1548478966739},{"_id":"public/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1548478966739},{"_id":"public/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1548478966739},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1548478966739},{"_id":"public/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1548478966739},{"_id":"public/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1548478966739},{"_id":"public/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1548478966739},{"_id":"public/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1548478966739},{"_id":"public/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1548478966739},{"_id":"public/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1548478966739},{"_id":"public/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1548478966740},{"_id":"public/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1548478966740},{"_id":"public/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1548478966740},{"_id":"public/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1548478966740},{"_id":"public/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1548478966740},{"_id":"public/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1548478966740},{"_id":"public/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1548478966740},{"_id":"public/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1548478966740},{"_id":"public/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1548478966740},{"_id":"public/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1548478966740},{"_id":"public/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1548478966740},{"_id":"public/img/logo.png","hash":"633faf4bf2305496220b5ed7d518ce802e52665f","modified":1548478966740},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1548478966740},{"_id":"public/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1548478967161},{"_id":"public/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1548478967162},{"_id":"public/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1548478967162},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1548478967166},{"_id":"public/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1548478967166},{"_id":"public/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1548478967166},{"_id":"public/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1548478967166},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1548478967166},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1548478967166},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1548478967166},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1548478967166},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1548478967167},{"_id":"public/css/style.css","hash":"1737965b2ad2e4999c93bfa7657bdfc9990675f3","modified":1548478967167},{"_id":"public/img/author.jpg","hash":"8b8e61b0e6dcbdf2e285983b1a0ca3044ec42a2f","modified":1548478967167},{"_id":"public/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1548478967172},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1548478967174},{"_id":"public/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1548478967174},{"_id":"public/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1548478967175},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1548478967181},{"_id":"public/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1548478967189}],"Category":[{"name":"c++","_id":"cjrd0e8qn0003kwli8hvwso3f"},{"name":"c","_id":"cjrd0e8qu0008kwli3kuwpcnu"},{"name":"git","_id":"cjrd0e8qx000dkwlialpfmmms"},{"name":"linux","_id":"cjrd0e8ra000okwlibj0j598w"},{"name":"lua","_id":"cjrd0e8rq001gkwlibud1t3ki"},{"name":"atom","_id":"cjrd0e8ru001okwli0du93xhj"},{"name":"vim","_id":"cjrd0e8rv001rkwli1rasihy3"},{"name":"web","_id":"cjrd0e8rx0020kwlimgzyjndt"},{"name":"windows","_id":"cjrd0e8s00026kwlil55gvj7a"}],"Data":[],"Page":[{"title":"about","date":"2018-05-01T09:10:48.000Z","_content":"---\nWelcome to rlovep! This is my bolg;[weibo](http://weibo.com/5803571716/profile?topnav=1&wvr=6) for more info. If you get any problems when see this page, you can find the answer in [csdn](http://blog.csdn.net/wedvefv) or you can ask me on [GitHub](https://github.com/wedvefv).\n##\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-05-01 17:10:48\n---\n---\nWelcome to rlovep! This is my bolg;[weibo](http://weibo.com/5803571716/profile?topnav=1&wvr=6) for more info. If you get any problems when see this page, you can find the answer in [csdn](http://blog.csdn.net/wedvefv) or you can ask me on [GitHub](https://github.com/wedvefv).\n##\n","updated":"2018-05-26T02:38:14.922Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjrd0e8po0000kwliopeyok1b","content":"<hr>\n<p>Welcome to rlovep! This is my bolg;<a href=\"http://weibo.com/5803571716/profile?topnav=1&amp;wvr=6\" target=\"_blank\" rel=\"noopener\">weibo</a> for more info. If you get any problems when see this page, you can find the answer in <a href=\"http://blog.csdn.net/wedvefv\" target=\"_blank\" rel=\"noopener\">csdn</a> or you can ask me on <a href=\"https://github.com/wedvefv\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<p>##</p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>Welcome to rlovep! This is my bolg;<a href=\"http://weibo.com/5803571716/profile?topnav=1&amp;wvr=6\" target=\"_blank\" rel=\"noopener\">weibo</a> for more info. If you get any problems when see this page, you can find the answer in <a href=\"http://blog.csdn.net/wedvefv\" target=\"_blank\" rel=\"noopener\">csdn</a> or you can ask me on <a href=\"https://github.com/wedvefv\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<p>##</p>\n"}],"Post":[{"layout":"post","title":"c++格式化I/O","date":"2016-06-29T04:55:59.000Z","comments":1,"_content":"\n# 使用函数模板\n\n```cpp\n#include <iostream>\n#include <iomanip>\nusing namepsace std;\nint main()\n{\n\tchar bookname[100],double price ,int counts;\n\tcout<<\"请输入书名：\"<<endl;\n\tcin>>bookname;\n\tcout<<\"请输入单价：\"<<endl;\n\tcin>>price;\n\tcout<<\"请输入销售数量：\"<<endl;\n\n\tcout<<\"使用标志和成员函数进行格式化输出：\"<<endl;\n\tcout<<\"《\"<<bookname<< \"》：\";\n\n\tcout.width(5);\n\tcout.fill('*');\n\tcout<<price <<\"单价\";\n\tcout.self(ios::scientific);\n\tcout.precision(3);\n\tcout<<price*counts<<\"销售额\";\n\tcout.self(ios::showpos|ios::left);\n\tcout<<counts<<\"销售数量：\"<<endl;\n\treturn 0;\n}\n\n```\n","source":"_posts/c/c++io.md","raw":"---\nlayout: post\ntitle: c++格式化I/O\ncategory: c++\ndate: 2016-06-29 12:55:59\ncomments: true\n---\n\n# 使用函数模板\n\n```cpp\n#include <iostream>\n#include <iomanip>\nusing namepsace std;\nint main()\n{\n\tchar bookname[100],double price ,int counts;\n\tcout<<\"请输入书名：\"<<endl;\n\tcin>>bookname;\n\tcout<<\"请输入单价：\"<<endl;\n\tcin>>price;\n\tcout<<\"请输入销售数量：\"<<endl;\n\n\tcout<<\"使用标志和成员函数进行格式化输出：\"<<endl;\n\tcout<<\"《\"<<bookname<< \"》：\";\n\n\tcout.width(5);\n\tcout.fill('*');\n\tcout<<price <<\"单价\";\n\tcout.self(ios::scientific);\n\tcout.precision(3);\n\tcout<<price*counts<<\"销售额\";\n\tcout.self(ios::showpos|ios::left);\n\tcout<<counts<<\"销售数量：\"<<endl;\n\treturn 0;\n}\n\n```\n","slug":"c/c++io","published":1,"updated":"2018-05-26T02:38:14.914Z","photos":[],"link":"","_id":"cjrd0e8qg0001kwlij6pal95v","content":"<h1 id=\"使用函数模板\"><a href=\"#使用函数模板\" class=\"headerlink\" title=\"使用函数模板\"></a>使用函数模板</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> namepsace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> bookname[<span class=\"number\">100</span>],<span class=\"keyword\">double</span> price ,<span class=\"keyword\">int</span> counts;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入书名：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;bookname;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入单价：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;price;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入销售数量：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"使用标志和成员函数进行格式化输出：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"《\"</span>&lt;&lt;bookname&lt;&lt; <span class=\"string\">\"》：\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.width(<span class=\"number\">5</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.fill(<span class=\"string\">'*'</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;price &lt;&lt;<span class=\"string\">\"单价\"</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.self(ios::scientific);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.precision(<span class=\"number\">3</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;price*counts&lt;&lt;<span class=\"string\">\"销售额\"</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.self(ios::showpos|ios::left);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;counts&lt;&lt;<span class=\"string\">\"销售数量：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"使用函数模板\"><a href=\"#使用函数模板\" class=\"headerlink\" title=\"使用函数模板\"></a>使用函数模板</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> namepsace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> bookname[<span class=\"number\">100</span>],<span class=\"keyword\">double</span> price ,<span class=\"keyword\">int</span> counts;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入书名：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;bookname;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入单价：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;price;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入销售数量：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"使用标志和成员函数进行格式化输出：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"《\"</span>&lt;&lt;bookname&lt;&lt; <span class=\"string\">\"》：\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.width(<span class=\"number\">5</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.fill(<span class=\"string\">'*'</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;price &lt;&lt;<span class=\"string\">\"单价\"</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.self(ios::scientific);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.precision(<span class=\"number\">3</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;price*counts&lt;&lt;<span class=\"string\">\"销售额\"</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.self(ios::showpos|ios::left);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;counts&lt;&lt;<span class=\"string\">\"销售数量：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"unix获取时间的小程序","date":"2017-01-07T07:30:30.000Z","_content":"\n```cpp\n//一个简单的时间获取客户程序\n#include    <netinet/in.h>  /* sockaddr_in{} and other Internet defns */\n#include    <strings.h>\n#include    <stdarg.h>  /* ANSI C header file */\n#include    <syslog.h>  /* for syslog() */\n#include    <stdlib.h>\n#include    <errno.h>\n#include    <stdio.h>\n#include    <string.h>\n#include    <unistd.h>\n#include    <arpa/inet.h>\n#define MAXLINE     4096    /* max text line length */\n#define SA  struct sockaddr\nvoid  err_doit(int errnoflag, const char *fmt, va_list ap)\n{\n\t\tint errno_save;\n\t\tchar buf[MAXLINE];\n\t\terrno_save = errno; /* value caller might want printed */\n\t\tvsprintf(buf, fmt, ap);\n\t\tif (errnoflag)\n\t\t\t\tsprintf(buf + strlen(buf), \": %s\", strerror(errno_save));\n\t\tstrcat(buf, \"\\n\");\n\t\tfflush(stdout);     /* in case stdout and stderr are the same */\n\t\tfputs(buf, stderr);\n\t\tfflush(stderr);     /* SunOS 4.1.* doesn't grok NULL argument */\n\t\treturn;\n}\nvoid err_quit(const char *fmt, ...)\n{\n\t\tva_list ap;\n\t\tva_start(ap, fmt);\n\t\terr_doit(0, fmt, ap);\n\t\tva_end(ap);\n\t\texit(1);\n}\nvoid err_sys(const char *fmt, ...)\n{\n\t\tva_list ap;\n\t\tva_start(ap, fmt);\n\t\terr_doit(1, fmt, ap);\n\t\tva_end(ap);\n\t\texit(1);\n}\nint main(int argc, char **argv)\n{\n\t\tint sockfd, n;\n\t\tchar recvline[MAXLINE + 1];\n\t\tstruct sockaddr_in servaddr;\n\t\tif (argc != 2)\n\t\t\t\terr_quit(\"usage: a.out <IPaddress>\");\n\t\tif ((sockfd = socket(AF_INET, SOCK_STREAM, 0)) < 0)\n\t\t\t\terr_sys(\"socket error\");\n\t\tbzero(&servaddr, sizeof(servaddr));\n\t\tservaddr.sin_family = AF_INET;\n\t\tservaddr.sin_port = htons(13);  /* daytime server */\n\t\tif (inet_pton(AF_INET, argv[1], &servaddr.sin_addr) <= 0)\n\t\t\t\terr_quit(\"inet_pton error for %s\", argv[1]);\n\t\tif (connect(sockfd, (SA *) & servaddr, sizeof(servaddr)) < 0)\n\t\t\t\terr_sys(\"connect error\");\n\t\twhile ((n = read(sockfd, recvline, MAXLINE)) > 0) {\n\t\t\t\trecvline[n] = 0;    /* null terminate */\n\t\t\t\tif (fputs(recvline, stdout) == EOF)\n\t\t\t\t\t\terr_sys(\"fputs error\");\n\t\t}\n\t\tif (n < 0)\n\t\t\t\terr_sys(\"read error\");\n\t\texit(0);\n}\n```\n\n","source":"_posts/c/unix_netcode.md","raw":"---\nlayout: post\ntitle: unix获取时间的小程序\ncategory: c \ndate: 2017-1-7 15:30:30\n\n---\n\n```cpp\n//一个简单的时间获取客户程序\n#include    <netinet/in.h>  /* sockaddr_in{} and other Internet defns */\n#include    <strings.h>\n#include    <stdarg.h>  /* ANSI C header file */\n#include    <syslog.h>  /* for syslog() */\n#include    <stdlib.h>\n#include    <errno.h>\n#include    <stdio.h>\n#include    <string.h>\n#include    <unistd.h>\n#include    <arpa/inet.h>\n#define MAXLINE     4096    /* max text line length */\n#define SA  struct sockaddr\nvoid  err_doit(int errnoflag, const char *fmt, va_list ap)\n{\n\t\tint errno_save;\n\t\tchar buf[MAXLINE];\n\t\terrno_save = errno; /* value caller might want printed */\n\t\tvsprintf(buf, fmt, ap);\n\t\tif (errnoflag)\n\t\t\t\tsprintf(buf + strlen(buf), \": %s\", strerror(errno_save));\n\t\tstrcat(buf, \"\\n\");\n\t\tfflush(stdout);     /* in case stdout and stderr are the same */\n\t\tfputs(buf, stderr);\n\t\tfflush(stderr);     /* SunOS 4.1.* doesn't grok NULL argument */\n\t\treturn;\n}\nvoid err_quit(const char *fmt, ...)\n{\n\t\tva_list ap;\n\t\tva_start(ap, fmt);\n\t\terr_doit(0, fmt, ap);\n\t\tva_end(ap);\n\t\texit(1);\n}\nvoid err_sys(const char *fmt, ...)\n{\n\t\tva_list ap;\n\t\tva_start(ap, fmt);\n\t\terr_doit(1, fmt, ap);\n\t\tva_end(ap);\n\t\texit(1);\n}\nint main(int argc, char **argv)\n{\n\t\tint sockfd, n;\n\t\tchar recvline[MAXLINE + 1];\n\t\tstruct sockaddr_in servaddr;\n\t\tif (argc != 2)\n\t\t\t\terr_quit(\"usage: a.out <IPaddress>\");\n\t\tif ((sockfd = socket(AF_INET, SOCK_STREAM, 0)) < 0)\n\t\t\t\terr_sys(\"socket error\");\n\t\tbzero(&servaddr, sizeof(servaddr));\n\t\tservaddr.sin_family = AF_INET;\n\t\tservaddr.sin_port = htons(13);  /* daytime server */\n\t\tif (inet_pton(AF_INET, argv[1], &servaddr.sin_addr) <= 0)\n\t\t\t\terr_quit(\"inet_pton error for %s\", argv[1]);\n\t\tif (connect(sockfd, (SA *) & servaddr, sizeof(servaddr)) < 0)\n\t\t\t\terr_sys(\"connect error\");\n\t\twhile ((n = read(sockfd, recvline, MAXLINE)) > 0) {\n\t\t\t\trecvline[n] = 0;    /* null terminate */\n\t\t\t\tif (fputs(recvline, stdout) == EOF)\n\t\t\t\t\t\terr_sys(\"fputs error\");\n\t\t}\n\t\tif (n < 0)\n\t\t\t\terr_sys(\"read error\");\n\t\texit(0);\n}\n```\n\n","slug":"c/unix_netcode","published":1,"updated":"2019-01-26T04:58:36.574Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8qk0002kwlitrzr58fd","content":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//一个简单的时间获取客户程序</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;netinet/in.h&gt;  /* sockaddr_in&#123;&#125; and other Internet defns */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;strings.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;stdarg.h&gt;  /* ANSI C header file */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;syslog.h&gt;  /* for syslog() */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;errno.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;arpa/inet.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAXLINE     4096    <span class=\"comment\">/* max text line length */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SA  struct sockaddr</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>  <span class=\"title\">err_doit</span><span class=\"params\">(<span class=\"keyword\">int</span> errnoflag, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *fmt, va_list ap)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> errno_save;</span><br><span class=\"line\">\t\t<span class=\"keyword\">char</span> buf[MAXLINE];</span><br><span class=\"line\">\t\terrno_save = errno; <span class=\"comment\">/* value caller might want printed */</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">vsprintf</span>(buf, fmt, ap);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (errnoflag)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">sprintf</span>(buf + <span class=\"built_in\">strlen</span>(buf), <span class=\"string\">\": %s\"</span>, strerror(errno_save));</span><br><span class=\"line\">\t\t<span class=\"built_in\">strcat</span>(buf, <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);     <span class=\"comment\">/* in case stdout and stderr are the same */</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">fputs</span>(buf, <span class=\"built_in\">stderr</span>);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stderr</span>);     <span class=\"comment\">/* SunOS 4.1.* doesn't grok NULL argument */</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">err_quit</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *fmt, ...)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t\tva_list ap;</span><br><span class=\"line\">\t\tva_start(ap, fmt);</span><br><span class=\"line\">\t\terr_doit(<span class=\"number\">0</span>, fmt, ap);</span><br><span class=\"line\">\t\tva_end(ap);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">err_sys</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *fmt, ...)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t\tva_list ap;</span><br><span class=\"line\">\t\tva_start(ap, fmt);</span><br><span class=\"line\">\t\terr_doit(<span class=\"number\">1</span>, fmt, ap);</span><br><span class=\"line\">\t\tva_end(ap);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> **argv)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> sockfd, n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">char</span> recvline[MAXLINE + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sockaddr_in</span> <span class=\"title\">servaddr</span>;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (argc != <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t\terr_quit(<span class=\"string\">\"usage: a.out &lt;IPaddress&gt;\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((sockfd = socket(AF_INET, SOCK_STREAM, <span class=\"number\">0</span>)) &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\terr_sys(<span class=\"string\">\"socket error\"</span>);</span><br><span class=\"line\">\t\tbzero(&amp;servaddr, <span class=\"keyword\">sizeof</span>(servaddr));</span><br><span class=\"line\">\t\tservaddr.sin_family = AF_INET;</span><br><span class=\"line\">\t\tservaddr.sin_port = htons(<span class=\"number\">13</span>);  <span class=\"comment\">/* daytime server */</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (inet_pton(AF_INET, argv[<span class=\"number\">1</span>], &amp;servaddr.sin_addr) &lt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\terr_quit(<span class=\"string\">\"inet_pton error for %s\"</span>, argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (connect(sockfd, (SA *) &amp; servaddr, <span class=\"keyword\">sizeof</span>(servaddr)) &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\terr_sys(<span class=\"string\">\"connect error\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> ((n = read(sockfd, recvline, MAXLINE)) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\trecvline[n] = <span class=\"number\">0</span>;    <span class=\"comment\">/* null terminate */</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">fputs</span>(recvline, <span class=\"built_in\">stdout</span>) == EOF)</span><br><span class=\"line\">\t\t\t\t\t\terr_sys(<span class=\"string\">\"fputs error\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\terr_sys(<span class=\"string\">\"read error\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//一个简单的时间获取客户程序</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;netinet/in.h&gt;  /* sockaddr_in&#123;&#125; and other Internet defns */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;strings.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;stdarg.h&gt;  /* ANSI C header file */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;syslog.h&gt;  /* for syslog() */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;errno.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>    <span class=\"meta-string\">&lt;arpa/inet.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAXLINE     4096    <span class=\"comment\">/* max text line length */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SA  struct sockaddr</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>  <span class=\"title\">err_doit</span><span class=\"params\">(<span class=\"keyword\">int</span> errnoflag, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *fmt, va_list ap)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> errno_save;</span><br><span class=\"line\">\t\t<span class=\"keyword\">char</span> buf[MAXLINE];</span><br><span class=\"line\">\t\terrno_save = errno; <span class=\"comment\">/* value caller might want printed */</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">vsprintf</span>(buf, fmt, ap);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (errnoflag)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">sprintf</span>(buf + <span class=\"built_in\">strlen</span>(buf), <span class=\"string\">\": %s\"</span>, strerror(errno_save));</span><br><span class=\"line\">\t\t<span class=\"built_in\">strcat</span>(buf, <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);     <span class=\"comment\">/* in case stdout and stderr are the same */</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">fputs</span>(buf, <span class=\"built_in\">stderr</span>);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stderr</span>);     <span class=\"comment\">/* SunOS 4.1.* doesn't grok NULL argument */</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">err_quit</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *fmt, ...)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t\tva_list ap;</span><br><span class=\"line\">\t\tva_start(ap, fmt);</span><br><span class=\"line\">\t\terr_doit(<span class=\"number\">0</span>, fmt, ap);</span><br><span class=\"line\">\t\tva_end(ap);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">err_sys</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *fmt, ...)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t\tva_list ap;</span><br><span class=\"line\">\t\tva_start(ap, fmt);</span><br><span class=\"line\">\t\terr_doit(<span class=\"number\">1</span>, fmt, ap);</span><br><span class=\"line\">\t\tva_end(ap);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> **argv)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> sockfd, n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">char</span> recvline[MAXLINE + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sockaddr_in</span> <span class=\"title\">servaddr</span>;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (argc != <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t\terr_quit(<span class=\"string\">\"usage: a.out &lt;IPaddress&gt;\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((sockfd = socket(AF_INET, SOCK_STREAM, <span class=\"number\">0</span>)) &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\terr_sys(<span class=\"string\">\"socket error\"</span>);</span><br><span class=\"line\">\t\tbzero(&amp;servaddr, <span class=\"keyword\">sizeof</span>(servaddr));</span><br><span class=\"line\">\t\tservaddr.sin_family = AF_INET;</span><br><span class=\"line\">\t\tservaddr.sin_port = htons(<span class=\"number\">13</span>);  <span class=\"comment\">/* daytime server */</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (inet_pton(AF_INET, argv[<span class=\"number\">1</span>], &amp;servaddr.sin_addr) &lt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\terr_quit(<span class=\"string\">\"inet_pton error for %s\"</span>, argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (connect(sockfd, (SA *) &amp; servaddr, <span class=\"keyword\">sizeof</span>(servaddr)) &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\terr_sys(<span class=\"string\">\"connect error\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> ((n = read(sockfd, recvline, MAXLINE)) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\trecvline[n] = <span class=\"number\">0</span>;    <span class=\"comment\">/* null terminate */</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">fputs</span>(recvline, <span class=\"built_in\">stdout</span>) == EOF)</span><br><span class=\"line\">\t\t\t\t\t\terr_sys(<span class=\"string\">\"fputs error\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\terr_sys(<span class=\"string\">\"read error\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"git 配置文件","date":"2016-06-28T06:33:58.000Z","comments":1,"_content":"\n# 基于公司是代理上网的，所以配置windows下的.gitconfig文件如下：\n\n```cpp\n[http]\n\tproxy = 代理ip:代理port\n[user]\n\temail = xxxxx@gmail.com\n\tname =xxxxxhhh \n[gui]  \nencoding = utf-8 #代码库统一使用utf-8  \n```\n### 由于本人电脑是日语版OS，所以GIT终端显示中文字体是乱码，所以索性设置全部\n### 使用utf-8编码。\n","source":"_posts/git/git_1_config.md","raw":"---\nlayout: post\ntitle: git 配置文件 \ncategory: git \ntags: git \ndate: 2016-06-28 14:33:58\ncomments: true\n\n---\n\n# 基于公司是代理上网的，所以配置windows下的.gitconfig文件如下：\n\n```cpp\n[http]\n\tproxy = 代理ip:代理port\n[user]\n\temail = xxxxx@gmail.com\n\tname =xxxxxhhh \n[gui]  \nencoding = utf-8 #代码库统一使用utf-8  \n```\n### 由于本人电脑是日语版OS，所以GIT终端显示中文字体是乱码，所以索性设置全部\n### 使用utf-8编码。\n","slug":"git/git_1_config","published":1,"updated":"2018-05-26T02:38:14.912Z","photos":[],"link":"","_id":"cjrd0e8qq0004kwli1n2ipyth","content":"<h1 id=\"基于公司是代理上网的，所以配置windows下的-gitconfig文件如下：\"><a href=\"#基于公司是代理上网的，所以配置windows下的-gitconfig文件如下：\" class=\"headerlink\" title=\"基于公司是代理上网的，所以配置windows下的.gitconfig文件如下：\"></a>基于公司是代理上网的，所以配置windows下的.gitconfig文件如下：</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[http]</span><br><span class=\"line\">\tproxy = 代理ip:代理port</span><br><span class=\"line\">[user]</span><br><span class=\"line\">\temail = xxxxx@gmail.com</span><br><span class=\"line\">\tname =xxxxxhhh </span><br><span class=\"line\">[gui]  </span><br><span class=\"line\">encoding = utf<span class=\"number\">-8</span> #代码库统一使用utf<span class=\"number\">-8</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"由于本人电脑是日语版OS，所以GIT终端显示中文字体是乱码，所以索性设置全部\"><a href=\"#由于本人电脑是日语版OS，所以GIT终端显示中文字体是乱码，所以索性设置全部\" class=\"headerlink\" title=\"由于本人电脑是日语版OS，所以GIT终端显示中文字体是乱码，所以索性设置全部\"></a>由于本人电脑是日语版OS，所以GIT终端显示中文字体是乱码，所以索性设置全部</h3><h3 id=\"使用utf-8编码。\"><a href=\"#使用utf-8编码。\" class=\"headerlink\" title=\"使用utf-8编码。\"></a>使用utf-8编码。</h3>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"基于公司是代理上网的，所以配置windows下的-gitconfig文件如下：\"><a href=\"#基于公司是代理上网的，所以配置windows下的-gitconfig文件如下：\" class=\"headerlink\" title=\"基于公司是代理上网的，所以配置windows下的.gitconfig文件如下：\"></a>基于公司是代理上网的，所以配置windows下的.gitconfig文件如下：</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[http]</span><br><span class=\"line\">\tproxy = 代理ip:代理port</span><br><span class=\"line\">[user]</span><br><span class=\"line\">\temail = xxxxx@gmail.com</span><br><span class=\"line\">\tname =xxxxxhhh </span><br><span class=\"line\">[gui]  </span><br><span class=\"line\">encoding = utf<span class=\"number\">-8</span> #代码库统一使用utf<span class=\"number\">-8</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"由于本人电脑是日语版OS，所以GIT终端显示中文字体是乱码，所以索性设置全部\"><a href=\"#由于本人电脑是日语版OS，所以GIT终端显示中文字体是乱码，所以索性设置全部\" class=\"headerlink\" title=\"由于本人电脑是日语版OS，所以GIT终端显示中文字体是乱码，所以索性设置全部\"></a>由于本人电脑是日语版OS，所以GIT终端显示中文字体是乱码，所以索性设置全部</h3><h3 id=\"使用utf-8编码。\"><a href=\"#使用utf-8编码。\" class=\"headerlink\" title=\"使用utf-8编码。\"></a>使用utf-8编码。</h3>"},{"layout":"post","title":"git 常见操作","date":"2018-05-26T04:00:00.000Z","comments":1,"_content":"\n## 创建分支\n\n```shell\n\tgit branch new_branch\n```\n\n## 本地删除分支\n\n```shell\n\tgit branch -D delete_branch \n```\n## 更新到远程删除分支 \n\n```shell\n\tgit checkout master \n\tgit pull -u   -u origin :delete_branch\n```\n\n\n## git pull 失败提示fatal: refusing to merge unrelated histories ,处理方法\n\n```shell\n\tgit pull origin master --allow-unrelated-historiesn\n\n```\n\n# 查看提交提记录\n\n```shell\n\tgit log\n\tgit log -p -2  #查看最近两次的提交差异\n\tgit log --stat #仅仅现实行数的变更\n\tgit log --pretty=oneline #每次提交，在一行显示\n\tgit log --pretty=format:\"%h - %an, %ar : %s\"   #格式显示\n```\n |选项\t|说明|\n |--|--|\n |%H\t|提交对象（提交）的完整哈希字串|\n |%h\t|提交对象的简短哈希字串|\n |%T\t|树对象（树）的完整哈希字串|\n |%t\t|树对象的简短哈希字串|\n |%P\t|父对象（父）的完整哈希字串|\n |%p\t|父对象的简短哈希字串|\n |%an\t|作者（作者）的名字|\n |%ae\t|作者的电子邮件地址|\n |%ad\t|作者修订日期（可以用-date =选项定制格式）|\n |%ar\t|作者修订日期，按多久以前的方式显示|\n |%cn\t|提交者（提交者）的名字|\n |%ce\t|提交者的电子邮件地址|\n |%cd\t|提交日期|\n |%cr\t|提交日期，按多久以前的方式显示|\n |%s\t|提交说明|\n\n# 待续......\n\n","source":"_posts/git/git_2_operate.md","raw":"\n---\nlayout: post\ntitle: git 常见操作 \ncategory: git \ntags: git \ndate: 2018-05-26 12:00:00\ncomments: true\n\n---\n\n## 创建分支\n\n```shell\n\tgit branch new_branch\n```\n\n## 本地删除分支\n\n```shell\n\tgit branch -D delete_branch \n```\n## 更新到远程删除分支 \n\n```shell\n\tgit checkout master \n\tgit pull -u   -u origin :delete_branch\n```\n\n\n## git pull 失败提示fatal: refusing to merge unrelated histories ,处理方法\n\n```shell\n\tgit pull origin master --allow-unrelated-historiesn\n\n```\n\n# 查看提交提记录\n\n```shell\n\tgit log\n\tgit log -p -2  #查看最近两次的提交差异\n\tgit log --stat #仅仅现实行数的变更\n\tgit log --pretty=oneline #每次提交，在一行显示\n\tgit log --pretty=format:\"%h - %an, %ar : %s\"   #格式显示\n```\n |选项\t|说明|\n |--|--|\n |%H\t|提交对象（提交）的完整哈希字串|\n |%h\t|提交对象的简短哈希字串|\n |%T\t|树对象（树）的完整哈希字串|\n |%t\t|树对象的简短哈希字串|\n |%P\t|父对象（父）的完整哈希字串|\n |%p\t|父对象的简短哈希字串|\n |%an\t|作者（作者）的名字|\n |%ae\t|作者的电子邮件地址|\n |%ad\t|作者修订日期（可以用-date =选项定制格式）|\n |%ar\t|作者修订日期，按多久以前的方式显示|\n |%cn\t|提交者（提交者）的名字|\n |%ce\t|提交者的电子邮件地址|\n |%cd\t|提交日期|\n |%cr\t|提交日期，按多久以前的方式显示|\n |%s\t|提交说明|\n\n# 待续......\n\n","slug":"git/git_2_operate","published":1,"updated":"2018-05-26T04:25:50.312Z","photos":[],"link":"","_id":"cjrd0e8qr0005kwlivzjqrsvi","content":"<h2 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch new_branch</span><br></pre></td></tr></table></figure>\n<h2 id=\"本地删除分支\"><a href=\"#本地删除分支\" class=\"headerlink\" title=\"本地删除分支\"></a>本地删除分支</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -D delete_branch</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新到远程删除分支\"><a href=\"#更新到远程删除分支\" class=\"headerlink\" title=\"更新到远程删除分支\"></a>更新到远程删除分支</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master </span><br><span class=\"line\">git pull -u   -u origin :delete_branch</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-pull-失败提示fatal-refusing-to-merge-unrelated-histories-处理方法\"><a href=\"#git-pull-失败提示fatal-refusing-to-merge-unrelated-histories-处理方法\" class=\"headerlink\" title=\"git pull 失败提示fatal: refusing to merge unrelated histories ,处理方法\"></a>git pull 失败提示fatal: refusing to merge unrelated histories ,处理方法</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin master --allow-unrelated-historiesn</span><br></pre></td></tr></table></figure>\n<h1 id=\"查看提交提记录\"><a href=\"#查看提交提记录\" class=\"headerlink\" title=\"查看提交提记录\"></a>查看提交提记录</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br><span class=\"line\">git log -p -2  #查看最近两次的提交差异</span><br><span class=\"line\">git log --stat #仅仅现实行数的变更</span><br><span class=\"line\">git log --pretty=oneline #每次提交，在一行显示</span><br><span class=\"line\">git log --pretty=format:\"%h - %an, %ar : %s\"   #格式显示</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>%H</td>\n<td>提交对象（提交）的完整哈希字串</td>\n</tr>\n<tr>\n<td>%h</td>\n<td>提交对象的简短哈希字串</td>\n</tr>\n<tr>\n<td>%T</td>\n<td>树对象（树）的完整哈希字串</td>\n</tr>\n<tr>\n<td>%t</td>\n<td>树对象的简短哈希字串</td>\n</tr>\n<tr>\n<td>%P</td>\n<td>父对象（父）的完整哈希字串</td>\n</tr>\n<tr>\n<td>%p</td>\n<td>父对象的简短哈希字串</td>\n</tr>\n<tr>\n<td>%an</td>\n<td>作者（作者）的名字</td>\n</tr>\n<tr>\n<td>%ae</td>\n<td>作者的电子邮件地址</td>\n</tr>\n<tr>\n<td>%ad</td>\n<td>作者修订日期（可以用-date =选项定制格式）</td>\n</tr>\n<tr>\n<td>%ar</td>\n<td>作者修订日期，按多久以前的方式显示</td>\n</tr>\n<tr>\n<td>%cn</td>\n<td>提交者（提交者）的名字</td>\n</tr>\n<tr>\n<td>%ce</td>\n<td>提交者的电子邮件地址</td>\n</tr>\n<tr>\n<td>%cd</td>\n<td>提交日期</td>\n</tr>\n<tr>\n<td>%cr</td>\n<td>提交日期，按多久以前的方式显示</td>\n</tr>\n<tr>\n<td>%s</td>\n<td>提交说明</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"待续……\"><a href=\"#待续……\" class=\"headerlink\" title=\"待续……\"></a>待续……</h1>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch new_branch</span><br></pre></td></tr></table></figure>\n<h2 id=\"本地删除分支\"><a href=\"#本地删除分支\" class=\"headerlink\" title=\"本地删除分支\"></a>本地删除分支</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -D delete_branch</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新到远程删除分支\"><a href=\"#更新到远程删除分支\" class=\"headerlink\" title=\"更新到远程删除分支\"></a>更新到远程删除分支</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master </span><br><span class=\"line\">git pull -u   -u origin :delete_branch</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-pull-失败提示fatal-refusing-to-merge-unrelated-histories-处理方法\"><a href=\"#git-pull-失败提示fatal-refusing-to-merge-unrelated-histories-处理方法\" class=\"headerlink\" title=\"git pull 失败提示fatal: refusing to merge unrelated histories ,处理方法\"></a>git pull 失败提示fatal: refusing to merge unrelated histories ,处理方法</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin master --allow-unrelated-historiesn</span><br></pre></td></tr></table></figure>\n<h1 id=\"查看提交提记录\"><a href=\"#查看提交提记录\" class=\"headerlink\" title=\"查看提交提记录\"></a>查看提交提记录</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br><span class=\"line\">git log -p -2  #查看最近两次的提交差异</span><br><span class=\"line\">git log --stat #仅仅现实行数的变更</span><br><span class=\"line\">git log --pretty=oneline #每次提交，在一行显示</span><br><span class=\"line\">git log --pretty=format:\"%h - %an, %ar : %s\"   #格式显示</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>%H</td>\n<td>提交对象（提交）的完整哈希字串</td>\n</tr>\n<tr>\n<td>%h</td>\n<td>提交对象的简短哈希字串</td>\n</tr>\n<tr>\n<td>%T</td>\n<td>树对象（树）的完整哈希字串</td>\n</tr>\n<tr>\n<td>%t</td>\n<td>树对象的简短哈希字串</td>\n</tr>\n<tr>\n<td>%P</td>\n<td>父对象（父）的完整哈希字串</td>\n</tr>\n<tr>\n<td>%p</td>\n<td>父对象的简短哈希字串</td>\n</tr>\n<tr>\n<td>%an</td>\n<td>作者（作者）的名字</td>\n</tr>\n<tr>\n<td>%ae</td>\n<td>作者的电子邮件地址</td>\n</tr>\n<tr>\n<td>%ad</td>\n<td>作者修订日期（可以用-date =选项定制格式）</td>\n</tr>\n<tr>\n<td>%ar</td>\n<td>作者修订日期，按多久以前的方式显示</td>\n</tr>\n<tr>\n<td>%cn</td>\n<td>提交者（提交者）的名字</td>\n</tr>\n<tr>\n<td>%ce</td>\n<td>提交者的电子邮件地址</td>\n</tr>\n<tr>\n<td>%cd</td>\n<td>提交日期</td>\n</tr>\n<tr>\n<td>%cr</td>\n<td>提交日期，按多久以前的方式显示</td>\n</tr>\n<tr>\n<td>%s</td>\n<td>提交说明</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"待续……\"><a href=\"#待续……\" class=\"headerlink\" title=\"待续……\"></a>待续……</h1>"},{"layout":"post","title":"最小化安装centos7配置问题","date":"2018-10-05T02:34:58.000Z","comments":1,"_content":"\n# 最小化安装启用网卡\n\n```shell\n\tvi /etc/sysconfig/network-scripts/ifcfg-[网卡]\n\n\t修改 ONBOOT=yes\n\tservice network restart\n\n```\n\n# ip  命令替代了config, 常见用法\n\n```shell\n\nip link show                           # 显示网络接口信息\n\nip link set eth0 upi                   # 开启网卡\n\nip link set eth0 down                  # 关闭网卡\n\nip link set eth0 promisc on            # 开启网卡的混合模式\n\nip link set eth0 promisc offi          # 关闭网卡的混个模式\n\nip link set eth0 txqueuelen 1200       # 设置网卡队列长度\n\nip link set eth0 mtu 1400              # 设置网卡最大传输单元\n\nip addr show                           # 显示网卡IP信息\n\nip addr add 192.168.0.1/24 dev eth0    # 设置eth0网卡IP地址192.168.0.1\n\nip addr del 192.168.0.1/24 dev eth0    # 删除eth0网卡IP地址\n\n\nip route list                                            # 查看路由信息\n\nip route add 192.168.4.0/24  via  192.168.0.254 dev eth0 # 设置192.168.4.0网段的网关为192.168.0.254,数据走eth0接口\n\nip route add default via  192.168.0.254  dev eth0        # 设置默认网关为192.168.0.254\n```\n\n#  英文环境的mac远程centos虚拟机乱码\n\n## 原因分析\n* mac默认是\n```shell\n\tLANG=en_US.utf-8  // 设置区域语言，比如提示信息，日期等等\n\tLC_ALL=en_US.utf-8\n```\n* 远程虚拟机最小化安装\n\techo $LANG \n\n## linux 配置问价加载顺序是\n\n```shell\n默认登陆方式，\n/etc/enviroment->/etc/profile -->$HOME/.profile   -->$HOME/.env\n```\n* /etc/profile是登陆后读取的，如果文件显示乱码，可以在/etc/profile中配置\n\n``` shell\n\tvim /etc/profile\n\texport LC_ALL=zh_CN.utf-8\n```\n\n# 如果ssh远程出现如下问题\n* \"-bash: 警告:setlocale: LC_CTYPE: 无法改变区域选项 (UTF-8): 没有那个文件或目录\"\n\n是加载/etc/enviroment文件,找LANG变量\n\n```shell\n\tvim /etc/environment\n\tLANG=zh_CN.utf-8\n\t如果/etc/environment 中没有设置该变量LANG，依然会报错，不能在profile中设置\n```\n\n","source":"_posts/linux/2018-10-05_linux.md","raw":"---\nlayout: post\ntitle: 最小化安装centos7配置问题  \ncategory: linux  \ntags: hexo\ndate: 2018-10-05 10:34:58\ncomments: true\n---\n\n# 最小化安装启用网卡\n\n```shell\n\tvi /etc/sysconfig/network-scripts/ifcfg-[网卡]\n\n\t修改 ONBOOT=yes\n\tservice network restart\n\n```\n\n# ip  命令替代了config, 常见用法\n\n```shell\n\nip link show                           # 显示网络接口信息\n\nip link set eth0 upi                   # 开启网卡\n\nip link set eth0 down                  # 关闭网卡\n\nip link set eth0 promisc on            # 开启网卡的混合模式\n\nip link set eth0 promisc offi          # 关闭网卡的混个模式\n\nip link set eth0 txqueuelen 1200       # 设置网卡队列长度\n\nip link set eth0 mtu 1400              # 设置网卡最大传输单元\n\nip addr show                           # 显示网卡IP信息\n\nip addr add 192.168.0.1/24 dev eth0    # 设置eth0网卡IP地址192.168.0.1\n\nip addr del 192.168.0.1/24 dev eth0    # 删除eth0网卡IP地址\n\n\nip route list                                            # 查看路由信息\n\nip route add 192.168.4.0/24  via  192.168.0.254 dev eth0 # 设置192.168.4.0网段的网关为192.168.0.254,数据走eth0接口\n\nip route add default via  192.168.0.254  dev eth0        # 设置默认网关为192.168.0.254\n```\n\n#  英文环境的mac远程centos虚拟机乱码\n\n## 原因分析\n* mac默认是\n```shell\n\tLANG=en_US.utf-8  // 设置区域语言，比如提示信息，日期等等\n\tLC_ALL=en_US.utf-8\n```\n* 远程虚拟机最小化安装\n\techo $LANG \n\n## linux 配置问价加载顺序是\n\n```shell\n默认登陆方式，\n/etc/enviroment->/etc/profile -->$HOME/.profile   -->$HOME/.env\n```\n* /etc/profile是登陆后读取的，如果文件显示乱码，可以在/etc/profile中配置\n\n``` shell\n\tvim /etc/profile\n\texport LC_ALL=zh_CN.utf-8\n```\n\n# 如果ssh远程出现如下问题\n* \"-bash: 警告:setlocale: LC_CTYPE: 无法改变区域选项 (UTF-8): 没有那个文件或目录\"\n\n是加载/etc/enviroment文件,找LANG变量\n\n```shell\n\tvim /etc/environment\n\tLANG=zh_CN.utf-8\n\t如果/etc/environment 中没有设置该变量LANG，依然会报错，不能在profile中设置\n```\n\n","slug":"linux/2018-10-05_linux","published":1,"updated":"2018-10-05T04:31:35.927Z","photos":[],"link":"","_id":"cjrd0e8qt0007kwli7zze547x","content":"<h1 id=\"最小化安装启用网卡\"><a href=\"#最小化安装启用网卡\" class=\"headerlink\" title=\"最小化安装启用网卡\"></a>最小化安装启用网卡</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-[网卡]</span><br><span class=\"line\"></span><br><span class=\"line\">修改 ONBOOT=yes</span><br><span class=\"line\">service network restart</span><br></pre></td></tr></table></figure>\n<h1 id=\"ip-命令替代了config-常见用法\"><a href=\"#ip-命令替代了config-常见用法\" class=\"headerlink\" title=\"ip  命令替代了config, 常见用法\"></a>ip  命令替代了config, 常见用法</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ip link show                           # 显示网络接口信息</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 upi                   # 开启网卡</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 down                  # 关闭网卡</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 promisc on            # 开启网卡的混合模式</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 promisc offi          # 关闭网卡的混个模式</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 txqueuelen 1200       # 设置网卡队列长度</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 mtu 1400              # 设置网卡最大传输单元</span><br><span class=\"line\"></span><br><span class=\"line\">ip addr show                           # 显示网卡IP信息</span><br><span class=\"line\"></span><br><span class=\"line\">ip addr add 192.168.0.1/24 dev eth0    # 设置eth0网卡IP地址192.168.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">ip addr del 192.168.0.1/24 dev eth0    # 删除eth0网卡IP地址</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ip route list                                            # 查看路由信息</span><br><span class=\"line\"></span><br><span class=\"line\">ip route add 192.168.4.0/24  via  192.168.0.254 dev eth0 # 设置192.168.4.0网段的网关为192.168.0.254,数据走eth0接口</span><br><span class=\"line\"></span><br><span class=\"line\">ip route add default via  192.168.0.254  dev eth0        # 设置默认网关为192.168.0.254</span><br></pre></td></tr></table></figure>\n<h1 id=\"英文环境的mac远程centos虚拟机乱码\"><a href=\"#英文环境的mac远程centos虚拟机乱码\" class=\"headerlink\" title=\"英文环境的mac远程centos虚拟机乱码\"></a>英文环境的mac远程centos虚拟机乱码</h1><h2 id=\"原因分析\"><a href=\"#原因分析\" class=\"headerlink\" title=\"原因分析\"></a>原因分析</h2><ul>\n<li><p>mac默认是</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LANG=en_US.utf-8  // 设置区域语言，比如提示信息，日期等等</span><br><span class=\"line\">LC_ALL=en_US.utf-8</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>远程虚拟机最小化安装<br>  echo $LANG </p>\n</li>\n</ul>\n<h2 id=\"linux-配置问价加载顺序是\"><a href=\"#linux-配置问价加载顺序是\" class=\"headerlink\" title=\"linux 配置问价加载顺序是\"></a>linux 配置问价加载顺序是</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">默认登陆方式，</span><br><span class=\"line\">/etc/enviroment-&gt;/etc/profile --&gt;$HOME/.profile   --&gt;$HOME/.env</span><br></pre></td></tr></table></figure>\n<ul>\n<li>/etc/profile是登陆后读取的，如果文件显示乱码，可以在/etc/profile中配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\">export LC_ALL=zh_CN.utf-8</span><br></pre></td></tr></table></figure>\n<h1 id=\"如果ssh远程出现如下问题\"><a href=\"#如果ssh远程出现如下问题\" class=\"headerlink\" title=\"如果ssh远程出现如下问题\"></a>如果ssh远程出现如下问题</h1><ul>\n<li>“-bash: 警告:setlocale: LC_CTYPE: 无法改变区域选项 (UTF-8): 没有那个文件或目录”</li>\n</ul>\n<p>是加载/etc/enviroment文件,找LANG变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/environment</span><br><span class=\"line\">LANG=zh_CN.utf-8</span><br><span class=\"line\">如果/etc/environment 中没有设置该变量LANG，依然会报错，不能在profile中设置</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"最小化安装启用网卡\"><a href=\"#最小化安装启用网卡\" class=\"headerlink\" title=\"最小化安装启用网卡\"></a>最小化安装启用网卡</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-[网卡]</span><br><span class=\"line\"></span><br><span class=\"line\">修改 ONBOOT=yes</span><br><span class=\"line\">service network restart</span><br></pre></td></tr></table></figure>\n<h1 id=\"ip-命令替代了config-常见用法\"><a href=\"#ip-命令替代了config-常见用法\" class=\"headerlink\" title=\"ip  命令替代了config, 常见用法\"></a>ip  命令替代了config, 常见用法</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ip link show                           # 显示网络接口信息</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 upi                   # 开启网卡</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 down                  # 关闭网卡</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 promisc on            # 开启网卡的混合模式</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 promisc offi          # 关闭网卡的混个模式</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 txqueuelen 1200       # 设置网卡队列长度</span><br><span class=\"line\"></span><br><span class=\"line\">ip link set eth0 mtu 1400              # 设置网卡最大传输单元</span><br><span class=\"line\"></span><br><span class=\"line\">ip addr show                           # 显示网卡IP信息</span><br><span class=\"line\"></span><br><span class=\"line\">ip addr add 192.168.0.1/24 dev eth0    # 设置eth0网卡IP地址192.168.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">ip addr del 192.168.0.1/24 dev eth0    # 删除eth0网卡IP地址</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ip route list                                            # 查看路由信息</span><br><span class=\"line\"></span><br><span class=\"line\">ip route add 192.168.4.0/24  via  192.168.0.254 dev eth0 # 设置192.168.4.0网段的网关为192.168.0.254,数据走eth0接口</span><br><span class=\"line\"></span><br><span class=\"line\">ip route add default via  192.168.0.254  dev eth0        # 设置默认网关为192.168.0.254</span><br></pre></td></tr></table></figure>\n<h1 id=\"英文环境的mac远程centos虚拟机乱码\"><a href=\"#英文环境的mac远程centos虚拟机乱码\" class=\"headerlink\" title=\"英文环境的mac远程centos虚拟机乱码\"></a>英文环境的mac远程centos虚拟机乱码</h1><h2 id=\"原因分析\"><a href=\"#原因分析\" class=\"headerlink\" title=\"原因分析\"></a>原因分析</h2><ul>\n<li><p>mac默认是</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LANG=en_US.utf-8  // 设置区域语言，比如提示信息，日期等等</span><br><span class=\"line\">LC_ALL=en_US.utf-8</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>远程虚拟机最小化安装<br>  echo $LANG </p>\n</li>\n</ul>\n<h2 id=\"linux-配置问价加载顺序是\"><a href=\"#linux-配置问价加载顺序是\" class=\"headerlink\" title=\"linux 配置问价加载顺序是\"></a>linux 配置问价加载顺序是</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">默认登陆方式，</span><br><span class=\"line\">/etc/enviroment-&gt;/etc/profile --&gt;$HOME/.profile   --&gt;$HOME/.env</span><br></pre></td></tr></table></figure>\n<ul>\n<li>/etc/profile是登陆后读取的，如果文件显示乱码，可以在/etc/profile中配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\">export LC_ALL=zh_CN.utf-8</span><br></pre></td></tr></table></figure>\n<h1 id=\"如果ssh远程出现如下问题\"><a href=\"#如果ssh远程出现如下问题\" class=\"headerlink\" title=\"如果ssh远程出现如下问题\"></a>如果ssh远程出现如下问题</h1><ul>\n<li>“-bash: 警告:setlocale: LC_CTYPE: 无法改变区域选项 (UTF-8): 没有那个文件或目录”</li>\n</ul>\n<p>是加载/etc/enviroment文件,找LANG变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/environment</span><br><span class=\"line\">LANG=zh_CN.utf-8</span><br><span class=\"line\">如果/etc/environment 中没有设置该变量LANG，依然会报错，不能在profile中设置</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"LinuxFTP的建立","date":"2016-07-31T03:30:55.000Z","comments":1,"_content":"\n# linux FTP建立，条件：\n安装vsftpd：\n配置vsftpd的配置文件：\nvim /etc/vsftpd.conf\n\nanonymous_enbale =NO  //关闭匿名登录\nlocal_enbale=YES  //允许本地用户，就是ftp建立者的用户名和密码\nwrite_enbale=YES  //允许写入，就是上传文件到ftp\n\n反注释掉：\nascii_upload_enbale=YES\nascii_download_enbale=YES\n\n默认的ftp目录就是home下的user目录，包含桌面，下载等等文件夹。\n","source":"_posts/linux/LinuxFTP.md","raw":"---\nlayout: post\ntitle: LinuxFTP的建立\ncategory: linux\ndate: 2016-7-31 11:30:55\ncomments: true\n\n---\n\n# linux FTP建立，条件：\n安装vsftpd：\n配置vsftpd的配置文件：\nvim /etc/vsftpd.conf\n\nanonymous_enbale =NO  //关闭匿名登录\nlocal_enbale=YES  //允许本地用户，就是ftp建立者的用户名和密码\nwrite_enbale=YES  //允许写入，就是上传文件到ftp\n\n反注释掉：\nascii_upload_enbale=YES\nascii_download_enbale=YES\n\n默认的ftp目录就是home下的user目录，包含桌面，下载等等文件夹。\n","slug":"linux/LinuxFTP","published":1,"updated":"2018-10-20T16:38:57.314Z","photos":[],"link":"","_id":"cjrd0e8qu0009kwlixwkox2fv","content":"<h1 id=\"linux-FTP建立，条件：\"><a href=\"#linux-FTP建立，条件：\" class=\"headerlink\" title=\"linux FTP建立，条件：\"></a>linux FTP建立，条件：</h1><p>安装vsftpd：<br>配置vsftpd的配置文件：<br>vim /etc/vsftpd.conf</p>\n<p>anonymous_enbale =NO  //关闭匿名登录<br>local_enbale=YES  //允许本地用户，就是ftp建立者的用户名和密码<br>write_enbale=YES  //允许写入，就是上传文件到ftp</p>\n<p>反注释掉：<br>ascii_upload_enbale=YES<br>ascii_download_enbale=YES</p>\n<p>默认的ftp目录就是home下的user目录，包含桌面，下载等等文件夹。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"linux-FTP建立，条件：\"><a href=\"#linux-FTP建立，条件：\" class=\"headerlink\" title=\"linux FTP建立，条件：\"></a>linux FTP建立，条件：</h1><p>安装vsftpd：<br>配置vsftpd的配置文件：<br>vim /etc/vsftpd.conf</p>\n<p>anonymous_enbale =NO  //关闭匿名登录<br>local_enbale=YES  //允许本地用户，就是ftp建立者的用户名和密码<br>write_enbale=YES  //允许写入，就是上传文件到ftp</p>\n<p>反注释掉：<br>ascii_upload_enbale=YES<br>ascii_download_enbale=YES</p>\n<p>默认的ftp目录就是home下的user目录，包含桌面，下载等等文件夹。</p>\n"},{"layout":"post","title":"apache_wsgi支持python脚本","date":"2017-01-07T06:00:00.000Z","_content":"\n# apache支持python脚本\n\n配置httpd.conf\n追加：\n```shell\nLoadModule wsgi_module modules/mod_wsgi.so \n\nWSGIScriptAlias / C:/xampp/www/py/myweb/myweb/wsgi.py  \nWSGIPythonPath C:/xampp/www/py/myweb   #django 项目目录\nDocumentRoot \"C:/xampp/www/py/myweb/myweb\" #具体应用目录\n<Directory \"C:/xampp/www\">\n\nOptions Indexes FollowSymLinks Includes ExecCGI\nAllowOverride All\nRequire all granted\n</Directory>\n```\nOptions Indexes FollowSymLinks Includes ExecCGI\n禁止显示Apache目录列表-Indexes FollowSymLinks\n如何修改目录的配置以禁止显示 Apache 目录列表。\n减号和去掉indexes是一样的效果 ，都是不存在index时，不要显示目录结构，安全起见。\nxampp 中的不带减号，依然不可以访问目录。目前不知道原因。可能做了某些安全设置。\n\nAllowOverride参数就是指明Apache服务器是否去找.htacess文件作为配置文件，如果设置为none,那么服务器将忽略.htacess文件，如果设置为All,那么所有在.htaccess文件里有的指令都将被重写。\n\nRequire all granted\n    允许所有请求访问资源\n","source":"_posts/linux/apache_wsgi.md","raw":"---\nlayout: post\ntitle: apache_wsgi支持python脚本\ndate: 2017-1-7 14:00:00\ncategory: linux \n\n---\n\n# apache支持python脚本\n\n配置httpd.conf\n追加：\n```shell\nLoadModule wsgi_module modules/mod_wsgi.so \n\nWSGIScriptAlias / C:/xampp/www/py/myweb/myweb/wsgi.py  \nWSGIPythonPath C:/xampp/www/py/myweb   #django 项目目录\nDocumentRoot \"C:/xampp/www/py/myweb/myweb\" #具体应用目录\n<Directory \"C:/xampp/www\">\n\nOptions Indexes FollowSymLinks Includes ExecCGI\nAllowOverride All\nRequire all granted\n</Directory>\n```\nOptions Indexes FollowSymLinks Includes ExecCGI\n禁止显示Apache目录列表-Indexes FollowSymLinks\n如何修改目录的配置以禁止显示 Apache 目录列表。\n减号和去掉indexes是一样的效果 ，都是不存在index时，不要显示目录结构，安全起见。\nxampp 中的不带减号，依然不可以访问目录。目前不知道原因。可能做了某些安全设置。\n\nAllowOverride参数就是指明Apache服务器是否去找.htacess文件作为配置文件，如果设置为none,那么服务器将忽略.htacess文件，如果设置为All,那么所有在.htaccess文件里有的指令都将被重写。\n\nRequire all granted\n    允许所有请求访问资源\n","slug":"linux/apache_wsgi","published":1,"updated":"2019-01-26T04:59:17.452Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8qv000akwli8s0shlvz","content":"<h1 id=\"apache支持python脚本\"><a href=\"#apache支持python脚本\" class=\"headerlink\" title=\"apache支持python脚本\"></a>apache支持python脚本</h1><p>配置httpd.conf<br>追加：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadModule wsgi_module modules/mod_wsgi.so </span><br><span class=\"line\"></span><br><span class=\"line\">WSGIScriptAlias / C:/xampp/www/py/myweb/myweb/wsgi.py  </span><br><span class=\"line\">WSGIPythonPath C:/xampp/www/py/myweb   #django 项目目录</span><br><span class=\"line\">DocumentRoot \"C:/xampp/www/py/myweb/myweb\" #具体应用目录</span><br><span class=\"line\">&lt;Directory \"C:/xampp/www\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Options Indexes FollowSymLinks Includes ExecCGI</span><br><span class=\"line\">AllowOverride All</span><br><span class=\"line\">Require all granted</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p>\n<p>Options Indexes FollowSymLinks Includes ExecCGI<br>禁止显示Apache目录列表-Indexes FollowSymLinks<br>如何修改目录的配置以禁止显示 Apache 目录列表。<br>减号和去掉indexes是一样的效果 ，都是不存在index时，不要显示目录结构，安全起见。<br>xampp 中的不带减号，依然不可以访问目录。目前不知道原因。可能做了某些安全设置。</p>\n<p>AllowOverride参数就是指明Apache服务器是否去找.htacess文件作为配置文件，如果设置为none,那么服务器将忽略.htacess文件，如果设置为All,那么所有在.htaccess文件里有的指令都将被重写。</p>\n<p>Require all granted<br>    允许所有请求访问资源</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"apache支持python脚本\"><a href=\"#apache支持python脚本\" class=\"headerlink\" title=\"apache支持python脚本\"></a>apache支持python脚本</h1><p>配置httpd.conf<br>追加：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadModule wsgi_module modules/mod_wsgi.so </span><br><span class=\"line\"></span><br><span class=\"line\">WSGIScriptAlias / C:/xampp/www/py/myweb/myweb/wsgi.py  </span><br><span class=\"line\">WSGIPythonPath C:/xampp/www/py/myweb   #django 项目目录</span><br><span class=\"line\">DocumentRoot \"C:/xampp/www/py/myweb/myweb\" #具体应用目录</span><br><span class=\"line\">&lt;Directory \"C:/xampp/www\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Options Indexes FollowSymLinks Includes ExecCGI</span><br><span class=\"line\">AllowOverride All</span><br><span class=\"line\">Require all granted</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p>\n<p>Options Indexes FollowSymLinks Includes ExecCGI<br>禁止显示Apache目录列表-Indexes FollowSymLinks<br>如何修改目录的配置以禁止显示 Apache 目录列表。<br>减号和去掉indexes是一样的效果 ，都是不存在index时，不要显示目录结构，安全起见。<br>xampp 中的不带减号，依然不可以访问目录。目前不知道原因。可能做了某些安全设置。</p>\n<p>AllowOverride参数就是指明Apache服务器是否去找.htacess文件作为配置文件，如果设置为none,那么服务器将忽略.htacess文件，如果设置为All,那么所有在.htaccess文件里有的指令都将被重写。</p>\n<p>Require all granted<br>    允许所有请求访问资源</p>\n"},{"layout":"post","title":"centos6.4 安装python mysql扩展","date":"2018-06-30T02:15:00.000Z","_content":"\n\n\n要想使python可以操作mysql 就需要MySQL-python驱动，它是python 操作mysql必不可少的模块。\n\n下载地址：https://pypi.python.org/pypi/MySQL-python/\n\n下载MySQL-python-1.2.5.zip 文件之后直接解压。进入MySQL-python-1.2.5目录:\n\npython setup.py install\n\n报错：\n\n[root@centos7 MySQL-python-1.2.4]# python setup.py install\n\nsh: mysql_config: command not found\n\nTraceback (most recent call last):\n\n  File \"setup.py\", line 18, in <module>\n\n    metadata, options = get_config()\n\n  File \"/root/MySQL-python-1.2.4/setup_posix.py\", line 43, in get_config\n\n    libs = mysql_config(\"libs_r\")\n\n  File \"/root/MySQL-python-1.2.4/setup_posix.py\", line 25, in mysql_config\n\n    raise EnvironmentError(\"%s not found\" % (mysql_config.path,))\n\nEnvironmentError: mysql_config not found\n\n网上查了一下需安装mysql-devel \n\n#yum -y install mysql-devel \n\n安装成功后\n\n# python setup.py install\n\n安装成功。\n","source":"_posts/linux/centos6.4install-mysql-python.md","raw":"---\nlayout: post\ntitle: centos6.4 安装python mysql扩展 \ndate: 2018-6-30 10:15:00\ncategory: c\n\n---\n\n\n\n要想使python可以操作mysql 就需要MySQL-python驱动，它是python 操作mysql必不可少的模块。\n\n下载地址：https://pypi.python.org/pypi/MySQL-python/\n\n下载MySQL-python-1.2.5.zip 文件之后直接解压。进入MySQL-python-1.2.5目录:\n\npython setup.py install\n\n报错：\n\n[root@centos7 MySQL-python-1.2.4]# python setup.py install\n\nsh: mysql_config: command not found\n\nTraceback (most recent call last):\n\n  File \"setup.py\", line 18, in <module>\n\n    metadata, options = get_config()\n\n  File \"/root/MySQL-python-1.2.4/setup_posix.py\", line 43, in get_config\n\n    libs = mysql_config(\"libs_r\")\n\n  File \"/root/MySQL-python-1.2.4/setup_posix.py\", line 25, in mysql_config\n\n    raise EnvironmentError(\"%s not found\" % (mysql_config.path,))\n\nEnvironmentError: mysql_config not found\n\n网上查了一下需安装mysql-devel \n\n#yum -y install mysql-devel \n\n安装成功后\n\n# python setup.py install\n\n安装成功。\n","slug":"linux/centos6.4install-mysql-python","published":1,"updated":"2019-01-26T04:59:59.657Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8qz000fkwlivr7vrp06","content":"<p>要想使python可以操作mysql 就需要MySQL-python驱动，它是python 操作mysql必不可少的模块。</p>\n<p>下载地址：<a href=\"https://pypi.python.org/pypi/MySQL-python/\" target=\"_blank\" rel=\"noopener\">https://pypi.python.org/pypi/MySQL-python/</a></p>\n<p>下载MySQL-python-1.2.5.zip 文件之后直接解压。进入MySQL-python-1.2.5目录:</p>\n<p>python setup.py install</p>\n<p>报错：</p>\n<p>[root@centos7 MySQL-python-1.2.4]# python setup.py install</p>\n<p>sh: mysql_config: command not found</p>\n<p>Traceback (most recent call last):</p>\n<p>  File “setup.py”, line 18, in <module></module></p>\n<pre><code>metadata, options = get_config()\n</code></pre><p>  File “/root/MySQL-python-1.2.4/setup_posix.py”, line 43, in get_config</p>\n<pre><code>libs = mysql_config(&quot;libs_r&quot;)\n</code></pre><p>  File “/root/MySQL-python-1.2.4/setup_posix.py”, line 25, in mysql_config</p>\n<pre><code>raise EnvironmentError(&quot;%s not found&quot; % (mysql_config.path,))\n</code></pre><p>EnvironmentError: mysql_config not found</p>\n<p>网上查了一下需安装mysql-devel </p>\n<p>#yum -y install mysql-devel </p>\n<p>安装成功后</p>\n<h1 id=\"python-setup-py-install\"><a href=\"#python-setup-py-install\" class=\"headerlink\" title=\"python setup.py install\"></a>python setup.py install</h1><p>安装成功。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>要想使python可以操作mysql 就需要MySQL-python驱动，它是python 操作mysql必不可少的模块。</p>\n<p>下载地址：<a href=\"https://pypi.python.org/pypi/MySQL-python/\" target=\"_blank\" rel=\"noopener\">https://pypi.python.org/pypi/MySQL-python/</a></p>\n<p>下载MySQL-python-1.2.5.zip 文件之后直接解压。进入MySQL-python-1.2.5目录:</p>\n<p>python setup.py install</p>\n<p>报错：</p>\n<p>[root@centos7 MySQL-python-1.2.4]# python setup.py install</p>\n<p>sh: mysql_config: command not found</p>\n<p>Traceback (most recent call last):</p>\n<p>  File “setup.py”, line 18, in <module></module></p>\n<pre><code>metadata, options = get_config()\n</code></pre><p>  File “/root/MySQL-python-1.2.4/setup_posix.py”, line 43, in get_config</p>\n<pre><code>libs = mysql_config(&quot;libs_r&quot;)\n</code></pre><p>  File “/root/MySQL-python-1.2.4/setup_posix.py”, line 25, in mysql_config</p>\n<pre><code>raise EnvironmentError(&quot;%s not found&quot; % (mysql_config.path,))\n</code></pre><p>EnvironmentError: mysql_config not found</p>\n<p>网上查了一下需安装mysql-devel </p>\n<p>#yum -y install mysql-devel </p>\n<p>安装成功后</p>\n<h1 id=\"python-setup-py-install\"><a href=\"#python-setup-py-install\" class=\"headerlink\" title=\"python setup.py install\"></a>python setup.py install</h1><p>安装成功。</p>\n"},{"layout":"post","title":"centos6.4 升级python到2.7","date":"2018-06-30T02:15:00.000Z","_content":"\n# 1. download source\n```c\nwget https://www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz\n\n```\n\n# 2. compire and install\n```c\ntar zxvf Python-2.7.12.tgz\ncd Python-2.7.12\n./configure --prefix=/usr/local/python27 && make && make install && echo $?\n如果以上输出为0，说明没有报错，安装正常\n```\n\n# 3. add path and backup the python2.6 \n```c \n移除以前的版本\nmv /usr/bin/python /usr/bin/python26\n创建软连接\nln -s /usr/local/python27/bin/python /usr/bin/python\n查看版本是否升级成功\npython -V\nPython 2.7.12\n```\n\n# 4. modify yum\n```c\n如果不修改此项，会导致yum无法使用\nvim /usr/bin/yum\n修改第一行即可，将环境变量指向以前的python版本\n#!/usr/bin/python26\n```\n# 5. reinstall pip \n```c\n1.安装pip之前首先需要安装setuptools\n下载链接\nhttps://pypi.python.org/pypi/setuptools\n下载地址\nwget https://pypi.python.org/packages/ff/d4/209f4939c49e31f5524fa0027bf1c8ec3107abaf7c61fdaad704a648c281/setuptools-21.0.0.tar.gz#md5=81964fdb89534118707742e6d1a1ddb4 --no-check-certificate\n解压\ntar zxvf setuptools-21.0.0.tar.gz\n安装\ncd setuptools-21.0.0\npython setup.py  install\n\n2.安装pip\n下载链接\nhttps://pypi.python.org/pypi/pip\n下载地址\nwget https://pypi.python.org/packages/41/27/9a8d24e1b55bd8c85e4d022da2922cb206f183e2d18fee4e320c9547e751/pip-8.1.1.tar.gz#md5=6b86f11841e89c8241d689956ba99ed7 --no-check-certificate\n解压\ntar zxvf pip-8.1.1.tar.gz \n安装 \ncd pip-8.1.1\npython setup.py install\n\n3.添加环境变量\n安装完之后，之后执行pip还是调用的以前的环境变量，需要手动添加环境变量\nmv /usr/bin/pip /usr/bin/pip26\nln -s /usr/local/python27/bin/pip /usr/bin/\n再次查看版本\npip -V\npip 8.1.1 from /usr/local/python27/lib/python2.7/site-packages/pip-8.1.1-py2.7.egg (python 2.7)\n```\n\n# 6.使用pip安装第三方库\n\n```c\n如果报错locale.Error: unsupported locale setting\n加入环境变量：\nexport LANGUAGE=en_US.UTF-8\nexport LC_ALL=en_US.UTF-8\n\npip install psutil\npip install MySQLdb-python\npip install django=1.8.2\n\n报错：\n pip install MySQLdb-python\nCollecting MySQLdb-python\n  Retrying (Retry(total=4, connect=None, read=None, redirect=None)) after connection broken by 'ReadTimeoutError(\"HTTPSConnectionPool(host='pypi.python.org', port=443): Read timed out. (read timeout=15)\",)': /simple/mysqldb-python/\n  Could not find a version that satisfies the requirement MySQLdb-python (from versions: )\nNo matching distribution found for MySQLdb-python\nYou are using pip version 8.1.1, however version 9.0.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n当安装中提示版本太低的时候，执行提示的命令进行升级即可\npip install --upgrade pip\n升级完重新执行要安装的库\n```\n","source":"_posts/linux/centos6.4升级python.md","raw":"---\nlayout: post\ntitle: centos6.4 升级python到2.7 \ndate: 2018-6-30 10:15:00\n---\n\n# 1. download source\n```c\nwget https://www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz\n\n```\n\n# 2. compire and install\n```c\ntar zxvf Python-2.7.12.tgz\ncd Python-2.7.12\n./configure --prefix=/usr/local/python27 && make && make install && echo $?\n如果以上输出为0，说明没有报错，安装正常\n```\n\n# 3. add path and backup the python2.6 \n```c \n移除以前的版本\nmv /usr/bin/python /usr/bin/python26\n创建软连接\nln -s /usr/local/python27/bin/python /usr/bin/python\n查看版本是否升级成功\npython -V\nPython 2.7.12\n```\n\n# 4. modify yum\n```c\n如果不修改此项，会导致yum无法使用\nvim /usr/bin/yum\n修改第一行即可，将环境变量指向以前的python版本\n#!/usr/bin/python26\n```\n# 5. reinstall pip \n```c\n1.安装pip之前首先需要安装setuptools\n下载链接\nhttps://pypi.python.org/pypi/setuptools\n下载地址\nwget https://pypi.python.org/packages/ff/d4/209f4939c49e31f5524fa0027bf1c8ec3107abaf7c61fdaad704a648c281/setuptools-21.0.0.tar.gz#md5=81964fdb89534118707742e6d1a1ddb4 --no-check-certificate\n解压\ntar zxvf setuptools-21.0.0.tar.gz\n安装\ncd setuptools-21.0.0\npython setup.py  install\n\n2.安装pip\n下载链接\nhttps://pypi.python.org/pypi/pip\n下载地址\nwget https://pypi.python.org/packages/41/27/9a8d24e1b55bd8c85e4d022da2922cb206f183e2d18fee4e320c9547e751/pip-8.1.1.tar.gz#md5=6b86f11841e89c8241d689956ba99ed7 --no-check-certificate\n解压\ntar zxvf pip-8.1.1.tar.gz \n安装 \ncd pip-8.1.1\npython setup.py install\n\n3.添加环境变量\n安装完之后，之后执行pip还是调用的以前的环境变量，需要手动添加环境变量\nmv /usr/bin/pip /usr/bin/pip26\nln -s /usr/local/python27/bin/pip /usr/bin/\n再次查看版本\npip -V\npip 8.1.1 from /usr/local/python27/lib/python2.7/site-packages/pip-8.1.1-py2.7.egg (python 2.7)\n```\n\n# 6.使用pip安装第三方库\n\n```c\n如果报错locale.Error: unsupported locale setting\n加入环境变量：\nexport LANGUAGE=en_US.UTF-8\nexport LC_ALL=en_US.UTF-8\n\npip install psutil\npip install MySQLdb-python\npip install django=1.8.2\n\n报错：\n pip install MySQLdb-python\nCollecting MySQLdb-python\n  Retrying (Retry(total=4, connect=None, read=None, redirect=None)) after connection broken by 'ReadTimeoutError(\"HTTPSConnectionPool(host='pypi.python.org', port=443): Read timed out. (read timeout=15)\",)': /simple/mysqldb-python/\n  Could not find a version that satisfies the requirement MySQLdb-python (from versions: )\nNo matching distribution found for MySQLdb-python\nYou are using pip version 8.1.1, however version 9.0.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n当安装中提示版本太低的时候，执行提示的命令进行升级即可\npip install --upgrade pip\n升级完重新执行要安装的库\n```\n","slug":"linux/centos6.4升级python","published":1,"updated":"2018-06-30T03:23:21.252Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8r3000gkwlivs2csmgf","content":"<h1 id=\"1-download-source\"><a href=\"#1-download-source\" class=\"headerlink\" title=\"1. download source\"></a>1. download source</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"comment\">//www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"2-compire-and-install\"><a href=\"#2-compire-and-install\" class=\"headerlink\" title=\"2. compire and install\"></a>2. compire and install</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf Python<span class=\"number\">-2.7</span><span class=\"number\">.12</span>.tgz</span><br><span class=\"line\">cd Python<span class=\"number\">-2.7</span><span class=\"number\">.12</span></span><br><span class=\"line\">./configure --prefix=/usr/local/python27 &amp;&amp; make &amp;&amp; make install &amp;&amp; echo $?</span><br><span class=\"line\">如果以上输出为<span class=\"number\">0</span>，说明没有报错，安装正常</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-add-path-and-backup-the-python2-6\"><a href=\"#3-add-path-and-backup-the-python2-6\" class=\"headerlink\" title=\"3. add path and backup the python2.6\"></a>3. add path and backup the python2.6</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">移除以前的版本</span><br><span class=\"line\">mv /usr/bin/python /usr/bin/python26</span><br><span class=\"line\">创建软连接</span><br><span class=\"line\">ln -s /usr/local/python27/bin/python /usr/bin/python</span><br><span class=\"line\">查看版本是否升级成功</span><br><span class=\"line\">python -V</span><br><span class=\"line\">Python <span class=\"number\">2.7</span><span class=\"number\">.12</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"4-modify-yum\"><a href=\"#4-modify-yum\" class=\"headerlink\" title=\"4. modify yum\"></a>4. modify yum</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果不修改此项，会导致yum无法使用</span><br><span class=\"line\">vim /usr/bin/yum</span><br><span class=\"line\">修改第一行即可，将环境变量指向以前的python版本</span><br><span class=\"line\">#!/usr/bin/python26</span><br></pre></td></tr></table></figure>\n<h1 id=\"5-reinstall-pip\"><a href=\"#5-reinstall-pip\" class=\"headerlink\" title=\"5. reinstall pip\"></a>5. reinstall pip</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>安装pip之前首先需要安装setuptools</span><br><span class=\"line\">下载链接</span><br><span class=\"line\">https:<span class=\"comment\">//pypi.python.org/pypi/setuptools</span></span><br><span class=\"line\">下载地址</span><br><span class=\"line\">wget https:<span class=\"comment\">//pypi.python.org/packages/ff/d4/209f4939c49e31f5524fa0027bf1c8ec3107abaf7c61fdaad704a648c281/setuptools-21.0.0.tar.gz#md5=81964fdb89534118707742e6d1a1ddb4 --no-check-certificate</span></span><br><span class=\"line\">解压</span><br><span class=\"line\">tar zxvf setuptools<span class=\"number\">-21.0</span><span class=\"number\">.0</span>.tar.gz</span><br><span class=\"line\">安装</span><br><span class=\"line\">cd setuptools<span class=\"number\">-21.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">python setup.py  install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span>安装pip</span><br><span class=\"line\">下载链接</span><br><span class=\"line\">https:<span class=\"comment\">//pypi.python.org/pypi/pip</span></span><br><span class=\"line\">下载地址</span><br><span class=\"line\">wget https:<span class=\"comment\">//pypi.python.org/packages/41/27/9a8d24e1b55bd8c85e4d022da2922cb206f183e2d18fee4e320c9547e751/pip-8.1.1.tar.gz#md5=6b86f11841e89c8241d689956ba99ed7 --no-check-certificate</span></span><br><span class=\"line\">解压</span><br><span class=\"line\">tar zxvf pip<span class=\"number\">-8.1</span><span class=\"number\">.1</span>.tar.gz </span><br><span class=\"line\">安装 </span><br><span class=\"line\">cd pip<span class=\"number\">-8.1</span><span class=\"number\">.1</span></span><br><span class=\"line\">python setup.py install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span>添加环境变量</span><br><span class=\"line\">安装完之后，之后执行pip还是调用的以前的环境变量，需要手动添加环境变量</span><br><span class=\"line\">mv /usr/bin/pip /usr/bin/pip26</span><br><span class=\"line\">ln -s /usr/local/python27/bin/pip /usr/bin/</span><br><span class=\"line\">再次查看版本</span><br><span class=\"line\">pip -V</span><br><span class=\"line\">pip <span class=\"number\">8.1</span><span class=\"number\">.1</span> from /usr/local/python27/lib/python2<span class=\"number\">.7</span>/site-packages/pip<span class=\"number\">-8.1</span><span class=\"number\">.1</span>-py2<span class=\"number\">.7</span>.egg (python <span class=\"number\">2.7</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"6-使用pip安装第三方库\"><a href=\"#6-使用pip安装第三方库\" class=\"headerlink\" title=\"6.使用pip安装第三方库\"></a>6.使用pip安装第三方库</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果报错locale.Error: unsupported locale setting</span><br><span class=\"line\">加入环境变量：</span><br><span class=\"line\"><span class=\"keyword\">export</span> LANGUAGE=en_US.UTF<span class=\"number\">-8</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> LC_ALL=en_US.UTF<span class=\"number\">-8</span></span><br><span class=\"line\"></span><br><span class=\"line\">pip install psutil</span><br><span class=\"line\">pip install MySQLdb-python</span><br><span class=\"line\">pip install django=<span class=\"number\">1.8</span><span class=\"number\">.2</span></span><br><span class=\"line\"></span><br><span class=\"line\">报错：</span><br><span class=\"line\"> pip install MySQLdb-python</span><br><span class=\"line\">Collecting MySQLdb-python</span><br><span class=\"line\">  Retrying (Retry(total=4, connect=None, read=None, redirect=None)) after connection broken by 'ReadTimeoutError(\"HTTPSConnectionPool(host='pypi.python.org', port=443): Read timed out. (read timeout=15)\",)': /simple/mysqldb-python/</span><br><span class=\"line\">  Could <span class=\"keyword\">not</span> find a version that satisfies the requirement MySQLdb-python (from versions: )</span><br><span class=\"line\">No matching distribution found <span class=\"keyword\">for</span> MySQLdb-python</span><br><span class=\"line\">You are <span class=\"keyword\">using</span> pip version <span class=\"number\">8.1</span><span class=\"number\">.1</span>, however version <span class=\"number\">9.0</span><span class=\"number\">.1</span> is available.</span><br><span class=\"line\">You should consider upgrading via the 'pip install --upgrade pip' command.</span><br><span class=\"line\">当安装中提示版本太低的时候，执行提示的命令进行升级即可</span><br><span class=\"line\">pip install --upgrade pip</span><br><span class=\"line\">升级完重新执行要安装的库</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-download-source\"><a href=\"#1-download-source\" class=\"headerlink\" title=\"1. download source\"></a>1. download source</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"comment\">//www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"2-compire-and-install\"><a href=\"#2-compire-and-install\" class=\"headerlink\" title=\"2. compire and install\"></a>2. compire and install</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf Python<span class=\"number\">-2.7</span><span class=\"number\">.12</span>.tgz</span><br><span class=\"line\">cd Python<span class=\"number\">-2.7</span><span class=\"number\">.12</span></span><br><span class=\"line\">./configure --prefix=/usr/local/python27 &amp;&amp; make &amp;&amp; make install &amp;&amp; echo $?</span><br><span class=\"line\">如果以上输出为<span class=\"number\">0</span>，说明没有报错，安装正常</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-add-path-and-backup-the-python2-6\"><a href=\"#3-add-path-and-backup-the-python2-6\" class=\"headerlink\" title=\"3. add path and backup the python2.6\"></a>3. add path and backup the python2.6</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">移除以前的版本</span><br><span class=\"line\">mv /usr/bin/python /usr/bin/python26</span><br><span class=\"line\">创建软连接</span><br><span class=\"line\">ln -s /usr/local/python27/bin/python /usr/bin/python</span><br><span class=\"line\">查看版本是否升级成功</span><br><span class=\"line\">python -V</span><br><span class=\"line\">Python <span class=\"number\">2.7</span><span class=\"number\">.12</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"4-modify-yum\"><a href=\"#4-modify-yum\" class=\"headerlink\" title=\"4. modify yum\"></a>4. modify yum</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果不修改此项，会导致yum无法使用</span><br><span class=\"line\">vim /usr/bin/yum</span><br><span class=\"line\">修改第一行即可，将环境变量指向以前的python版本</span><br><span class=\"line\">#!/usr/bin/python26</span><br></pre></td></tr></table></figure>\n<h1 id=\"5-reinstall-pip\"><a href=\"#5-reinstall-pip\" class=\"headerlink\" title=\"5. reinstall pip\"></a>5. reinstall pip</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>安装pip之前首先需要安装setuptools</span><br><span class=\"line\">下载链接</span><br><span class=\"line\">https:<span class=\"comment\">//pypi.python.org/pypi/setuptools</span></span><br><span class=\"line\">下载地址</span><br><span class=\"line\">wget https:<span class=\"comment\">//pypi.python.org/packages/ff/d4/209f4939c49e31f5524fa0027bf1c8ec3107abaf7c61fdaad704a648c281/setuptools-21.0.0.tar.gz#md5=81964fdb89534118707742e6d1a1ddb4 --no-check-certificate</span></span><br><span class=\"line\">解压</span><br><span class=\"line\">tar zxvf setuptools<span class=\"number\">-21.0</span><span class=\"number\">.0</span>.tar.gz</span><br><span class=\"line\">安装</span><br><span class=\"line\">cd setuptools<span class=\"number\">-21.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">python setup.py  install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span>安装pip</span><br><span class=\"line\">下载链接</span><br><span class=\"line\">https:<span class=\"comment\">//pypi.python.org/pypi/pip</span></span><br><span class=\"line\">下载地址</span><br><span class=\"line\">wget https:<span class=\"comment\">//pypi.python.org/packages/41/27/9a8d24e1b55bd8c85e4d022da2922cb206f183e2d18fee4e320c9547e751/pip-8.1.1.tar.gz#md5=6b86f11841e89c8241d689956ba99ed7 --no-check-certificate</span></span><br><span class=\"line\">解压</span><br><span class=\"line\">tar zxvf pip<span class=\"number\">-8.1</span><span class=\"number\">.1</span>.tar.gz </span><br><span class=\"line\">安装 </span><br><span class=\"line\">cd pip<span class=\"number\">-8.1</span><span class=\"number\">.1</span></span><br><span class=\"line\">python setup.py install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span>添加环境变量</span><br><span class=\"line\">安装完之后，之后执行pip还是调用的以前的环境变量，需要手动添加环境变量</span><br><span class=\"line\">mv /usr/bin/pip /usr/bin/pip26</span><br><span class=\"line\">ln -s /usr/local/python27/bin/pip /usr/bin/</span><br><span class=\"line\">再次查看版本</span><br><span class=\"line\">pip -V</span><br><span class=\"line\">pip <span class=\"number\">8.1</span><span class=\"number\">.1</span> from /usr/local/python27/lib/python2<span class=\"number\">.7</span>/site-packages/pip<span class=\"number\">-8.1</span><span class=\"number\">.1</span>-py2<span class=\"number\">.7</span>.egg (python <span class=\"number\">2.7</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"6-使用pip安装第三方库\"><a href=\"#6-使用pip安装第三方库\" class=\"headerlink\" title=\"6.使用pip安装第三方库\"></a>6.使用pip安装第三方库</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果报错locale.Error: unsupported locale setting</span><br><span class=\"line\">加入环境变量：</span><br><span class=\"line\"><span class=\"keyword\">export</span> LANGUAGE=en_US.UTF<span class=\"number\">-8</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> LC_ALL=en_US.UTF<span class=\"number\">-8</span></span><br><span class=\"line\"></span><br><span class=\"line\">pip install psutil</span><br><span class=\"line\">pip install MySQLdb-python</span><br><span class=\"line\">pip install django=<span class=\"number\">1.8</span><span class=\"number\">.2</span></span><br><span class=\"line\"></span><br><span class=\"line\">报错：</span><br><span class=\"line\"> pip install MySQLdb-python</span><br><span class=\"line\">Collecting MySQLdb-python</span><br><span class=\"line\">  Retrying (Retry(total=4, connect=None, read=None, redirect=None)) after connection broken by 'ReadTimeoutError(\"HTTPSConnectionPool(host='pypi.python.org', port=443): Read timed out. (read timeout=15)\",)': /simple/mysqldb-python/</span><br><span class=\"line\">  Could <span class=\"keyword\">not</span> find a version that satisfies the requirement MySQLdb-python (from versions: )</span><br><span class=\"line\">No matching distribution found <span class=\"keyword\">for</span> MySQLdb-python</span><br><span class=\"line\">You are <span class=\"keyword\">using</span> pip version <span class=\"number\">8.1</span><span class=\"number\">.1</span>, however version <span class=\"number\">9.0</span><span class=\"number\">.1</span> is available.</span><br><span class=\"line\">You should consider upgrading via the 'pip install --upgrade pip' command.</span><br><span class=\"line\">当安装中提示版本太低的时候，执行提示的命令进行升级即可</span><br><span class=\"line\">pip install --upgrade pip</span><br><span class=\"line\">升级完重新执行要安装的库</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"linux常用函数手册","date":"2016-10-05T12:06:30.000Z","_content":"\n# linux \n\n[linux常用函数手册](http://net.pku.edu.cn/~yhf/linux_c/)\n","source":"_posts/linux/linux_c_help.md","raw":"---\nlayout: post\ntitle: linux常用函数手册\ndate: 2016-10-5 20:06:30\ncategory: linux\n\n---\n\n# linux \n\n[linux常用函数手册](http://net.pku.edu.cn/~yhf/linux_c/)\n","slug":"linux/linux_c_help","published":1,"updated":"2018-05-26T02:38:14.913Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8r7000lkwlimxz6joj0","content":"<h1 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h1><p><a href=\"http://net.pku.edu.cn/~yhf/linux_c/\" target=\"_blank\" rel=\"noopener\">linux常用函数手册</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h1><p><a href=\"http://net.pku.edu.cn/~yhf/linux_c/\" target=\"_blank\" rel=\"noopener\">linux常用函数手册</a></p>\n"},{"layout":"post","title":"nginx  support  php","date":"2016-12-10T03:30:55.000Z","comments":1,"_content":"\n#  ubuntu14.04 +nginx+php5-fpm\n\n## 一，安装Nginx\n\n　　apt-get install nginx\n\n　　1，配置nginx\n\n　　　　nginx所有的配置在 /etc/nginx/nginx.conf中\n\n　　　　nginx.conf配置里面包括了\n\n　　　　　　include /etc/nginx/conf.d/*.conf;\n        　　　include /etc/nginx/sites-enabled/*;\n        这两个配置，所以这里面的配置也是有效的。\n       错误日志 error_log /var/log/nginx/error.log;\n \n　　这里我们把配置写在 /etc/nginx/sites-available/default中\n　　修改  root /usr/share/nginx/html;   这是网页的根目录，默认里面有一个index.html页面\n     index  index.html index.htm修改成index index.php index.html index.htm;\n     增加  \n       \n　　location ~ \\.php$ {\n              　　  try_files $uri =404;\n              　　  fastcgi_pass 127.0.0.1:9000;\n              　　  fastcgi_index index.php;\n              　　  include fastcgi_params;\n      　　  }\n \n　　2，保存文件，使配置生效 /etc/init.d/nginx reload\n \n　　3，启动nginx\n　　　　/etc/init.d/nginx start\n \n　　4，在 /usr/share/nginx/html下新建index.php\n　　　　<? php\n　　　　phpinfo();\n　　　　?>\n\n## 二 安装php\n\nsudo apt-get install php5-fpm\n\nsudo apt-get install php5-gd  # Popular image manipulation library; used extensively by Wordpress and it's plugins.\nsudo apt-get install php5-cli   # Makes the php5 command available to the terminal for php5 scripting\nsudo apt-get install php5-curl    # Allows curl (file downloading tool) to be called from PHP5\nsudo apt-get install php5-mcrypt   # Provides encryption algorithms to PHP scripts\nsudo apt-get install php5-mysql   # Allows PHP5 scripts to talk to a MySQL Database\nsudo apt-get install php5-readline  # Allows PHP5 scripts to use the readline function\n\n查看php5运行进程\n\nps -waux | grep php5\n\n打开关闭php5进程\n\nsudo service php5-fpm stop\nsudo service php5-fpm start\nsudo service php5-fpm restart\nsudo service php5-fpm status\n\n配置php5监听端口  /etc/php5/fpm/pool.d/www.conf\n\n把\n\nlisten = /var/run/php5-fpm.sock  改为\n\nlisten = 127.0.0.1:9000\n\n重新运行php进程\n","source":"_posts/linux/nginx_config.md","raw":"---\nlayout: post\ntitle: nginx  support  php\ncategory: linux\ndate: 2016-12-10 11:30:55\ncomments: true\n\n---\n\n#  ubuntu14.04 +nginx+php5-fpm\n\n## 一，安装Nginx\n\n　　apt-get install nginx\n\n　　1，配置nginx\n\n　　　　nginx所有的配置在 /etc/nginx/nginx.conf中\n\n　　　　nginx.conf配置里面包括了\n\n　　　　　　include /etc/nginx/conf.d/*.conf;\n        　　　include /etc/nginx/sites-enabled/*;\n        这两个配置，所以这里面的配置也是有效的。\n       错误日志 error_log /var/log/nginx/error.log;\n \n　　这里我们把配置写在 /etc/nginx/sites-available/default中\n　　修改  root /usr/share/nginx/html;   这是网页的根目录，默认里面有一个index.html页面\n     index  index.html index.htm修改成index index.php index.html index.htm;\n     增加  \n       \n　　location ~ \\.php$ {\n              　　  try_files $uri =404;\n              　　  fastcgi_pass 127.0.0.1:9000;\n              　　  fastcgi_index index.php;\n              　　  include fastcgi_params;\n      　　  }\n \n　　2，保存文件，使配置生效 /etc/init.d/nginx reload\n \n　　3，启动nginx\n　　　　/etc/init.d/nginx start\n \n　　4，在 /usr/share/nginx/html下新建index.php\n　　　　<? php\n　　　　phpinfo();\n　　　　?>\n\n## 二 安装php\n\nsudo apt-get install php5-fpm\n\nsudo apt-get install php5-gd  # Popular image manipulation library; used extensively by Wordpress and it's plugins.\nsudo apt-get install php5-cli   # Makes the php5 command available to the terminal for php5 scripting\nsudo apt-get install php5-curl    # Allows curl (file downloading tool) to be called from PHP5\nsudo apt-get install php5-mcrypt   # Provides encryption algorithms to PHP scripts\nsudo apt-get install php5-mysql   # Allows PHP5 scripts to talk to a MySQL Database\nsudo apt-get install php5-readline  # Allows PHP5 scripts to use the readline function\n\n查看php5运行进程\n\nps -waux | grep php5\n\n打开关闭php5进程\n\nsudo service php5-fpm stop\nsudo service php5-fpm start\nsudo service php5-fpm restart\nsudo service php5-fpm status\n\n配置php5监听端口  /etc/php5/fpm/pool.d/www.conf\n\n把\n\nlisten = /var/run/php5-fpm.sock  改为\n\nlisten = 127.0.0.1:9000\n\n重新运行php进程\n","slug":"linux/nginx_config","published":1,"updated":"2019-01-26T05:00:12.396Z","photos":[],"link":"","_id":"cjrd0e8r8000mkwli7yimenmk","content":"<h1 id=\"ubuntu14-04-nginx-php5-fpm\"><a href=\"#ubuntu14-04-nginx-php5-fpm\" class=\"headerlink\" title=\"ubuntu14.04 +nginx+php5-fpm\"></a>ubuntu14.04 +nginx+php5-fpm</h1><h2 id=\"一，安装Nginx\"><a href=\"#一，安装Nginx\" class=\"headerlink\" title=\"一，安装Nginx\"></a>一，安装Nginx</h2><p>　　apt-get install nginx</p>\n<p>　　1，配置nginx</p>\n<p>　　　　nginx所有的配置在 /etc/nginx/nginx.conf中</p>\n<p>　　　　nginx.conf配置里面包括了</p>\n<p>　　　　　　include /etc/nginx/conf.d/<em>.conf;<br>        　　　include /etc/nginx/sites-enabled/</em>;<br>        这两个配置，所以这里面的配置也是有效的。<br>       错误日志 error_log /var/log/nginx/error.log;</p>\n<p>　　这里我们把配置写在 /etc/nginx/sites-available/default中<br>　　修改  root /usr/share/nginx/html;   这是网页的根目录，默认里面有一个index.html页面<br>     index  index.html index.htm修改成index index.php index.html index.htm;<br>     增加  </p>\n<p>　　location ~ .php$ {<br>              　　  try_files $uri =404;<br>              　　  fastcgi_pass 127.0.0.1:9000;<br>              　　  fastcgi_index index.php;<br>              　　  include fastcgi_params;<br>      　　  }</p>\n<p>　　2，保存文件，使配置生效 /etc/init.d/nginx reload</p>\n<p>　　3，启动nginx<br>　　　　/etc/init.d/nginx start</p>\n<p>　　4，在 /usr/share/nginx/html下新建index.php<br>　　　　&lt;? php<br>　　　　phpinfo();<br>　　　　?&gt;</p>\n<h2 id=\"二-安装php\"><a href=\"#二-安装php\" class=\"headerlink\" title=\"二 安装php\"></a>二 安装php</h2><p>sudo apt-get install php5-fpm</p>\n<p>sudo apt-get install php5-gd  # Popular image manipulation library; used extensively by Wordpress and it’s plugins.<br>sudo apt-get install php5-cli   # Makes the php5 command available to the terminal for php5 scripting<br>sudo apt-get install php5-curl    # Allows curl (file downloading tool) to be called from PHP5<br>sudo apt-get install php5-mcrypt   # Provides encryption algorithms to PHP scripts<br>sudo apt-get install php5-mysql   # Allows PHP5 scripts to talk to a MySQL Database<br>sudo apt-get install php5-readline  # Allows PHP5 scripts to use the readline function</p>\n<p>查看php5运行进程</p>\n<p>ps -waux | grep php5</p>\n<p>打开关闭php5进程</p>\n<p>sudo service php5-fpm stop<br>sudo service php5-fpm start<br>sudo service php5-fpm restart<br>sudo service php5-fpm status</p>\n<p>配置php5监听端口  /etc/php5/fpm/pool.d/<a href=\"http://www.conf\" target=\"_blank\" rel=\"noopener\">www.conf</a></p>\n<p>把</p>\n<p>listen = /var/run/php5-fpm.sock  改为</p>\n<p>listen = 127.0.0.1:9000</p>\n<p>重新运行php进程</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ubuntu14-04-nginx-php5-fpm\"><a href=\"#ubuntu14-04-nginx-php5-fpm\" class=\"headerlink\" title=\"ubuntu14.04 +nginx+php5-fpm\"></a>ubuntu14.04 +nginx+php5-fpm</h1><h2 id=\"一，安装Nginx\"><a href=\"#一，安装Nginx\" class=\"headerlink\" title=\"一，安装Nginx\"></a>一，安装Nginx</h2><p>　　apt-get install nginx</p>\n<p>　　1，配置nginx</p>\n<p>　　　　nginx所有的配置在 /etc/nginx/nginx.conf中</p>\n<p>　　　　nginx.conf配置里面包括了</p>\n<p>　　　　　　include /etc/nginx/conf.d/<em>.conf;<br>        　　　include /etc/nginx/sites-enabled/</em>;<br>        这两个配置，所以这里面的配置也是有效的。<br>       错误日志 error_log /var/log/nginx/error.log;</p>\n<p>　　这里我们把配置写在 /etc/nginx/sites-available/default中<br>　　修改  root /usr/share/nginx/html;   这是网页的根目录，默认里面有一个index.html页面<br>     index  index.html index.htm修改成index index.php index.html index.htm;<br>     增加  </p>\n<p>　　location ~ .php$ {<br>              　　  try_files $uri =404;<br>              　　  fastcgi_pass 127.0.0.1:9000;<br>              　　  fastcgi_index index.php;<br>              　　  include fastcgi_params;<br>      　　  }</p>\n<p>　　2，保存文件，使配置生效 /etc/init.d/nginx reload</p>\n<p>　　3，启动nginx<br>　　　　/etc/init.d/nginx start</p>\n<p>　　4，在 /usr/share/nginx/html下新建index.php<br>　　　　&lt;? php<br>　　　　phpinfo();<br>　　　　?&gt;</p>\n<h2 id=\"二-安装php\"><a href=\"#二-安装php\" class=\"headerlink\" title=\"二 安装php\"></a>二 安装php</h2><p>sudo apt-get install php5-fpm</p>\n<p>sudo apt-get install php5-gd  # Popular image manipulation library; used extensively by Wordpress and it’s plugins.<br>sudo apt-get install php5-cli   # Makes the php5 command available to the terminal for php5 scripting<br>sudo apt-get install php5-curl    # Allows curl (file downloading tool) to be called from PHP5<br>sudo apt-get install php5-mcrypt   # Provides encryption algorithms to PHP scripts<br>sudo apt-get install php5-mysql   # Allows PHP5 scripts to talk to a MySQL Database<br>sudo apt-get install php5-readline  # Allows PHP5 scripts to use the readline function</p>\n<p>查看php5运行进程</p>\n<p>ps -waux | grep php5</p>\n<p>打开关闭php5进程</p>\n<p>sudo service php5-fpm stop<br>sudo service php5-fpm start<br>sudo service php5-fpm restart<br>sudo service php5-fpm status</p>\n<p>配置php5监听端口  /etc/php5/fpm/pool.d/<a href=\"http://www.conf\" target=\"_blank\" rel=\"noopener\">www.conf</a></p>\n<p>把</p>\n<p>listen = /var/run/php5-fpm.sock  改为</p>\n<p>listen = 127.0.0.1:9000</p>\n<p>重新运行php进程</p>\n"},{"layout":"post","title":"centos编译安装opensty","date":"2018-10-07T03:23:58.000Z","comments":1,"_content":"\n## 安装依赖包\n\n```shell\nyum install -y make cmake gcc gcc-c++ autoconf automake libpng-devel libjpeg-devel zlib libxml2-devel ncurses-devel bison libtool-ltdl-devel libiconv libmcrypt mhash mcrypt pcre-devel openssl-devel freetype-devel libcurl-devel readline-devel curl\n\n```\n\n* 解释\n\n","source":"_posts/lua/2018-10-07_openresty.md","raw":"---\nlayout: post\ntitle: centos编译安装opensty  \ncategory: lua \ntags: hexo\ndate: 2018-10-07 11:23:58\ncomments: true\n---\n\n## 安装依赖包\n\n```shell\nyum install -y make cmake gcc gcc-c++ autoconf automake libpng-devel libjpeg-devel zlib libxml2-devel ncurses-devel bison libtool-ltdl-devel libiconv libmcrypt mhash mcrypt pcre-devel openssl-devel freetype-devel libcurl-devel readline-devel curl\n\n```\n\n* 解释\n\n","slug":"lua/2018-10-07_openresty","published":1,"updated":"2019-01-26T05:00:29.042Z","photos":[],"link":"","_id":"cjrd0e8ra000pkwliyb004dll","content":"<h2 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y make cmake gcc gcc-c++ autoconf automake libpng-devel libjpeg-devel zlib libxml2-devel ncurses-devel bison libtool-ltdl-devel libiconv libmcrypt mhash mcrypt pcre-devel openssl-devel freetype-devel libcurl-devel readline-devel curl</span><br></pre></td></tr></table></figure>\n<ul>\n<li>解释</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y make cmake gcc gcc-c++ autoconf automake libpng-devel libjpeg-devel zlib libxml2-devel ncurses-devel bison libtool-ltdl-devel libiconv libmcrypt mhash mcrypt pcre-devel openssl-devel freetype-devel libcurl-devel readline-devel curl</span><br></pre></td></tr></table></figure>\n<ul>\n<li>解释</li>\n</ul>\n"},{"layout":"post","title":"atom编辑器","date":"2016-10-09T07:30:30.000Z","_content":"\n# atom 编辑器\n\n## 比较：\n优点：开源，免费，可定制型强，中文支持比sublime做的好，sublime是收费的。\n缺点：稍微有一点慢，相对于sublime，画面类似sublime，体积也比较大。\n\n## 发展：\n  vim基本都是插件扩展， 插件一般是vimscript编写，现在为了可维护性，加入python支持。\n  sublime：也是插件扩展，主要是json配置，可扩展性没atom好。收费，维护仅由编写者维护。       \n  atom：开源，界面类似sublime，插件脚本由js编写，利于扩展，社区支持强大。有人说atom是编辑器\n  的集大成者。\n\n## windows下安装\n1. 需要node.js支持（安装了node.js ，安装npm包管理器（为了解决nodejs代码的部署问题））\n2. 安装atom编辑器\n3. 打开编辑器，packages->settings-view->manager packages ,安装插件即可。\n4. 网络被公司设置代理的，需要设置~/.atom/.apmrc 文件如下：\n```js\nstrict-ssl=false\nhttp-proxy=http://xxxx:xx\nhttps-proxy=https://xxxx:xx\n```\n有些时候还是提示 atom.io:433访问地址错误。\n\n5. 那么可以登录：https://atom.io/packages/ 搜索需要的插件，进入Repo页面。\n复制 git需要的地址。例如qolor插件地址：https://github.com/DavidLGoldberg/qolor.git\n\n6. 进入~/.atom/packages目录下, 打开cmd，执行git clone https://github.com/DavidLGoldberg/qolor.git\n\n7. cd qolor 进入qolor目录，在执行npm install 就会安装 qolor插件了。\n\n8. npm如果需要设置代理，配置文件是~/.npmrc ，写入：\n```js\nregistry=http://registry.cnpmjs.org/\nproxy=http://xxx:xx\n```\n## 测试环境\n windows 8.1\n\n nodejs-4.6.0\n\n python2.7.9\n\n\n ~表示用户目录。我的是 c:/users/administrator/\n","source":"_posts/vim/atom.md","raw":"---\nlayout: post\ntitle: atom编辑器\ndate: 2016-10-09 15:30:30\ncategory: atom\n\n---\n\n# atom 编辑器\n\n## 比较：\n优点：开源，免费，可定制型强，中文支持比sublime做的好，sublime是收费的。\n缺点：稍微有一点慢，相对于sublime，画面类似sublime，体积也比较大。\n\n## 发展：\n  vim基本都是插件扩展， 插件一般是vimscript编写，现在为了可维护性，加入python支持。\n  sublime：也是插件扩展，主要是json配置，可扩展性没atom好。收费，维护仅由编写者维护。       \n  atom：开源，界面类似sublime，插件脚本由js编写，利于扩展，社区支持强大。有人说atom是编辑器\n  的集大成者。\n\n## windows下安装\n1. 需要node.js支持（安装了node.js ，安装npm包管理器（为了解决nodejs代码的部署问题））\n2. 安装atom编辑器\n3. 打开编辑器，packages->settings-view->manager packages ,安装插件即可。\n4. 网络被公司设置代理的，需要设置~/.atom/.apmrc 文件如下：\n```js\nstrict-ssl=false\nhttp-proxy=http://xxxx:xx\nhttps-proxy=https://xxxx:xx\n```\n有些时候还是提示 atom.io:433访问地址错误。\n\n5. 那么可以登录：https://atom.io/packages/ 搜索需要的插件，进入Repo页面。\n复制 git需要的地址。例如qolor插件地址：https://github.com/DavidLGoldberg/qolor.git\n\n6. 进入~/.atom/packages目录下, 打开cmd，执行git clone https://github.com/DavidLGoldberg/qolor.git\n\n7. cd qolor 进入qolor目录，在执行npm install 就会安装 qolor插件了。\n\n8. npm如果需要设置代理，配置文件是~/.npmrc ，写入：\n```js\nregistry=http://registry.cnpmjs.org/\nproxy=http://xxx:xx\n```\n## 测试环境\n windows 8.1\n\n nodejs-4.6.0\n\n python2.7.9\n\n\n ~表示用户目录。我的是 c:/users/administrator/\n","slug":"vim/atom","published":1,"updated":"2018-05-26T02:38:14.915Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8rb000skwli2fu3og27","content":"<h1 id=\"atom-编辑器\"><a href=\"#atom-编辑器\" class=\"headerlink\" title=\"atom 编辑器\"></a>atom 编辑器</h1><h2 id=\"比较：\"><a href=\"#比较：\" class=\"headerlink\" title=\"比较：\"></a>比较：</h2><p>优点：开源，免费，可定制型强，中文支持比sublime做的好，sublime是收费的。<br>缺点：稍微有一点慢，相对于sublime，画面类似sublime，体积也比较大。</p>\n<h2 id=\"发展：\"><a href=\"#发展：\" class=\"headerlink\" title=\"发展：\"></a>发展：</h2><p>  vim基本都是插件扩展， 插件一般是vimscript编写，现在为了可维护性，加入python支持。<br>  sublime：也是插件扩展，主要是json配置，可扩展性没atom好。收费，维护仅由编写者维护。<br>  atom：开源，界面类似sublime，插件脚本由js编写，利于扩展，社区支持强大。有人说atom是编辑器<br>  的集大成者。</p>\n<h2 id=\"windows下安装\"><a href=\"#windows下安装\" class=\"headerlink\" title=\"windows下安装\"></a>windows下安装</h2><ol>\n<li>需要node.js支持（安装了node.js ，安装npm包管理器（为了解决nodejs代码的部署问题））</li>\n<li>安装atom编辑器</li>\n<li>打开编辑器，packages-&gt;settings-view-&gt;manager packages ,安装插件即可。</li>\n<li>网络被公司设置代理的，需要设置~/.atom/.apmrc 文件如下：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strict-ssl=<span class=\"literal\">false</span></span><br><span class=\"line\">http-proxy=http:<span class=\"comment\">//xxxx:xx</span></span><br><span class=\"line\">https-proxy=https:<span class=\"comment\">//xxxx:xx</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>有些时候还是提示 atom.io:433访问地址错误。</p>\n<ol start=\"5\">\n<li><p>那么可以登录：<a href=\"https://atom.io/packages/\" target=\"_blank\" rel=\"noopener\">https://atom.io/packages/</a> 搜索需要的插件，进入Repo页面。<br>复制 git需要的地址。例如qolor插件地址：<a href=\"https://github.com/DavidLGoldberg/qolor.git\" target=\"_blank\" rel=\"noopener\">https://github.com/DavidLGoldberg/qolor.git</a></p>\n</li>\n<li><p>进入~/.atom/packages目录下, 打开cmd，执行git clone <a href=\"https://github.com/DavidLGoldberg/qolor.git\" target=\"_blank\" rel=\"noopener\">https://github.com/DavidLGoldberg/qolor.git</a></p>\n</li>\n<li><p>cd qolor 进入qolor目录，在执行npm install 就会安装 qolor插件了。</p>\n</li>\n<li><p>npm如果需要设置代理，配置文件是~/.npmrc ，写入：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=http:<span class=\"comment\">//registry.cnpmjs.org/</span></span><br><span class=\"line\">proxy=http:<span class=\"comment\">//xxx:xx</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p> windows 8.1</p>\n<p> nodejs-4.6.0</p>\n<p> python2.7.9</p>\n<p> ~表示用户目录。我的是 c:/users/administrator/</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"atom-编辑器\"><a href=\"#atom-编辑器\" class=\"headerlink\" title=\"atom 编辑器\"></a>atom 编辑器</h1><h2 id=\"比较：\"><a href=\"#比较：\" class=\"headerlink\" title=\"比较：\"></a>比较：</h2><p>优点：开源，免费，可定制型强，中文支持比sublime做的好，sublime是收费的。<br>缺点：稍微有一点慢，相对于sublime，画面类似sublime，体积也比较大。</p>\n<h2 id=\"发展：\"><a href=\"#发展：\" class=\"headerlink\" title=\"发展：\"></a>发展：</h2><p>  vim基本都是插件扩展， 插件一般是vimscript编写，现在为了可维护性，加入python支持。<br>  sublime：也是插件扩展，主要是json配置，可扩展性没atom好。收费，维护仅由编写者维护。<br>  atom：开源，界面类似sublime，插件脚本由js编写，利于扩展，社区支持强大。有人说atom是编辑器<br>  的集大成者。</p>\n<h2 id=\"windows下安装\"><a href=\"#windows下安装\" class=\"headerlink\" title=\"windows下安装\"></a>windows下安装</h2><ol>\n<li>需要node.js支持（安装了node.js ，安装npm包管理器（为了解决nodejs代码的部署问题））</li>\n<li>安装atom编辑器</li>\n<li>打开编辑器，packages-&gt;settings-view-&gt;manager packages ,安装插件即可。</li>\n<li>网络被公司设置代理的，需要设置~/.atom/.apmrc 文件如下：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strict-ssl=<span class=\"literal\">false</span></span><br><span class=\"line\">http-proxy=http:<span class=\"comment\">//xxxx:xx</span></span><br><span class=\"line\">https-proxy=https:<span class=\"comment\">//xxxx:xx</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>有些时候还是提示 atom.io:433访问地址错误。</p>\n<ol start=\"5\">\n<li><p>那么可以登录：<a href=\"https://atom.io/packages/\" target=\"_blank\" rel=\"noopener\">https://atom.io/packages/</a> 搜索需要的插件，进入Repo页面。<br>复制 git需要的地址。例如qolor插件地址：<a href=\"https://github.com/DavidLGoldberg/qolor.git\" target=\"_blank\" rel=\"noopener\">https://github.com/DavidLGoldberg/qolor.git</a></p>\n</li>\n<li><p>进入~/.atom/packages目录下, 打开cmd，执行git clone <a href=\"https://github.com/DavidLGoldberg/qolor.git\" target=\"_blank\" rel=\"noopener\">https://github.com/DavidLGoldberg/qolor.git</a></p>\n</li>\n<li><p>cd qolor 进入qolor目录，在执行npm install 就会安装 qolor插件了。</p>\n</li>\n<li><p>npm如果需要设置代理，配置文件是~/.npmrc ，写入：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=http:<span class=\"comment\">//registry.cnpmjs.org/</span></span><br><span class=\"line\">proxy=http:<span class=\"comment\">//xxx:xx</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p> windows 8.1</p>\n<p> nodejs-4.6.0</p>\n<p> python2.7.9</p>\n<p> ~表示用户目录。我的是 c:/users/administrator/</p>\n"},{"layout":"post","title":"vim-emmet插件/html/css","date":"2016-10-26T16:00:00.000Z","_content":"\n# emmet-vim 插件就是以前的zencoding\n\n安装 可以git clone ，可以在vim里面安装PluginInstall\n\n来说一下快捷键\n快捷键一：\n\n输入html：5  按下ctrl+y 松开后在按逗号（英文的哦）\n立刻展开成如下了\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title></title>\n</head>\n<body>\n    \n</body>\n</html>\n\n```\n\nhtml:xt 就是兼容的html版本\n\n快捷键二：\ndiv#page>div.logo+ul#navigation*2>li*5>a \n也是ctrl+y，松开后按英文逗号，展开后是：\n```html \n<div id=\"page\">\n    <div class=\"logo\"></div>\n    <ul id=\"navigation\">\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n    </ul>\n    <ul id=\"navigation\">\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n    </ul>\n</div>\n\n```\n\n可以看出来：\n\n\\#号是表示id \n\\.表示class \n\\+ 表示同一级的元素\n可以用*n 产生多个同名同级的元素\n\\>表示要包含的元素\n\\#xxx 默认的这个表示默认div元素，且id为xxx\n","source":"_posts/vim/vim-emmet.md","raw":"---\nlayout: post\ntitle: vim-emmet插件/html/css\ndate: 2016-10-27\ncategory : vim \n---\n\n# emmet-vim 插件就是以前的zencoding\n\n安装 可以git clone ，可以在vim里面安装PluginInstall\n\n来说一下快捷键\n快捷键一：\n\n输入html：5  按下ctrl+y 松开后在按逗号（英文的哦）\n立刻展开成如下了\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title></title>\n</head>\n<body>\n    \n</body>\n</html>\n\n```\n\nhtml:xt 就是兼容的html版本\n\n快捷键二：\ndiv#page>div.logo+ul#navigation*2>li*5>a \n也是ctrl+y，松开后按英文逗号，展开后是：\n```html \n<div id=\"page\">\n    <div class=\"logo\"></div>\n    <ul id=\"navigation\">\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n    </ul>\n    <ul id=\"navigation\">\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n        <li><a href=\"\"></a></li>\n    </ul>\n</div>\n\n```\n\n可以看出来：\n\n\\#号是表示id \n\\.表示class \n\\+ 表示同一级的元素\n可以用*n 产生多个同名同级的元素\n\\>表示要包含的元素\n\\#xxx 默认的这个表示默认div元素，且id为xxx\n","slug":"vim/vim-emmet","published":1,"updated":"2018-10-20T16:45:10.953Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8rc000wkwlixf7a8udg","content":"<h1 id=\"emmet-vim-插件就是以前的zencoding\"><a href=\"#emmet-vim-插件就是以前的zencoding\" class=\"headerlink\" title=\"emmet-vim 插件就是以前的zencoding\"></a>emmet-vim 插件就是以前的zencoding</h1><p>安装 可以git clone ，可以在vim里面安装PluginInstall</p>\n<p>来说一下快捷键<br>快捷键一：</p>\n<p>输入html：5  按下ctrl+y 松开后在按逗号（英文的哦）<br>立刻展开成如下了<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>html:xt 就是兼容的html版本</p>\n<p>快捷键二：<br>div#page&gt;div.logo+ul#navigation<em>2&gt;li</em>5&gt;a<br>也是ctrl+y，松开后按英文逗号，展开后是：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"page\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"navigation\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"navigation\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>可以看出来：</p>\n<p>#号是表示id<br>.表示class<br>+ 表示同一级的元素<br>可以用*n 产生多个同名同级的元素<br>>表示要包含的元素<br>#xxx 默认的这个表示默认div元素，且id为xxx</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"emmet-vim-插件就是以前的zencoding\"><a href=\"#emmet-vim-插件就是以前的zencoding\" class=\"headerlink\" title=\"emmet-vim 插件就是以前的zencoding\"></a>emmet-vim 插件就是以前的zencoding</h1><p>安装 可以git clone ，可以在vim里面安装PluginInstall</p>\n<p>来说一下快捷键<br>快捷键一：</p>\n<p>输入html：5  按下ctrl+y 松开后在按逗号（英文的哦）<br>立刻展开成如下了<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>html:xt 就是兼容的html版本</p>\n<p>快捷键二：<br>div#page&gt;div.logo+ul#navigation<em>2&gt;li</em>5&gt;a<br>也是ctrl+y，松开后按英文逗号，展开后是：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"page\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"navigation\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"navigation\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>可以看出来：</p>\n<p>#号是表示id<br>.表示class<br>+ 表示同一级的元素<br>可以用*n 产生多个同名同级的元素<br>>表示要包含的元素<br>#xxx 默认的这个表示默认div元素，且id为xxx</p>\n"},{"layout":"post","title":"vim-markdown插件","date":"2016-10-27T07:30:00.000Z","_content":"\n# 首先为了高亮显示markdown文件 ，安装vim-markdown插件(vundle管理的)\n\n```shell\nPlugin 'godlygeek/tabular'\nPlugin 'tpope/vim-markdown'\n```\n\n# 安装时时预览插件 只支持macos/linux ,打开markdown文件就会出现浏览器窗口预览\n\n```shell\n\"Plugin 'suan/vim-instant-markdown' \n```\n#windows 下有一个python2支持的插件，也能预览\n\n需要python2的支持--python2.7就可以。\n需要nodejs的支持，自行安装。\n完成后：\n\n```shell\nnpm -g install instant-markdown-d\n```\n\n在vim配置文件中添加:\n\n```shell\nPlugin 'suan/vim-instant-markdown'\n```\n打开vim 更新安装插件 ：\n\n```shell\n:PluginInstall\n```\n\n\n\n","source":"_posts/vim/vim-markdown.md","raw":"---\nlayout: post\ntitle: vim-markdown插件\ndate: 2016-10-27 15:30:00\ntags: vim \n\n---\n\n# 首先为了高亮显示markdown文件 ，安装vim-markdown插件(vundle管理的)\n\n```shell\nPlugin 'godlygeek/tabular'\nPlugin 'tpope/vim-markdown'\n```\n\n# 安装时时预览插件 只支持macos/linux ,打开markdown文件就会出现浏览器窗口预览\n\n```shell\n\"Plugin 'suan/vim-instant-markdown' \n```\n#windows 下有一个python2支持的插件，也能预览\n\n需要python2的支持--python2.7就可以。\n需要nodejs的支持，自行安装。\n完成后：\n\n```shell\nnpm -g install instant-markdown-d\n```\n\n在vim配置文件中添加:\n\n```shell\nPlugin 'suan/vim-instant-markdown'\n```\n打开vim 更新安装插件 ：\n\n```shell\n:PluginInstall\n```\n\n\n\n","slug":"vim/vim-markdown","published":1,"updated":"2018-05-26T02:38:14.916Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8rd000xkwlidoqy3818","content":"<h1 id=\"首先为了高亮显示markdown文件-，安装vim-markdown插件-vundle管理的\"><a href=\"#首先为了高亮显示markdown文件-，安装vim-markdown插件-vundle管理的\" class=\"headerlink\" title=\"首先为了高亮显示markdown文件 ，安装vim-markdown插件(vundle管理的)\"></a>首先为了高亮显示markdown文件 ，安装vim-markdown插件(vundle管理的)</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin 'godlygeek/tabular'</span><br><span class=\"line\">Plugin 'tpope/vim-markdown'</span><br></pre></td></tr></table></figure>\n<h1 id=\"安装时时预览插件-只支持macos-linux-打开markdown文件就会出现浏览器窗口预览\"><a href=\"#安装时时预览插件-只支持macos-linux-打开markdown文件就会出现浏览器窗口预览\" class=\"headerlink\" title=\"安装时时预览插件 只支持macos/linux ,打开markdown文件就会出现浏览器窗口预览\"></a>安装时时预览插件 只支持macos/linux ,打开markdown文件就会出现浏览器窗口预览</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"Plugin 'suan/vim-instant-markdown'</span><br></pre></td></tr></table></figure>\n<p>#windows 下有一个python2支持的插件，也能预览</p>\n<p>需要python2的支持–python2.7就可以。<br>需要nodejs的支持，自行安装。<br>完成后：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -g install instant-markdown-d</span><br></pre></td></tr></table></figure>\n<p>在vim配置文件中添加:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin 'suan/vim-instant-markdown'</span><br></pre></td></tr></table></figure>\n<p>打开vim 更新安装插件 ：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:PluginInstall</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"首先为了高亮显示markdown文件-，安装vim-markdown插件-vundle管理的\"><a href=\"#首先为了高亮显示markdown文件-，安装vim-markdown插件-vundle管理的\" class=\"headerlink\" title=\"首先为了高亮显示markdown文件 ，安装vim-markdown插件(vundle管理的)\"></a>首先为了高亮显示markdown文件 ，安装vim-markdown插件(vundle管理的)</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin 'godlygeek/tabular'</span><br><span class=\"line\">Plugin 'tpope/vim-markdown'</span><br></pre></td></tr></table></figure>\n<h1 id=\"安装时时预览插件-只支持macos-linux-打开markdown文件就会出现浏览器窗口预览\"><a href=\"#安装时时预览插件-只支持macos-linux-打开markdown文件就会出现浏览器窗口预览\" class=\"headerlink\" title=\"安装时时预览插件 只支持macos/linux ,打开markdown文件就会出现浏览器窗口预览\"></a>安装时时预览插件 只支持macos/linux ,打开markdown文件就会出现浏览器窗口预览</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"Plugin 'suan/vim-instant-markdown'</span><br></pre></td></tr></table></figure>\n<p>#windows 下有一个python2支持的插件，也能预览</p>\n<p>需要python2的支持–python2.7就可以。<br>需要nodejs的支持，自行安装。<br>完成后：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -g install instant-markdown-d</span><br></pre></td></tr></table></figure>\n<p>在vim配置文件中添加:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin 'suan/vim-instant-markdown'</span><br></pre></td></tr></table></figure>\n<p>打开vim 更新安装插件 ：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:PluginInstall</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"vim 乱码","date":"2016-10-26T10:37:00.000Z","_content":"\n# 首先 中文os下，我们一般的设置是：\n```shell \nset encoding=utf-8                                \"设置gvim内部编码\nset fileencoding=utf-8                               \"设置当前文件编码\nset fileencodings=gbk,utf-8,shift_jis,ucs-bom,latin1,gb2312,cp936,cp932    设置支持打开的文件的编码\n\nset termencoding=utf-8\nset guifont=DejaVu\\\\ Sans\\\\ Mono\\\\:h13   \n```\n\n上述，set fileencodings设置的文字编码解析顺位，对于中文是可以解析出来的,shift_jis编码的文件，就会出现乱码。除非你把shift_jis设置第一位：\n\n```shell\nset fileencodings=shift_jis,gbk,utf-8,ucs-bom,latin1,gb2312,cp936,cp932 \n```\n\n# 对于日文os ，安装gvim后，需要如下设置：\n由于本地ANSI是cp932 , 所以把cp932 放在第一或者第二的位置，\n如果放到第三或者后面就会出现shift_jis编码的日文打开后是文本乱码现象。\n\n```shell\nset encoding=utf-8                                    \"设置gvim内部编码\nset fileencoding=utf-8                               \"设置当前文件编码\nset fileencodings=CP932,utf-8,gbk,,ucs-bom,latin1,gb2312,cp936 #设置支持打开的文件的编码\n\nset termencoding=utf-8\n\nset guifont=DejaVu\\ Sans\\ Mono\\:h13 \nset guifontwide=NSimsun\\:h14  \n#设置新宋体      \n\n```\n\n由于DejaVu Sans Mono 字体是英文字符字体，无法正确显示宽字体，所以需要特别加入\n```shell\nset guifontwide=NSimsun\\:h14 \n#设置新宋体 ，显示汉字\n```\n\n所以大家在自己的sublime 或者vim中设置编辑器字体DejaVu Sans Mono就好像可以显示正确的汉字和英文，其实我们设置的只是英文字符显示的样式。汉字其实是系统本地ANSI编码。\n\n## 本地ANSI编码\n世界上每种语言对应的windows 系统都有各自的ANSI，互相不兼容。\n\n比如 中文ANSI == GBK(中文) ，gbk是gb2312(简体中文)的扩展，包含繁体，日文片假名。cp936就是gbk\n    日文ANSI == Windows-31J  就是cp932. \nshift_jis也是一种日文字符编码,不过，只实现了cp932的部分，所以cp932编码的东东，shift_jis可能乱码。shift_jis编码的，cp932一定正常显示。\n\n这是微软早起应对不同国家一种混合的编码：字母+对应的国家文字,这种字符也是多字节字符。比如：中文ANSI,字母数字是1字节 ,汉字是2字节。两种语言文字有可能在一起就显示乱码。不过微软提供了本地ANSI转换为标准unicode字符的方案，通过代码页转换表技术这一过度方案。\n\n## nnicode编码规范\nunicode 是将全世界所有的字符都统一编码的方案(规范))。那么字符a的编码本来是1byte ,现在统一和一个汉字一样长了。那么问题来了，字符串是'\\0'字符结尾。世界上的很久以前写的c程序，就没办法用了。所以说unicode应该早点出来。\n\n有了这种全字符集，解决了乱码，却没法用，蛋疼吧，可是utf8这一实现字符保存，传输的方案出现了。因为utf8是可变长的。不同位段，长度不一致。 \n\n## utf-8编码\n```html\nUCS-2编码(16进制)   UTF-8 字节流(二进制)\n0000 - 007F         0xxxxxxx\n0080 - 07FF         110xxxxx 10xxxxxx\n0800 - FFFF         1110xxxx 10xxxxxx 10xxxxxx \n \n例如“汉”字的Unicode编码是6C49。6C49在0800-FFFF之间，所以肯定要用3字节模板了：1110xxxx 10xxxxxx 10xxxxxx。将6C49写成二进制是：0110 110001 001001，用这个比特流依次代替模板中的x，得到：11100110 10110001 10001001，即E6 B1 89。\n \n可见UTF-8是变长的，将Unicode编码为00000000-0000007F的字符，用单个字节来表示； 00000080-000007FF的字符用两个字节表示；00000800-0000FFFF的字符用3字节表示。因为目前为止Unicode-16规范没有指定FFFF以上的字符，所以UTF-8最多是使用3个字节来表示一个字符。但理论上来说，UTF-8最多需要用6字节表示一个字符。 \n \nUTF-8兼容ASCII。\n```\n\n#utf16编码\nutf-16 和unicode规范是一致的，所以不兼容ascii。\n以上信息来源参考： ![这里的博客](http://polaris.blog.51cto.com/1146394/377468/)\n","source":"_posts/vim/vim_luanma.md","raw":"---\nlayout: \"post\"\ntitle: \"vim 乱码\"\ndate: \"2016-10-26 18:37\"\n\n---\n\n# 首先 中文os下，我们一般的设置是：\n```shell \nset encoding=utf-8                                \"设置gvim内部编码\nset fileencoding=utf-8                               \"设置当前文件编码\nset fileencodings=gbk,utf-8,shift_jis,ucs-bom,latin1,gb2312,cp936,cp932    设置支持打开的文件的编码\n\nset termencoding=utf-8\nset guifont=DejaVu\\\\ Sans\\\\ Mono\\\\:h13   \n```\n\n上述，set fileencodings设置的文字编码解析顺位，对于中文是可以解析出来的,shift_jis编码的文件，就会出现乱码。除非你把shift_jis设置第一位：\n\n```shell\nset fileencodings=shift_jis,gbk,utf-8,ucs-bom,latin1,gb2312,cp936,cp932 \n```\n\n# 对于日文os ，安装gvim后，需要如下设置：\n由于本地ANSI是cp932 , 所以把cp932 放在第一或者第二的位置，\n如果放到第三或者后面就会出现shift_jis编码的日文打开后是文本乱码现象。\n\n```shell\nset encoding=utf-8                                    \"设置gvim内部编码\nset fileencoding=utf-8                               \"设置当前文件编码\nset fileencodings=CP932,utf-8,gbk,,ucs-bom,latin1,gb2312,cp936 #设置支持打开的文件的编码\n\nset termencoding=utf-8\n\nset guifont=DejaVu\\ Sans\\ Mono\\:h13 \nset guifontwide=NSimsun\\:h14  \n#设置新宋体      \n\n```\n\n由于DejaVu Sans Mono 字体是英文字符字体，无法正确显示宽字体，所以需要特别加入\n```shell\nset guifontwide=NSimsun\\:h14 \n#设置新宋体 ，显示汉字\n```\n\n所以大家在自己的sublime 或者vim中设置编辑器字体DejaVu Sans Mono就好像可以显示正确的汉字和英文，其实我们设置的只是英文字符显示的样式。汉字其实是系统本地ANSI编码。\n\n## 本地ANSI编码\n世界上每种语言对应的windows 系统都有各自的ANSI，互相不兼容。\n\n比如 中文ANSI == GBK(中文) ，gbk是gb2312(简体中文)的扩展，包含繁体，日文片假名。cp936就是gbk\n    日文ANSI == Windows-31J  就是cp932. \nshift_jis也是一种日文字符编码,不过，只实现了cp932的部分，所以cp932编码的东东，shift_jis可能乱码。shift_jis编码的，cp932一定正常显示。\n\n这是微软早起应对不同国家一种混合的编码：字母+对应的国家文字,这种字符也是多字节字符。比如：中文ANSI,字母数字是1字节 ,汉字是2字节。两种语言文字有可能在一起就显示乱码。不过微软提供了本地ANSI转换为标准unicode字符的方案，通过代码页转换表技术这一过度方案。\n\n## nnicode编码规范\nunicode 是将全世界所有的字符都统一编码的方案(规范))。那么字符a的编码本来是1byte ,现在统一和一个汉字一样长了。那么问题来了，字符串是'\\0'字符结尾。世界上的很久以前写的c程序，就没办法用了。所以说unicode应该早点出来。\n\n有了这种全字符集，解决了乱码，却没法用，蛋疼吧，可是utf8这一实现字符保存，传输的方案出现了。因为utf8是可变长的。不同位段，长度不一致。 \n\n## utf-8编码\n```html\nUCS-2编码(16进制)   UTF-8 字节流(二进制)\n0000 - 007F         0xxxxxxx\n0080 - 07FF         110xxxxx 10xxxxxx\n0800 - FFFF         1110xxxx 10xxxxxx 10xxxxxx \n \n例如“汉”字的Unicode编码是6C49。6C49在0800-FFFF之间，所以肯定要用3字节模板了：1110xxxx 10xxxxxx 10xxxxxx。将6C49写成二进制是：0110 110001 001001，用这个比特流依次代替模板中的x，得到：11100110 10110001 10001001，即E6 B1 89。\n \n可见UTF-8是变长的，将Unicode编码为00000000-0000007F的字符，用单个字节来表示； 00000080-000007FF的字符用两个字节表示；00000800-0000FFFF的字符用3字节表示。因为目前为止Unicode-16规范没有指定FFFF以上的字符，所以UTF-8最多是使用3个字节来表示一个字符。但理论上来说，UTF-8最多需要用6字节表示一个字符。 \n \nUTF-8兼容ASCII。\n```\n\n#utf16编码\nutf-16 和unicode规范是一致的，所以不兼容ascii。\n以上信息来源参考： ![这里的博客](http://polaris.blog.51cto.com/1146394/377468/)\n","slug":"vim/vim_luanma","published":1,"updated":"2018-05-26T02:38:14.914Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8rg0010kwliwyi9hru1","content":"<h1 id=\"首先-中文os下，我们一般的设置是：\"><a href=\"#首先-中文os下，我们一般的设置是：\" class=\"headerlink\" title=\"首先 中文os下，我们一般的设置是：\"></a>首先 中文os下，我们一般的设置是：</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set encoding=utf-8                                \"设置gvim内部编码</span><br><span class=\"line\">set fileencoding=utf-8                               \"设置当前文件编码</span><br><span class=\"line\">set fileencodings=gbk,utf-8,shift_jis,ucs-bom,latin1,gb2312,cp936,cp932    设置支持打开的文件的编码</span><br><span class=\"line\"></span><br><span class=\"line\">set termencoding=utf-8</span><br><span class=\"line\">set guifont=DejaVu\\\\ Sans\\\\ Mono\\\\:h13</span><br></pre></td></tr></table></figure>\n<p>上述，set fileencodings设置的文字编码解析顺位，对于中文是可以解析出来的,shift_jis编码的文件，就会出现乱码。除非你把shift_jis设置第一位：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set fileencodings=shift_jis,gbk,utf-8,ucs-bom,latin1,gb2312,cp936,cp932</span><br></pre></td></tr></table></figure>\n<h1 id=\"对于日文os-，安装gvim后，需要如下设置：\"><a href=\"#对于日文os-，安装gvim后，需要如下设置：\" class=\"headerlink\" title=\"对于日文os ，安装gvim后，需要如下设置：\"></a>对于日文os ，安装gvim后，需要如下设置：</h1><p>由于本地ANSI是cp932 , 所以把cp932 放在第一或者第二的位置，<br>如果放到第三或者后面就会出现shift_jis编码的日文打开后是文本乱码现象。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set encoding=utf-8                                    \"设置gvim内部编码</span><br><span class=\"line\">set fileencoding=utf-8                               \"设置当前文件编码</span><br><span class=\"line\">set fileencodings=CP932,utf-8,gbk,,ucs-bom,latin1,gb2312,cp936 #设置支持打开的文件的编码</span><br><span class=\"line\"></span><br><span class=\"line\">set termencoding=utf-8</span><br><span class=\"line\"></span><br><span class=\"line\">set guifont=DejaVu\\ Sans\\ Mono\\:h13 </span><br><span class=\"line\">set guifontwide=NSimsun\\:h14  </span><br><span class=\"line\"><span class=\"meta\">#</span>设置新宋体</span><br></pre></td></tr></table></figure>\n<p>由于DejaVu Sans Mono 字体是英文字符字体，无法正确显示宽字体，所以需要特别加入<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set guifontwide=NSimsun\\:h14 </span><br><span class=\"line\"><span class=\"meta\">#</span>设置新宋体 ，显示汉字</span><br></pre></td></tr></table></figure></p>\n<p>所以大家在自己的sublime 或者vim中设置编辑器字体DejaVu Sans Mono就好像可以显示正确的汉字和英文，其实我们设置的只是英文字符显示的样式。汉字其实是系统本地ANSI编码。</p>\n<h2 id=\"本地ANSI编码\"><a href=\"#本地ANSI编码\" class=\"headerlink\" title=\"本地ANSI编码\"></a>本地ANSI编码</h2><p>世界上每种语言对应的windows 系统都有各自的ANSI，互相不兼容。</p>\n<p>比如 中文ANSI == GBK(中文) ，gbk是gb2312(简体中文)的扩展，包含繁体，日文片假名。cp936就是gbk<br>    日文ANSI == Windows-31J  就是cp932.<br>shift_jis也是一种日文字符编码,不过，只实现了cp932的部分，所以cp932编码的东东，shift_jis可能乱码。shift_jis编码的，cp932一定正常显示。</p>\n<p>这是微软早起应对不同国家一种混合的编码：字母+对应的国家文字,这种字符也是多字节字符。比如：中文ANSI,字母数字是1字节 ,汉字是2字节。两种语言文字有可能在一起就显示乱码。不过微软提供了本地ANSI转换为标准unicode字符的方案，通过代码页转换表技术这一过度方案。</p>\n<h2 id=\"nnicode编码规范\"><a href=\"#nnicode编码规范\" class=\"headerlink\" title=\"nnicode编码规范\"></a>nnicode编码规范</h2><p>unicode 是将全世界所有的字符都统一编码的方案(规范))。那么字符a的编码本来是1byte ,现在统一和一个汉字一样长了。那么问题来了，字符串是’\\0’字符结尾。世界上的很久以前写的c程序，就没办法用了。所以说unicode应该早点出来。</p>\n<p>有了这种全字符集，解决了乱码，却没法用，蛋疼吧，可是utf8这一实现字符保存，传输的方案出现了。因为utf8是可变长的。不同位段，长度不一致。 </p>\n<h2 id=\"utf-8编码\"><a href=\"#utf-8编码\" class=\"headerlink\" title=\"utf-8编码\"></a>utf-8编码</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UCS-2编码(16进制)   UTF-8 字节流(二进制)</span><br><span class=\"line\">0000 - 007F         0xxxxxxx</span><br><span class=\"line\">0080 - 07FF         110xxxxx 10xxxxxx</span><br><span class=\"line\">0800 - FFFF         1110xxxx 10xxxxxx 10xxxxxx </span><br><span class=\"line\"> </span><br><span class=\"line\">例如“汉”字的Unicode编码是6C49。6C49在0800-FFFF之间，所以肯定要用3字节模板了：1110xxxx 10xxxxxx 10xxxxxx。将6C49写成二进制是：0110 110001 001001，用这个比特流依次代替模板中的x，得到：11100110 10110001 10001001，即E6 B1 89。</span><br><span class=\"line\"> </span><br><span class=\"line\">可见UTF-8是变长的，将Unicode编码为00000000-0000007F的字符，用单个字节来表示； 00000080-000007FF的字符用两个字节表示；00000800-0000FFFF的字符用3字节表示。因为目前为止Unicode-16规范没有指定FFFF以上的字符，所以UTF-8最多是使用3个字节来表示一个字符。但理论上来说，UTF-8最多需要用6字节表示一个字符。 </span><br><span class=\"line\"> </span><br><span class=\"line\">UTF-8兼容ASCII。</span><br></pre></td></tr></table></figure>\n<p>#utf16编码<br>utf-16 和unicode规范是一致的，所以不兼容ascii。<br>以上信息来源参考： <img src=\"http://polaris.blog.51cto.com/1146394/377468/\" alt=\"这里的博客\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"首先-中文os下，我们一般的设置是：\"><a href=\"#首先-中文os下，我们一般的设置是：\" class=\"headerlink\" title=\"首先 中文os下，我们一般的设置是：\"></a>首先 中文os下，我们一般的设置是：</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set encoding=utf-8                                \"设置gvim内部编码</span><br><span class=\"line\">set fileencoding=utf-8                               \"设置当前文件编码</span><br><span class=\"line\">set fileencodings=gbk,utf-8,shift_jis,ucs-bom,latin1,gb2312,cp936,cp932    设置支持打开的文件的编码</span><br><span class=\"line\"></span><br><span class=\"line\">set termencoding=utf-8</span><br><span class=\"line\">set guifont=DejaVu\\\\ Sans\\\\ Mono\\\\:h13</span><br></pre></td></tr></table></figure>\n<p>上述，set fileencodings设置的文字编码解析顺位，对于中文是可以解析出来的,shift_jis编码的文件，就会出现乱码。除非你把shift_jis设置第一位：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set fileencodings=shift_jis,gbk,utf-8,ucs-bom,latin1,gb2312,cp936,cp932</span><br></pre></td></tr></table></figure>\n<h1 id=\"对于日文os-，安装gvim后，需要如下设置：\"><a href=\"#对于日文os-，安装gvim后，需要如下设置：\" class=\"headerlink\" title=\"对于日文os ，安装gvim后，需要如下设置：\"></a>对于日文os ，安装gvim后，需要如下设置：</h1><p>由于本地ANSI是cp932 , 所以把cp932 放在第一或者第二的位置，<br>如果放到第三或者后面就会出现shift_jis编码的日文打开后是文本乱码现象。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set encoding=utf-8                                    \"设置gvim内部编码</span><br><span class=\"line\">set fileencoding=utf-8                               \"设置当前文件编码</span><br><span class=\"line\">set fileencodings=CP932,utf-8,gbk,,ucs-bom,latin1,gb2312,cp936 #设置支持打开的文件的编码</span><br><span class=\"line\"></span><br><span class=\"line\">set termencoding=utf-8</span><br><span class=\"line\"></span><br><span class=\"line\">set guifont=DejaVu\\ Sans\\ Mono\\:h13 </span><br><span class=\"line\">set guifontwide=NSimsun\\:h14  </span><br><span class=\"line\"><span class=\"meta\">#</span>设置新宋体</span><br></pre></td></tr></table></figure>\n<p>由于DejaVu Sans Mono 字体是英文字符字体，无法正确显示宽字体，所以需要特别加入<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set guifontwide=NSimsun\\:h14 </span><br><span class=\"line\"><span class=\"meta\">#</span>设置新宋体 ，显示汉字</span><br></pre></td></tr></table></figure></p>\n<p>所以大家在自己的sublime 或者vim中设置编辑器字体DejaVu Sans Mono就好像可以显示正确的汉字和英文，其实我们设置的只是英文字符显示的样式。汉字其实是系统本地ANSI编码。</p>\n<h2 id=\"本地ANSI编码\"><a href=\"#本地ANSI编码\" class=\"headerlink\" title=\"本地ANSI编码\"></a>本地ANSI编码</h2><p>世界上每种语言对应的windows 系统都有各自的ANSI，互相不兼容。</p>\n<p>比如 中文ANSI == GBK(中文) ，gbk是gb2312(简体中文)的扩展，包含繁体，日文片假名。cp936就是gbk<br>    日文ANSI == Windows-31J  就是cp932.<br>shift_jis也是一种日文字符编码,不过，只实现了cp932的部分，所以cp932编码的东东，shift_jis可能乱码。shift_jis编码的，cp932一定正常显示。</p>\n<p>这是微软早起应对不同国家一种混合的编码：字母+对应的国家文字,这种字符也是多字节字符。比如：中文ANSI,字母数字是1字节 ,汉字是2字节。两种语言文字有可能在一起就显示乱码。不过微软提供了本地ANSI转换为标准unicode字符的方案，通过代码页转换表技术这一过度方案。</p>\n<h2 id=\"nnicode编码规范\"><a href=\"#nnicode编码规范\" class=\"headerlink\" title=\"nnicode编码规范\"></a>nnicode编码规范</h2><p>unicode 是将全世界所有的字符都统一编码的方案(规范))。那么字符a的编码本来是1byte ,现在统一和一个汉字一样长了。那么问题来了，字符串是’\\0’字符结尾。世界上的很久以前写的c程序，就没办法用了。所以说unicode应该早点出来。</p>\n<p>有了这种全字符集，解决了乱码，却没法用，蛋疼吧，可是utf8这一实现字符保存，传输的方案出现了。因为utf8是可变长的。不同位段，长度不一致。 </p>\n<h2 id=\"utf-8编码\"><a href=\"#utf-8编码\" class=\"headerlink\" title=\"utf-8编码\"></a>utf-8编码</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UCS-2编码(16进制)   UTF-8 字节流(二进制)</span><br><span class=\"line\">0000 - 007F         0xxxxxxx</span><br><span class=\"line\">0080 - 07FF         110xxxxx 10xxxxxx</span><br><span class=\"line\">0800 - FFFF         1110xxxx 10xxxxxx 10xxxxxx </span><br><span class=\"line\"> </span><br><span class=\"line\">例如“汉”字的Unicode编码是6C49。6C49在0800-FFFF之间，所以肯定要用3字节模板了：1110xxxx 10xxxxxx 10xxxxxx。将6C49写成二进制是：0110 110001 001001，用这个比特流依次代替模板中的x，得到：11100110 10110001 10001001，即E6 B1 89。</span><br><span class=\"line\"> </span><br><span class=\"line\">可见UTF-8是变长的，将Unicode编码为00000000-0000007F的字符，用单个字节来表示； 00000080-000007FF的字符用两个字节表示；00000800-0000FFFF的字符用3字节表示。因为目前为止Unicode-16规范没有指定FFFF以上的字符，所以UTF-8最多是使用3个字节来表示一个字符。但理论上来说，UTF-8最多需要用6字节表示一个字符。 </span><br><span class=\"line\"> </span><br><span class=\"line\">UTF-8兼容ASCII。</span><br></pre></td></tr></table></figure>\n<p>#utf16编码<br>utf-16 和unicode规范是一致的，所以不兼容ascii。<br>以上信息来源参考： <img src=\"http://polaris.blog.51cto.com/1146394/377468/\" alt=\"这里的博客\"></p>\n"},{"layout":"post","title":"nerdtree插件","date":"2016-10-06T12:07:30.000Z","comments":1,"_content":"\n#nerdtree插件，可以在vim左侧显示目录\n\n## 使用说明\n\n1、在linux命令行界面，输入vim\n\n2、输入 :NERDTree ，回车\n\n3、进入当前目录的树形界面，通过小键盘上下键，能移动选中的目录或文件\n\n4、目录前面有+或者>号，摁Enter会展开目录，文件前面是-号，摁Enter会在右侧窗口展现该文件的内容，光标自动移到右侧文件窗口。\n\n5、ctr+w+h 光标移到左侧树形目录，ctrl+w+l 光标移到右侧文件显示窗口。多次摁 ctrl+w，光标自动在左右侧窗口切换\n\n6、光标focus左侧树形窗口，摁? 弹出NERDTree的帮助，再次摁？关闭帮助显示\n\n7、输入:q回车，关闭光标所在窗口\n\n \n\n## 进阶用法\n\no 打开关闭文件或者目录\nt 在标签页中打开\nT 在后台标签页中打开\n! 执行此文件\np 到上层目录\nP 到根目录\nK 到第一个节点\nJ 到最后一个节点\nu 打开上层目录\nm 显示文件系统菜单（添加、删除、移动操作）\n? 帮助\nq 关闭\n","source":"_posts/vim/vim_nerdtree.md","raw":"---\nlayout: post\ntitle: nerdtree插件\ncategory: vim\ndate: 2016-10-6 20:07:30\ntags: vim\ncomments: true\n\n---\n\n#nerdtree插件，可以在vim左侧显示目录\n\n## 使用说明\n\n1、在linux命令行界面，输入vim\n\n2、输入 :NERDTree ，回车\n\n3、进入当前目录的树形界面，通过小键盘上下键，能移动选中的目录或文件\n\n4、目录前面有+或者>号，摁Enter会展开目录，文件前面是-号，摁Enter会在右侧窗口展现该文件的内容，光标自动移到右侧文件窗口。\n\n5、ctr+w+h 光标移到左侧树形目录，ctrl+w+l 光标移到右侧文件显示窗口。多次摁 ctrl+w，光标自动在左右侧窗口切换\n\n6、光标focus左侧树形窗口，摁? 弹出NERDTree的帮助，再次摁？关闭帮助显示\n\n7、输入:q回车，关闭光标所在窗口\n\n \n\n## 进阶用法\n\no 打开关闭文件或者目录\nt 在标签页中打开\nT 在后台标签页中打开\n! 执行此文件\np 到上层目录\nP 到根目录\nK 到第一个节点\nJ 到最后一个节点\nu 打开上层目录\nm 显示文件系统菜单（添加、删除、移动操作）\n? 帮助\nq 关闭\n","slug":"vim/vim_nerdtree","published":1,"updated":"2018-05-26T02:38:14.915Z","photos":[],"link":"","_id":"cjrd0e8rh0012kwlil4983h88","content":"<p>#nerdtree插件，可以在vim左侧显示目录</p>\n<h2 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h2><p>1、在linux命令行界面，输入vim</p>\n<p>2、输入 :NERDTree ，回车</p>\n<p>3、进入当前目录的树形界面，通过小键盘上下键，能移动选中的目录或文件</p>\n<p>4、目录前面有+或者&gt;号，摁Enter会展开目录，文件前面是-号，摁Enter会在右侧窗口展现该文件的内容，光标自动移到右侧文件窗口。</p>\n<p>5、ctr+w+h 光标移到左侧树形目录，ctrl+w+l 光标移到右侧文件显示窗口。多次摁 ctrl+w，光标自动在左右侧窗口切换</p>\n<p>6、光标focus左侧树形窗口，摁? 弹出NERDTree的帮助，再次摁？关闭帮助显示</p>\n<p>7、输入:q回车，关闭光标所在窗口</p>\n<h2 id=\"进阶用法\"><a href=\"#进阶用法\" class=\"headerlink\" title=\"进阶用法\"></a>进阶用法</h2><p>o 打开关闭文件或者目录<br>t 在标签页中打开<br>T 在后台标签页中打开<br>! 执行此文件<br>p 到上层目录<br>P 到根目录<br>K 到第一个节点<br>J 到最后一个节点<br>u 打开上层目录<br>m 显示文件系统菜单（添加、删除、移动操作）<br>? 帮助<br>q 关闭</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#nerdtree插件，可以在vim左侧显示目录</p>\n<h2 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h2><p>1、在linux命令行界面，输入vim</p>\n<p>2、输入 :NERDTree ，回车</p>\n<p>3、进入当前目录的树形界面，通过小键盘上下键，能移动选中的目录或文件</p>\n<p>4、目录前面有+或者&gt;号，摁Enter会展开目录，文件前面是-号，摁Enter会在右侧窗口展现该文件的内容，光标自动移到右侧文件窗口。</p>\n<p>5、ctr+w+h 光标移到左侧树形目录，ctrl+w+l 光标移到右侧文件显示窗口。多次摁 ctrl+w，光标自动在左右侧窗口切换</p>\n<p>6、光标focus左侧树形窗口，摁? 弹出NERDTree的帮助，再次摁？关闭帮助显示</p>\n<p>7、输入:q回车，关闭光标所在窗口</p>\n<h2 id=\"进阶用法\"><a href=\"#进阶用法\" class=\"headerlink\" title=\"进阶用法\"></a>进阶用法</h2><p>o 打开关闭文件或者目录<br>t 在标签页中打开<br>T 在后台标签页中打开<br>! 执行此文件<br>p 到上层目录<br>P 到根目录<br>K 到第一个节点<br>J 到最后一个节点<br>u 打开上层目录<br>m 显示文件系统菜单（添加、删除、移动操作）<br>? 帮助<br>q 关闭</p>\n"},{"layout":"post","title":"syntastic vim  静态分析插件","date":"2016-10-05T12:10:30.000Z","comments":1,"_content":"\n# syntastic vim  静态分析插件，里面带有各种语言的分析工具，是为了代码补全提示\n\n```html\n配置如下：\n_vimrc文件加入：\nBundle 'scrooloose/syntastic'\n打开vim： BundleInstall 安装插件。\n配置如下：\nlet g:syntastic_error_symbol='>>'\nlet g:syntastic_warning_symbol='>'\nlet g:syntastic_check_on_open=1\nlet g:syntastic_check_on_wq=0\nlet g:syntastic_enable_highlighting=1\n#下面一行是指定使用哪种工具分析python语法和javascript语法\nlet g:syntastic_python_checkers=['pyflakes'] \" 使用pyflakes,速度比pylint快\nlet g:syntastic_javascript_checkers = ['jsl', 'jshint']\nlet g:syntastic_html_checkers=['tidy', 'jshint']\n\n```\n","source":"_posts/vim/vim_syntastic.md","raw":"---\nlayout: post\ntitle: syntastic vim  静态分析插件\ncategory: vim\ntags: vim\ndate: 2016-10-5 20:10:30\ncomments: true\n\n---\n\n# syntastic vim  静态分析插件，里面带有各种语言的分析工具，是为了代码补全提示\n\n```html\n配置如下：\n_vimrc文件加入：\nBundle 'scrooloose/syntastic'\n打开vim： BundleInstall 安装插件。\n配置如下：\nlet g:syntastic_error_symbol='>>'\nlet g:syntastic_warning_symbol='>'\nlet g:syntastic_check_on_open=1\nlet g:syntastic_check_on_wq=0\nlet g:syntastic_enable_highlighting=1\n#下面一行是指定使用哪种工具分析python语法和javascript语法\nlet g:syntastic_python_checkers=['pyflakes'] \" 使用pyflakes,速度比pylint快\nlet g:syntastic_javascript_checkers = ['jsl', 'jshint']\nlet g:syntastic_html_checkers=['tidy', 'jshint']\n\n```\n","slug":"vim/vim_syntastic","published":1,"updated":"2018-05-26T02:38:14.913Z","photos":[],"link":"","_id":"cjrd0e8rj0015kwlifyi04wg2","content":"<h1 id=\"syntastic-vim-静态分析插件，里面带有各种语言的分析工具，是为了代码补全提示\"><a href=\"#syntastic-vim-静态分析插件，里面带有各种语言的分析工具，是为了代码补全提示\" class=\"headerlink\" title=\"syntastic vim  静态分析插件，里面带有各种语言的分析工具，是为了代码补全提示\"></a>syntastic vim  静态分析插件，里面带有各种语言的分析工具，是为了代码补全提示</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置如下：</span><br><span class=\"line\">_vimrc文件加入：</span><br><span class=\"line\">Bundle 'scrooloose/syntastic'</span><br><span class=\"line\">打开vim： BundleInstall 安装插件。</span><br><span class=\"line\">配置如下：</span><br><span class=\"line\">let g:syntastic_error_symbol='&gt;&gt;'</span><br><span class=\"line\">let g:syntastic_warning_symbol='&gt;'</span><br><span class=\"line\">let g:syntastic_check_on_open=1</span><br><span class=\"line\">let g:syntastic_check_on_wq=0</span><br><span class=\"line\">let g:syntastic_enable_highlighting=1</span><br><span class=\"line\">#下面一行是指定使用哪种工具分析python语法和javascript语法</span><br><span class=\"line\">let g:syntastic_python_checkers=['pyflakes'] \" 使用pyflakes,速度比pylint快</span><br><span class=\"line\">let g:syntastic_javascript_checkers = ['jsl', 'jshint']</span><br><span class=\"line\">let g:syntastic_html_checkers=['tidy', 'jshint']</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"syntastic-vim-静态分析插件，里面带有各种语言的分析工具，是为了代码补全提示\"><a href=\"#syntastic-vim-静态分析插件，里面带有各种语言的分析工具，是为了代码补全提示\" class=\"headerlink\" title=\"syntastic vim  静态分析插件，里面带有各种语言的分析工具，是为了代码补全提示\"></a>syntastic vim  静态分析插件，里面带有各种语言的分析工具，是为了代码补全提示</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置如下：</span><br><span class=\"line\">_vimrc文件加入：</span><br><span class=\"line\">Bundle 'scrooloose/syntastic'</span><br><span class=\"line\">打开vim： BundleInstall 安装插件。</span><br><span class=\"line\">配置如下：</span><br><span class=\"line\">let g:syntastic_error_symbol='&gt;&gt;'</span><br><span class=\"line\">let g:syntastic_warning_symbol='&gt;'</span><br><span class=\"line\">let g:syntastic_check_on_open=1</span><br><span class=\"line\">let g:syntastic_check_on_wq=0</span><br><span class=\"line\">let g:syntastic_enable_highlighting=1</span><br><span class=\"line\">#下面一行是指定使用哪种工具分析python语法和javascript语法</span><br><span class=\"line\">let g:syntastic_python_checkers=['pyflakes'] \" 使用pyflakes,速度比pylint快</span><br><span class=\"line\">let g:syntastic_javascript_checkers = ['jsl', 'jshint']</span><br><span class=\"line\">let g:syntastic_html_checkers=['tidy', 'jshint']</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"ajax简介","date":"2016-10-06T12:04:30.000Z","comments":1,"_content":"\n# 1.ajax 简介\najax =  异步javascript+XML\nAAJAX是基于现有的Internet标准，并且联合使用它们：\nXMLHttpRequest 对象 (异步的与服务器交换数据)\nJavaScript/DOM (信息显示/交互)\nCSS (给数据定义样式)\nXML (作为转换数据的格式)\nlamp  AJAX应用程序与浏览器和平台无关的！\n实现不刷新整个页面，实现页面动态更新的技术。\n\najax工作原理：\n\n![](http://www.ziqiangxuetang.com/static/images/ajax.gif)\n\n# 2.ajax实例\n 1.首先建立XMLHttpRequest对象，区分不同的浏览器版本，IE5,IE6不支持直接建立XMLHttpRequest对象，所以： \n\n```javascript\n\nvar xmlhttp;\nif(window.XMLHttpRequest){ //如果为真，则支持XMLHttpRequest对象\n    xmlhttp = new XMLHttpRequest();\n}else{\n    //code for IE5,6\n    xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\";)\n}\n\n```\n\n2.XMLHttpRequest对象用于和服务器交换数据\n\nopen方法用于发送请求，参数1：方法，参数2：url，参数3:异步/同步\n\n> xmlhttp.open(\"GET\",\"ajax_info.txt\",true)\n\nsend方法也用于请求，不过只支持post请求，参数：string\n\n> xmlhttp.send(string);\n\nGET和POST的区别：\n* GET更简单，更快，大部分情况都能用。以下情况使用POST：\n* 无法使用缓存文件更新服务器上的文件或数据库。\n* 发送大量数据到服务器。\n* 发送用户输入的未知字符到服务器时。 \n\n# 例子 \n\nget请求：\n```javascript\nxmlhttp.open(\"GET\",\"demo_get2.html?fname=Henry&lname=Ford\",true);\nxmlhttp.send();\n```\npost请求：\n\n如果post表单那样的提交数据，需要添加http头\n```javascript\n\nxmlhttp.open(\"POST\",\"ajax_test.html\",true);\nxmlhttp.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\nxmlhttp.send(\"fname=Henry&lname=Ford\");\n\nsetRequestHeader方法：\nsetRequestHeader(header,value)  \n向请求添加 HTTP 头。\nheader: 规定头的名称\nvalue: 规定头的值\n```\n\n# Async=true\n* 使用XMLRequest.open()方法时，一般在ajax第三个参数必须是true（异步）\n而且规定请求就绪时执行的函数。也就是定义 XMLHttpRequest.onreadystatechange 事件函数。\n当请求完成时，触发该函数，类似定时器。\n* 因为web请求也许需要一段时间，所以发送异步请求，等待请求的这段时间可以执行其他代码。请求得到返回时，再执行onreadystatechange中的函数。\n\n```javascript\nxmlhttp.onreadystatechange=function() //\n  {\n  if (xmlhttp.readyState==4 && xmlhttp.status==200)//请求正确返回http code 200时\n  //执行修改id为mydiv的html元素内容。\n    {\n    document.getElementById(\"myDiv\").innerHTML=xmlhttp.responseText;\n    }\n  }\nxmlhttp.open(\"GET\",\"ajax_info.txt\",true); //请求ajax_info.txt文件，\nxmlhttp.send();\n```\n\n#Async=false \n* 不推荐，对于小型的请求也下可以。因为javascript会等待服务器返回后才继续向下执行。如果服务器繁忙，应用程序会挂起或者挂掉。\n\n# XMLHttpRequest响应\n如果返回200,就可以使用\n","source":"_posts/web/ajax.md","raw":"---\nlayout: post\ntitle: ajax简介\ncategory: web\ntags: ajax\ndate: 2016-10-6 20:04:30\ncomments: true\n\n---\n\n# 1.ajax 简介\najax =  异步javascript+XML\nAAJAX是基于现有的Internet标准，并且联合使用它们：\nXMLHttpRequest 对象 (异步的与服务器交换数据)\nJavaScript/DOM (信息显示/交互)\nCSS (给数据定义样式)\nXML (作为转换数据的格式)\nlamp  AJAX应用程序与浏览器和平台无关的！\n实现不刷新整个页面，实现页面动态更新的技术。\n\najax工作原理：\n\n![](http://www.ziqiangxuetang.com/static/images/ajax.gif)\n\n# 2.ajax实例\n 1.首先建立XMLHttpRequest对象，区分不同的浏览器版本，IE5,IE6不支持直接建立XMLHttpRequest对象，所以： \n\n```javascript\n\nvar xmlhttp;\nif(window.XMLHttpRequest){ //如果为真，则支持XMLHttpRequest对象\n    xmlhttp = new XMLHttpRequest();\n}else{\n    //code for IE5,6\n    xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\";)\n}\n\n```\n\n2.XMLHttpRequest对象用于和服务器交换数据\n\nopen方法用于发送请求，参数1：方法，参数2：url，参数3:异步/同步\n\n> xmlhttp.open(\"GET\",\"ajax_info.txt\",true)\n\nsend方法也用于请求，不过只支持post请求，参数：string\n\n> xmlhttp.send(string);\n\nGET和POST的区别：\n* GET更简单，更快，大部分情况都能用。以下情况使用POST：\n* 无法使用缓存文件更新服务器上的文件或数据库。\n* 发送大量数据到服务器。\n* 发送用户输入的未知字符到服务器时。 \n\n# 例子 \n\nget请求：\n```javascript\nxmlhttp.open(\"GET\",\"demo_get2.html?fname=Henry&lname=Ford\",true);\nxmlhttp.send();\n```\npost请求：\n\n如果post表单那样的提交数据，需要添加http头\n```javascript\n\nxmlhttp.open(\"POST\",\"ajax_test.html\",true);\nxmlhttp.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\nxmlhttp.send(\"fname=Henry&lname=Ford\");\n\nsetRequestHeader方法：\nsetRequestHeader(header,value)  \n向请求添加 HTTP 头。\nheader: 规定头的名称\nvalue: 规定头的值\n```\n\n# Async=true\n* 使用XMLRequest.open()方法时，一般在ajax第三个参数必须是true（异步）\n而且规定请求就绪时执行的函数。也就是定义 XMLHttpRequest.onreadystatechange 事件函数。\n当请求完成时，触发该函数，类似定时器。\n* 因为web请求也许需要一段时间，所以发送异步请求，等待请求的这段时间可以执行其他代码。请求得到返回时，再执行onreadystatechange中的函数。\n\n```javascript\nxmlhttp.onreadystatechange=function() //\n  {\n  if (xmlhttp.readyState==4 && xmlhttp.status==200)//请求正确返回http code 200时\n  //执行修改id为mydiv的html元素内容。\n    {\n    document.getElementById(\"myDiv\").innerHTML=xmlhttp.responseText;\n    }\n  }\nxmlhttp.open(\"GET\",\"ajax_info.txt\",true); //请求ajax_info.txt文件，\nxmlhttp.send();\n```\n\n#Async=false \n* 不推荐，对于小型的请求也下可以。因为javascript会等待服务器返回后才继续向下执行。如果服务器繁忙，应用程序会挂起或者挂掉。\n\n# XMLHttpRequest响应\n如果返回200,就可以使用\n","slug":"web/ajax","published":1,"updated":"2018-05-26T02:38:14.916Z","photos":[],"link":"","_id":"cjrd0e8rl0016kwli34q11i98","content":"<h1 id=\"1-ajax-简介\"><a href=\"#1-ajax-简介\" class=\"headerlink\" title=\"1.ajax 简介\"></a>1.ajax 简介</h1><p>ajax =  异步javascript+XML<br>AAJAX是基于现有的Internet标准，并且联合使用它们：<br>XMLHttpRequest 对象 (异步的与服务器交换数据)<br>JavaScript/DOM (信息显示/交互)<br>CSS (给数据定义样式)<br>XML (作为转换数据的格式)<br>lamp  AJAX应用程序与浏览器和平台无关的！<br>实现不刷新整个页面，实现页面动态更新的技术。</p>\n<p>ajax工作原理：</p>\n<p><img src=\"http://www.ziqiangxuetang.com/static/images/ajax.gif\" alt=\"\"></p>\n<h1 id=\"2-ajax实例\"><a href=\"#2-ajax实例\" class=\"headerlink\" title=\"2.ajax实例\"></a>2.ajax实例</h1><p> 1.首先建立XMLHttpRequest对象，区分不同的浏览器版本，IE5,IE6不支持直接建立XMLHttpRequest对象，所以： </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> xmlhttp;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.XMLHttpRequest)&#123; <span class=\"comment\">//如果为真，则支持XMLHttpRequest对象</span></span><br><span class=\"line\">    xmlhttp = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//code for IE5,6</span></span><br><span class=\"line\">    xmlhttp = <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.XMLHttpRequest对象用于和服务器交换数据</p>\n<p>open方法用于发送请求，参数1：方法，参数2：url，参数3:异步/同步</p>\n<blockquote>\n<p>xmlhttp.open(“GET”,”ajax_info.txt”,true)</p>\n</blockquote>\n<p>send方法也用于请求，不过只支持post请求，参数：string</p>\n<blockquote>\n<p>xmlhttp.send(string);</p>\n</blockquote>\n<p>GET和POST的区别：</p>\n<ul>\n<li>GET更简单，更快，大部分情况都能用。以下情况使用POST：</li>\n<li>无法使用缓存文件更新服务器上的文件或数据库。</li>\n<li>发送大量数据到服务器。</li>\n<li>发送用户输入的未知字符到服务器时。 </li>\n</ul>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h1><p>get请求：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlhttp.open(<span class=\"string\">\"GET\"</span>,<span class=\"string\">\"demo_get2.html?fname=Henry&amp;lname=Ford\"</span>,<span class=\"literal\">true</span>);</span><br><span class=\"line\">xmlhttp.send();</span><br></pre></td></tr></table></figure></p>\n<p>post请求：</p>\n<p>如果post表单那样的提交数据，需要添加http头<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">xmlhttp.open(<span class=\"string\">\"POST\"</span>,<span class=\"string\">\"ajax_test.html\"</span>,<span class=\"literal\">true</span>);</span><br><span class=\"line\">xmlhttp.setRequestHeader(<span class=\"string\">\"Content-type\"</span>,<span class=\"string\">\"application/x-www-form-urlencoded\"</span>);</span><br><span class=\"line\">xmlhttp.send(<span class=\"string\">\"fname=Henry&amp;lname=Ford\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">setRequestHeader方法：</span><br><span class=\"line\">setRequestHeader(header,value)  </span><br><span class=\"line\">向请求添加 HTTP 头。</span><br><span class=\"line\">header: 规定头的名称</span><br><span class=\"line\">value: 规定头的值</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Async-true\"><a href=\"#Async-true\" class=\"headerlink\" title=\"Async=true\"></a>Async=true</h1><ul>\n<li>使用XMLRequest.open()方法时，一般在ajax第三个参数必须是true（异步）<br>而且规定请求就绪时执行的函数。也就是定义 XMLHttpRequest.onreadystatechange 事件函数。<br>当请求完成时，触发该函数，类似定时器。</li>\n<li>因为web请求也许需要一段时间，所以发送异步请求，等待请求的这段时间可以执行其他代码。请求得到返回时，再执行onreadystatechange中的函数。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlhttp.onreadystatechange=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) //</span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (xmlhttp.readyState==<span class=\"number\">4</span> &amp;&amp; xmlhttp.status==<span class=\"number\">200</span>)<span class=\"comment\">//请求正确返回http code 200时</span></span><br><span class=\"line\">  <span class=\"comment\">//执行修改id为mydiv的html元素内容。</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"myDiv\"</span>).innerHTML=xmlhttp.responseText;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">xmlhttp.open(<span class=\"string\">\"GET\"</span>,<span class=\"string\">\"ajax_info.txt\"</span>,<span class=\"literal\">true</span>); <span class=\"comment\">//请求ajax_info.txt文件，</span></span><br><span class=\"line\">xmlhttp.send();</span><br></pre></td></tr></table></figure>\n<p>#Async=false </p>\n<ul>\n<li>不推荐，对于小型的请求也下可以。因为javascript会等待服务器返回后才继续向下执行。如果服务器繁忙，应用程序会挂起或者挂掉。</li>\n</ul>\n<h1 id=\"XMLHttpRequest响应\"><a href=\"#XMLHttpRequest响应\" class=\"headerlink\" title=\"XMLHttpRequest响应\"></a>XMLHttpRequest响应</h1><p>如果返回200,就可以使用</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-ajax-简介\"><a href=\"#1-ajax-简介\" class=\"headerlink\" title=\"1.ajax 简介\"></a>1.ajax 简介</h1><p>ajax =  异步javascript+XML<br>AAJAX是基于现有的Internet标准，并且联合使用它们：<br>XMLHttpRequest 对象 (异步的与服务器交换数据)<br>JavaScript/DOM (信息显示/交互)<br>CSS (给数据定义样式)<br>XML (作为转换数据的格式)<br>lamp  AJAX应用程序与浏览器和平台无关的！<br>实现不刷新整个页面，实现页面动态更新的技术。</p>\n<p>ajax工作原理：</p>\n<p><img src=\"http://www.ziqiangxuetang.com/static/images/ajax.gif\" alt=\"\"></p>\n<h1 id=\"2-ajax实例\"><a href=\"#2-ajax实例\" class=\"headerlink\" title=\"2.ajax实例\"></a>2.ajax实例</h1><p> 1.首先建立XMLHttpRequest对象，区分不同的浏览器版本，IE5,IE6不支持直接建立XMLHttpRequest对象，所以： </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> xmlhttp;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.XMLHttpRequest)&#123; <span class=\"comment\">//如果为真，则支持XMLHttpRequest对象</span></span><br><span class=\"line\">    xmlhttp = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//code for IE5,6</span></span><br><span class=\"line\">    xmlhttp = <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.XMLHttpRequest对象用于和服务器交换数据</p>\n<p>open方法用于发送请求，参数1：方法，参数2：url，参数3:异步/同步</p>\n<blockquote>\n<p>xmlhttp.open(“GET”,”ajax_info.txt”,true)</p>\n</blockquote>\n<p>send方法也用于请求，不过只支持post请求，参数：string</p>\n<blockquote>\n<p>xmlhttp.send(string);</p>\n</blockquote>\n<p>GET和POST的区别：</p>\n<ul>\n<li>GET更简单，更快，大部分情况都能用。以下情况使用POST：</li>\n<li>无法使用缓存文件更新服务器上的文件或数据库。</li>\n<li>发送大量数据到服务器。</li>\n<li>发送用户输入的未知字符到服务器时。 </li>\n</ul>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h1><p>get请求：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlhttp.open(<span class=\"string\">\"GET\"</span>,<span class=\"string\">\"demo_get2.html?fname=Henry&amp;lname=Ford\"</span>,<span class=\"literal\">true</span>);</span><br><span class=\"line\">xmlhttp.send();</span><br></pre></td></tr></table></figure></p>\n<p>post请求：</p>\n<p>如果post表单那样的提交数据，需要添加http头<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">xmlhttp.open(<span class=\"string\">\"POST\"</span>,<span class=\"string\">\"ajax_test.html\"</span>,<span class=\"literal\">true</span>);</span><br><span class=\"line\">xmlhttp.setRequestHeader(<span class=\"string\">\"Content-type\"</span>,<span class=\"string\">\"application/x-www-form-urlencoded\"</span>);</span><br><span class=\"line\">xmlhttp.send(<span class=\"string\">\"fname=Henry&amp;lname=Ford\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">setRequestHeader方法：</span><br><span class=\"line\">setRequestHeader(header,value)  </span><br><span class=\"line\">向请求添加 HTTP 头。</span><br><span class=\"line\">header: 规定头的名称</span><br><span class=\"line\">value: 规定头的值</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Async-true\"><a href=\"#Async-true\" class=\"headerlink\" title=\"Async=true\"></a>Async=true</h1><ul>\n<li>使用XMLRequest.open()方法时，一般在ajax第三个参数必须是true（异步）<br>而且规定请求就绪时执行的函数。也就是定义 XMLHttpRequest.onreadystatechange 事件函数。<br>当请求完成时，触发该函数，类似定时器。</li>\n<li>因为web请求也许需要一段时间，所以发送异步请求，等待请求的这段时间可以执行其他代码。请求得到返回时，再执行onreadystatechange中的函数。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlhttp.onreadystatechange=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) //</span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (xmlhttp.readyState==<span class=\"number\">4</span> &amp;&amp; xmlhttp.status==<span class=\"number\">200</span>)<span class=\"comment\">//请求正确返回http code 200时</span></span><br><span class=\"line\">  <span class=\"comment\">//执行修改id为mydiv的html元素内容。</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"myDiv\"</span>).innerHTML=xmlhttp.responseText;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">xmlhttp.open(<span class=\"string\">\"GET\"</span>,<span class=\"string\">\"ajax_info.txt\"</span>,<span class=\"literal\">true</span>); <span class=\"comment\">//请求ajax_info.txt文件，</span></span><br><span class=\"line\">xmlhttp.send();</span><br></pre></td></tr></table></figure>\n<p>#Async=false </p>\n<ul>\n<li>不推荐，对于小型的请求也下可以。因为javascript会等待服务器返回后才继续向下执行。如果服务器繁忙，应用程序会挂起或者挂掉。</li>\n</ul>\n<h1 id=\"XMLHttpRequest响应\"><a href=\"#XMLHttpRequest响应\" class=\"headerlink\" title=\"XMLHttpRequest响应\"></a>XMLHttpRequest响应</h1><p>如果返回200,就可以使用</p>\n"},{"layout":"post","title":"jquery学习笔记1(基础)","date":"2016-09-23T03:12:00.000Z","_content":"\n## 1.安装\njquery就是一个js文件,国内CDN下载 引入：\n```js\n<head>\n<script src=\"jquery-1.10.2.min.js\"></script>\n</head>\n```\n\n## 2.jquery语法\n基础语法：\n$(selector).action()\n$:定义jquery\nselector：查询的html元素\naction：对元素执行的函数\n实例：\n```js\n$(this).hide()  //隐藏当前元素\n$(\"p\").hide() //隐藏p元素\n$(\"p.test\").hide() //隐藏class属性是test的<p>元素\n$(\"#test\").hide() //隐藏所有id为test的元素\n\n```\n\n 文档必须就绪完成才能执行jquery代码，否则操作不存在的元素，就会报错。\n ```js\n $(document).ready(function(){\n\n   // 开始写 jQuery 代码...\n\n});\n ```\n\n## jquery选择器\njQuery 选择器允许您对 HTML 元素组或单个元素进行操作。\njQuery 选择器基于元素的 id、类、类型、属性、属性值等\"查找\"（或选择）HTML 元素。 它基于已经存在的 CSS 选择器，除此之外，它还有一些自定义的选择器。\njQuery 中所有选择器都以美元符号开头：$()。\n\n元素选择器 ：依据元素名\n```js\n$(document).ready(function(){\n  $(\"button\").click(function(){\n    $(\"p\").hide();\n  });\n});\n```\nid选择器 依据元素id\n```js\n$(document).ready(function(){\n  $(\"button\").click(function(){\n    $(\"#test\").hide();\n  });\n});\n```\nclass选择器 依据class属性\n```js\n$(document).ready(function(){\n  $(\"button\").click(function(){\n    $(\".test\").hide();\n  });\n});\n```\n\n更多实例：\n\n语法|描述\n---|---\n$(\"*\") |选取所有元素\n$(this)|选取当前html元素\n$(\"p.intro\")|选取class是intro的p元素\n$(\"p:first\")|选取第一个p元素\n$(\"ul li:first\")|选取第一个ul元素的第一个li元素\n$(\"ul li:first-child\")|选取每个ul的第一个li\n$(\"[href]\")|选取带有href属性的元素\n$(\"a[target='blank']\") |所有target属性是_blank的a元素_\n$(\"a[target!='blank']\") | 所有target属性不是_blank的a元素_\n$(\":button\") | 选取所有 type='button' 的 \\<input> 元素 和 \\<button> 元素\n$(\"tr:even\") | 偶数行\n$(\"tr:odd\") | 奇数行\n\n对于多个页面需要jquery代码文件，需要把你写的jquery代码放到单独文件：\n```js\n<head>\n<script src=\"http://cdn.static.runoob.com/libs/jquery/1.10.2/jquery.min.js\">\n<\\/script>\n<script src=\"my_jquery_functions.js\"> <\\/script>\n<\\/head>\n```\n\n## jquery 事件\n\n鼠标事件    | 键盘事件   | 表单事件    |文档/窗口事件\n---|---|---|---\nclick      | keypress  |  submit    |load\ndblclick   | keydown   |change      |resize\nmouseenter  | keyup   |focus   |scroll\nmouseleave  |blur    |unload   |\n\n每个事件都如此：\n```js\n$(\"p\").dblclick(function(){   //选择器+事件+函数部分\n  $(this).hide();\n});\n```\n","source":"_posts/web/jquery1.md","raw":"---\nlayout: post\ntitle: jquery学习笔记1(基础)\ndate: 2016-9-23 11:12:00\ncategory: web\n\n---\n\n## 1.安装\njquery就是一个js文件,国内CDN下载 引入：\n```js\n<head>\n<script src=\"jquery-1.10.2.min.js\"></script>\n</head>\n```\n\n## 2.jquery语法\n基础语法：\n$(selector).action()\n$:定义jquery\nselector：查询的html元素\naction：对元素执行的函数\n实例：\n```js\n$(this).hide()  //隐藏当前元素\n$(\"p\").hide() //隐藏p元素\n$(\"p.test\").hide() //隐藏class属性是test的<p>元素\n$(\"#test\").hide() //隐藏所有id为test的元素\n\n```\n\n 文档必须就绪完成才能执行jquery代码，否则操作不存在的元素，就会报错。\n ```js\n $(document).ready(function(){\n\n   // 开始写 jQuery 代码...\n\n});\n ```\n\n## jquery选择器\njQuery 选择器允许您对 HTML 元素组或单个元素进行操作。\njQuery 选择器基于元素的 id、类、类型、属性、属性值等\"查找\"（或选择）HTML 元素。 它基于已经存在的 CSS 选择器，除此之外，它还有一些自定义的选择器。\njQuery 中所有选择器都以美元符号开头：$()。\n\n元素选择器 ：依据元素名\n```js\n$(document).ready(function(){\n  $(\"button\").click(function(){\n    $(\"p\").hide();\n  });\n});\n```\nid选择器 依据元素id\n```js\n$(document).ready(function(){\n  $(\"button\").click(function(){\n    $(\"#test\").hide();\n  });\n});\n```\nclass选择器 依据class属性\n```js\n$(document).ready(function(){\n  $(\"button\").click(function(){\n    $(\".test\").hide();\n  });\n});\n```\n\n更多实例：\n\n语法|描述\n---|---\n$(\"*\") |选取所有元素\n$(this)|选取当前html元素\n$(\"p.intro\")|选取class是intro的p元素\n$(\"p:first\")|选取第一个p元素\n$(\"ul li:first\")|选取第一个ul元素的第一个li元素\n$(\"ul li:first-child\")|选取每个ul的第一个li\n$(\"[href]\")|选取带有href属性的元素\n$(\"a[target='blank']\") |所有target属性是_blank的a元素_\n$(\"a[target!='blank']\") | 所有target属性不是_blank的a元素_\n$(\":button\") | 选取所有 type='button' 的 \\<input> 元素 和 \\<button> 元素\n$(\"tr:even\") | 偶数行\n$(\"tr:odd\") | 奇数行\n\n对于多个页面需要jquery代码文件，需要把你写的jquery代码放到单独文件：\n```js\n<head>\n<script src=\"http://cdn.static.runoob.com/libs/jquery/1.10.2/jquery.min.js\">\n<\\/script>\n<script src=\"my_jquery_functions.js\"> <\\/script>\n<\\/head>\n```\n\n## jquery 事件\n\n鼠标事件    | 键盘事件   | 表单事件    |文档/窗口事件\n---|---|---|---\nclick      | keypress  |  submit    |load\ndblclick   | keydown   |change      |resize\nmouseenter  | keyup   |focus   |scroll\nmouseleave  |blur    |unload   |\n\n每个事件都如此：\n```js\n$(\"p\").dblclick(function(){   //选择器+事件+函数部分\n  $(this).hide();\n});\n```\n","slug":"web/jquery1","published":1,"updated":"2019-01-26T05:01:11.606Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8rm001bkwli7uanizvf","content":"<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><p>jquery就是一个js文件,国内CDN下载 引入：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"jquery-1.10.2.min.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/head&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-jquery语法\"><a href=\"#2-jquery语法\" class=\"headerlink\" title=\"2.jquery语法\"></a>2.jquery语法</h2><p>基础语法：<br>$(selector).action()<br>$:定义jquery<br>selector：查询的html元素<br>action：对元素执行的函数<br>实例：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"keyword\">this</span>).hide()  <span class=\"comment\">//隐藏当前元素</span></span><br><span class=\"line\">$(<span class=\"string\">\"p\"</span>).hide() <span class=\"comment\">//隐藏p元素</span></span><br><span class=\"line\">$(<span class=\"string\">\"p.test\"</span>).hide() <span class=\"comment\">//隐藏class属性是test的&lt;p&gt;元素</span></span><br><span class=\"line\">$(<span class=\"string\">\"#test\"</span>).hide() <span class=\"comment\">//隐藏所有id为test的元素</span></span><br></pre></td></tr></table></figure></p>\n<p> 文档必须就绪完成才能执行jquery代码，否则操作不存在的元素，就会报错。<br> <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> $(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 开始写 jQuery 代码...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"jquery选择器\"><a href=\"#jquery选择器\" class=\"headerlink\" title=\"jquery选择器\"></a>jquery选择器</h2><p>jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。<br>jQuery 选择器基于元素的 id、类、类型、属性、属性值等”查找”（或选择）HTML 元素。 它基于已经存在的 CSS 选择器，除此之外，它还有一些自定义的选择器。<br>jQuery 中所有选择器都以美元符号开头：$()。</p>\n<p>元素选择器 ：依据元素名<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"p\"</span>).hide();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>id选择器 依据元素id<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"#test\"</span>).hide();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>class选择器 依据class属性<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\".test\"</span>).hide();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>更多实例：</p>\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$(“*”)</td>\n<td>选取所有元素</td>\n</tr>\n<tr>\n<td>$(this)</td>\n<td>选取当前html元素</td>\n</tr>\n<tr>\n<td>$(“p.intro”)</td>\n<td>选取class是intro的p元素</td>\n</tr>\n<tr>\n<td>$(“p:first”)</td>\n<td>选取第一个p元素</td>\n</tr>\n<tr>\n<td>$(“ul li:first”)</td>\n<td>选取第一个ul元素的第一个li元素</td>\n</tr>\n<tr>\n<td>$(“ul li:first-child”)</td>\n<td>选取每个ul的第一个li</td>\n</tr>\n<tr>\n<td>$(“[href]”)</td>\n<td>选取带有href属性的元素</td>\n</tr>\n<tr>\n<td>$(“a[target=’blank’]”)</td>\n<td>所有target属性是<em>blank的a元素</em></td>\n</tr>\n<tr>\n<td>$(“a[target!=’blank’]”)</td>\n<td>所有target属性不是<em>blank的a元素</em></td>\n</tr>\n<tr>\n<td>$(“:button”)</td>\n<td>选取所有 type=’button’ 的 \\<input> 元素 和 \\<button> 元素</button></td>\n</tr>\n<tr>\n<td>$(“tr:even”)</td>\n<td>偶数行</td>\n</tr>\n<tr>\n<td>$(“tr:odd”)</td>\n<td>奇数行</td>\n</tr>\n</tbody>\n</table>\n<p>对于多个页面需要jquery代码文件，需要把你写的jquery代码放到单独文件：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"http://cdn.static.runoob.com/libs/jquery/1.10.2/jquery.min.js\"</span>&gt;</span><br><span class=\"line\">&lt;\\/script&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"my_jquery_functions.js\"</span>&gt; <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">\\</span>/<span class=\"attr\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;\\/head&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"jquery-事件\"><a href=\"#jquery-事件\" class=\"headerlink\" title=\"jquery 事件\"></a>jquery 事件</h2><table>\n<thead>\n<tr>\n<th>鼠标事件</th>\n<th>键盘事件</th>\n<th>表单事件</th>\n<th>文档/窗口事件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>click</td>\n<td>keypress</td>\n<td>submit</td>\n<td>load</td>\n</tr>\n<tr>\n<td>dblclick</td>\n<td>keydown</td>\n<td>change</td>\n<td>resize</td>\n</tr>\n<tr>\n<td>mouseenter</td>\n<td>keyup</td>\n<td>focus</td>\n<td>scroll</td>\n</tr>\n<tr>\n<td>mouseleave</td>\n<td>blur</td>\n<td>unload</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>每个事件都如此：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"p\"</span>).dblclick(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;   <span class=\"comment\">//选择器+事件+函数部分</span></span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).hide();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><p>jquery就是一个js文件,国内CDN下载 引入：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"jquery-1.10.2.min.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/head&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-jquery语法\"><a href=\"#2-jquery语法\" class=\"headerlink\" title=\"2.jquery语法\"></a>2.jquery语法</h2><p>基础语法：<br>$(selector).action()<br>$:定义jquery<br>selector：查询的html元素<br>action：对元素执行的函数<br>实例：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"keyword\">this</span>).hide()  <span class=\"comment\">//隐藏当前元素</span></span><br><span class=\"line\">$(<span class=\"string\">\"p\"</span>).hide() <span class=\"comment\">//隐藏p元素</span></span><br><span class=\"line\">$(<span class=\"string\">\"p.test\"</span>).hide() <span class=\"comment\">//隐藏class属性是test的&lt;p&gt;元素</span></span><br><span class=\"line\">$(<span class=\"string\">\"#test\"</span>).hide() <span class=\"comment\">//隐藏所有id为test的元素</span></span><br></pre></td></tr></table></figure></p>\n<p> 文档必须就绪完成才能执行jquery代码，否则操作不存在的元素，就会报错。<br> <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> $(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 开始写 jQuery 代码...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"jquery选择器\"><a href=\"#jquery选择器\" class=\"headerlink\" title=\"jquery选择器\"></a>jquery选择器</h2><p>jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。<br>jQuery 选择器基于元素的 id、类、类型、属性、属性值等”查找”（或选择）HTML 元素。 它基于已经存在的 CSS 选择器，除此之外，它还有一些自定义的选择器。<br>jQuery 中所有选择器都以美元符号开头：$()。</p>\n<p>元素选择器 ：依据元素名<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"p\"</span>).hide();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>id选择器 依据元素id<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"#test\"</span>).hide();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>class选择器 依据class属性<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\".test\"</span>).hide();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>更多实例：</p>\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$(“*”)</td>\n<td>选取所有元素</td>\n</tr>\n<tr>\n<td>$(this)</td>\n<td>选取当前html元素</td>\n</tr>\n<tr>\n<td>$(“p.intro”)</td>\n<td>选取class是intro的p元素</td>\n</tr>\n<tr>\n<td>$(“p:first”)</td>\n<td>选取第一个p元素</td>\n</tr>\n<tr>\n<td>$(“ul li:first”)</td>\n<td>选取第一个ul元素的第一个li元素</td>\n</tr>\n<tr>\n<td>$(“ul li:first-child”)</td>\n<td>选取每个ul的第一个li</td>\n</tr>\n<tr>\n<td>$(“[href]”)</td>\n<td>选取带有href属性的元素</td>\n</tr>\n<tr>\n<td>$(“a[target=’blank’]”)</td>\n<td>所有target属性是<em>blank的a元素</em></td>\n</tr>\n<tr>\n<td>$(“a[target!=’blank’]”)</td>\n<td>所有target属性不是<em>blank的a元素</em></td>\n</tr>\n<tr>\n<td>$(“:button”)</td>\n<td>选取所有 type=’button’ 的 \\<input> 元素 和 \\<button> 元素</button></td>\n</tr>\n<tr>\n<td>$(“tr:even”)</td>\n<td>偶数行</td>\n</tr>\n<tr>\n<td>$(“tr:odd”)</td>\n<td>奇数行</td>\n</tr>\n</tbody>\n</table>\n<p>对于多个页面需要jquery代码文件，需要把你写的jquery代码放到单独文件：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"http://cdn.static.runoob.com/libs/jquery/1.10.2/jquery.min.js\"</span>&gt;</span><br><span class=\"line\">&lt;\\/script&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"my_jquery_functions.js\"</span>&gt; <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">\\</span>/<span class=\"attr\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;\\/head&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"jquery-事件\"><a href=\"#jquery-事件\" class=\"headerlink\" title=\"jquery 事件\"></a>jquery 事件</h2><table>\n<thead>\n<tr>\n<th>鼠标事件</th>\n<th>键盘事件</th>\n<th>表单事件</th>\n<th>文档/窗口事件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>click</td>\n<td>keypress</td>\n<td>submit</td>\n<td>load</td>\n</tr>\n<tr>\n<td>dblclick</td>\n<td>keydown</td>\n<td>change</td>\n<td>resize</td>\n</tr>\n<tr>\n<td>mouseenter</td>\n<td>keyup</td>\n<td>focus</td>\n<td>scroll</td>\n</tr>\n<tr>\n<td>mouseleave</td>\n<td>blur</td>\n<td>unload</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>每个事件都如此：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"p\"</span>).dblclick(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;   <span class=\"comment\">//选择器+事件+函数部分</span></span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).hide();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n"},{"layout":"post","title":"jquery学习笔记2(效果)","date":"2016-10-23T03:12:00.000Z","_content":"\n##jquery隐藏和显示\nhide/show函数: $(\"p\").show(); 或者$(\"p\").hide();\ntoggle()函数 切换隐藏和显示。\n\n##jquery淡入淡出\nfadeIn(speed,callback) 渐渐显示(淡入)\nfadeOut(...) 渐渐显示(淡出)\nfadeToggle()切换 淡入淡出\nfadeTo(速度，透明度，callback) 调整透明度0-1之间值\n\n##jquery滑动效果\n像投影屏幕收起或下拉一样的效果\nslideDown()    滑下面板\nslideUp()      收起面板\nslideToggle()  切换Down/up\n\n\n##jquery 动画操作\n$(selector).animate({params},speed,callback);\n\n例如：\n```js\n$(\"button\").click(function(){\n  $(\"div\").animate({left:'250px'});\n});\n或者 多个属性操作\n$(\"button\").click(function(){\n  $(\"div\").animate({\n    left:'250px',\n    opacity:'0.5',\n    height:'150px',\n    width:'150px'\n  });\n});\n```\n\n##jquery停止动画\n\nstop函数,或者带参数$(selector).stop(stopAll,goToEnd);\nstopall参数默认false，表示只停止当前动画，队列中其他的动画继续执行\ngoToEnd参数默认false表示，不立即完成当前动画，多个动画时，多次点击能依次停止各个动画\n\n##jquery callback函数\n\n许多jquery动画函数会有speed参数或者duration(持续) slow/fast/normal\n然后第二个参数写一个回调函数，动画完成后会执行。\n\n##jquery的Chaining(链式)操作\n可以接连在一个元素上执行多个函数操作，这样就不用寻找同一个元素多次。俗称：链式操作\n例如：\n```js\n$(\"##p1\").css(\"color\",\"red\").slideUp(2000).slideDown(2000);\n//p元素变红色，然后上滑，再下滑\n```\n","source":"_posts/web/jquery2.md","raw":"---\nlayout: post\ntitle: jquery学习笔记2(效果)\ndate: 2016-10-23 11:12:00\ncategory: web\n\n---\n\n##jquery隐藏和显示\nhide/show函数: $(\"p\").show(); 或者$(\"p\").hide();\ntoggle()函数 切换隐藏和显示。\n\n##jquery淡入淡出\nfadeIn(speed,callback) 渐渐显示(淡入)\nfadeOut(...) 渐渐显示(淡出)\nfadeToggle()切换 淡入淡出\nfadeTo(速度，透明度，callback) 调整透明度0-1之间值\n\n##jquery滑动效果\n像投影屏幕收起或下拉一样的效果\nslideDown()    滑下面板\nslideUp()      收起面板\nslideToggle()  切换Down/up\n\n\n##jquery 动画操作\n$(selector).animate({params},speed,callback);\n\n例如：\n```js\n$(\"button\").click(function(){\n  $(\"div\").animate({left:'250px'});\n});\n或者 多个属性操作\n$(\"button\").click(function(){\n  $(\"div\").animate({\n    left:'250px',\n    opacity:'0.5',\n    height:'150px',\n    width:'150px'\n  });\n});\n```\n\n##jquery停止动画\n\nstop函数,或者带参数$(selector).stop(stopAll,goToEnd);\nstopall参数默认false，表示只停止当前动画，队列中其他的动画继续执行\ngoToEnd参数默认false表示，不立即完成当前动画，多个动画时，多次点击能依次停止各个动画\n\n##jquery callback函数\n\n许多jquery动画函数会有speed参数或者duration(持续) slow/fast/normal\n然后第二个参数写一个回调函数，动画完成后会执行。\n\n##jquery的Chaining(链式)操作\n可以接连在一个元素上执行多个函数操作，这样就不用寻找同一个元素多次。俗称：链式操作\n例如：\n```js\n$(\"##p1\").css(\"color\",\"red\").slideUp(2000).slideDown(2000);\n//p元素变红色，然后上滑，再下滑\n```\n","slug":"web/jquery2","published":1,"updated":"2019-01-26T05:01:23.044Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8ro001dkwlitguyq6ua","content":"<p>##jquery隐藏和显示<br>hide/show函数: $(“p”).show(); 或者$(“p”).hide();<br>toggle()函数 切换隐藏和显示。</p>\n<p>##jquery淡入淡出<br>fadeIn(speed,callback) 渐渐显示(淡入)<br>fadeOut(…) 渐渐显示(淡出)<br>fadeToggle()切换 淡入淡出<br>fadeTo(速度，透明度，callback) 调整透明度0-1之间值</p>\n<p>##jquery滑动效果<br>像投影屏幕收起或下拉一样的效果<br>slideDown()    滑下面板<br>slideUp()      收起面板<br>slideToggle()  切换Down/up</p>\n<p>##jquery 动画操作<br>$(selector).animate({params},speed,callback);</p>\n<p>例如：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"div\"</span>).animate(&#123;<span class=\"attr\">left</span>:<span class=\"string\">'250px'</span>&#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">或者 多个属性操作</span><br><span class=\"line\">$(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"div\"</span>).animate(&#123;</span><br><span class=\"line\">    left:<span class=\"string\">'250px'</span>,</span><br><span class=\"line\">    opacity:<span class=\"string\">'0.5'</span>,</span><br><span class=\"line\">    height:<span class=\"string\">'150px'</span>,</span><br><span class=\"line\">    width:<span class=\"string\">'150px'</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>##jquery停止动画</p>\n<p>stop函数,或者带参数$(selector).stop(stopAll,goToEnd);<br>stopall参数默认false，表示只停止当前动画，队列中其他的动画继续执行<br>goToEnd参数默认false表示，不立即完成当前动画，多个动画时，多次点击能依次停止各个动画</p>\n<p>##jquery callback函数</p>\n<p>许多jquery动画函数会有speed参数或者duration(持续) slow/fast/normal<br>然后第二个参数写一个回调函数，动画完成后会执行。</p>\n<p>##jquery的Chaining(链式)操作<br>可以接连在一个元素上执行多个函数操作，这样就不用寻找同一个元素多次。俗称：链式操作<br>例如：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"##p1\"</span>).css(<span class=\"string\">\"color\"</span>,<span class=\"string\">\"red\"</span>).slideUp(<span class=\"number\">2000</span>).slideDown(<span class=\"number\">2000</span>);</span><br><span class=\"line\"><span class=\"comment\">//p元素变红色，然后上滑，再下滑</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>##jquery隐藏和显示<br>hide/show函数: $(“p”).show(); 或者$(“p”).hide();<br>toggle()函数 切换隐藏和显示。</p>\n<p>##jquery淡入淡出<br>fadeIn(speed,callback) 渐渐显示(淡入)<br>fadeOut(…) 渐渐显示(淡出)<br>fadeToggle()切换 淡入淡出<br>fadeTo(速度，透明度，callback) 调整透明度0-1之间值</p>\n<p>##jquery滑动效果<br>像投影屏幕收起或下拉一样的效果<br>slideDown()    滑下面板<br>slideUp()      收起面板<br>slideToggle()  切换Down/up</p>\n<p>##jquery 动画操作<br>$(selector).animate({params},speed,callback);</p>\n<p>例如：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"div\"</span>).animate(&#123;<span class=\"attr\">left</span>:<span class=\"string\">'250px'</span>&#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">或者 多个属性操作</span><br><span class=\"line\">$(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"div\"</span>).animate(&#123;</span><br><span class=\"line\">    left:<span class=\"string\">'250px'</span>,</span><br><span class=\"line\">    opacity:<span class=\"string\">'0.5'</span>,</span><br><span class=\"line\">    height:<span class=\"string\">'150px'</span>,</span><br><span class=\"line\">    width:<span class=\"string\">'150px'</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>##jquery停止动画</p>\n<p>stop函数,或者带参数$(selector).stop(stopAll,goToEnd);<br>stopall参数默认false，表示只停止当前动画，队列中其他的动画继续执行<br>goToEnd参数默认false表示，不立即完成当前动画，多个动画时，多次点击能依次停止各个动画</p>\n<p>##jquery callback函数</p>\n<p>许多jquery动画函数会有speed参数或者duration(持续) slow/fast/normal<br>然后第二个参数写一个回调函数，动画完成后会执行。</p>\n<p>##jquery的Chaining(链式)操作<br>可以接连在一个元素上执行多个函数操作，这样就不用寻找同一个元素多次。俗称：链式操作<br>例如：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"##p1\"</span>).css(<span class=\"string\">\"color\"</span>,<span class=\"string\">\"red\"</span>).slideUp(<span class=\"number\">2000</span>).slideDown(<span class=\"number\">2000</span>);</span><br><span class=\"line\"><span class=\"comment\">//p元素变红色，然后上滑，再下滑</span></span><br></pre></td></tr></table></figure></p>\n"},{"layout":"post","title":"非对称加密(公钥加密)","date":"2016-07-21T06:35:58.000Z","comments":1,"_content":"\n\n<h1><center>公钥加密的工作原理</center></h1>\n## 对称加密：\n\n```c\n* 加密密钥和解密密钥是一样的。\n```\n<br>\n\n## 非对称加密：\n\n```c\n*\t(也叫公钥加密)\n* 两个密钥在加密和解密中配合使用，密钥对具有特殊的互补关系，密钥对在数学上存在特殊关系。\n```\n<br>\n\n## 邮件的电子签名过程：\n\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.35451fb8-5e11-4d67-ba6e-e5d4da6febca%28zh-cn,TechNet.10%29.gif)\n\n```c\n* 捕获邮件正文-->计算邮件哈希值-->检索发件人私钥-->用发件人私钥加密哈希值-->附加到邮件底部(明文签名)/与原始邮件组合成二进制附件(不透明签名)-->发送mail\n* --私钥只有发件人才唯一拥有，公钥仅仅与一个私钥关联，所以可以用公钥唯一识别一个私钥。\n```\n<br>\n\n### 验证邮件签名的过程：\n\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.d1b14a27-5cfb-4df2-89f7-990219378716%28zh-cn,TechNet.10%29.gif)\n```c\n* 接收邮件-->检索加密的哈希值-->检索邮件正文-->用正文计算邮件哈希值-->检索发件人的公钥-->用发件人公钥解密签名(加密的哈希值)-->和计算的哈希值对比-->验证签名邮件\n* --文件内容不变，计算的哈希值就不会变。\n* --私钥加密的东西，需要对应的公钥解密。\n* --如果哈希值一致，说明公钥对应的私钥是对的，私钥只有发件人知道，所以确定发件人属实。\n\n```\n\n<br>\n\n## 邮件内容的加密\n\n\n```c\n* 对称密钥加密的话，需要\"密钥协商\"，必须协商出一个双方都知道的密钥。\n* 非对称密钥加密的话，没有协商过程，因为一个公钥，可以很多人拥有，私钥是只有一个人有。\n* 由于非对称(公钥加密)密钥加密使用密钥对，加密和解密是一个昂贵的计算过程，速度慢。所以这么做呗......\n```\n<br>\n\n### send加密mail内容\n\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.21058391-2d70-42f9-bf25-8ead79705b27%28zh-cn,TechNet.10%29.gif)\n```c\n* -- 1.找到邮件正文-->2.检索收件人公钥-->3.生成一次性的会话密钥(这个是对称密钥)-->4.用会话密钥加密正文-->5.用收件人公钥加密会话密钥，并附到邮件-->6.发送邮件\n```\n<br>\n\n### recv解密mail内容\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.50f0afca-e520-46b5-8e12-6e295dfe86d9%28zh-cn,TechNet.10%29.gif)\n```c\n* -- 1.接收邮件-->2.检索加密邮件正文和会话密钥->3.检索收件人私钥解密会话密钥->4.用解密的会话密钥解密正文->5.解密邮件返回给收件人\n\n```\n<br>\n\n### 同时使用签名和邮件内容加密\n\n![tu](http://technet.microsoft.com/zh-cn/library/Aa998077.e81cca9b-c780-49d9-a3f9-69cc3c442183%28zh-cn,TechNet.10%29.gif)\n\n<br>\n\n### 同时使用签名和邮件内容加密后的解密\n\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.97705e57-0a94-4197-99c3-40bb58a9eaa0%28zh-cn,TechNet.10%29.gif)\n<br>\n\n### 功能和所需的密钥表\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.ef4e76b6-4799-45a9-90f8-ec7af508152a%28zh-cn,TechNet.10%29.gif)\n","source":"_posts/windows/public_key_encryption.md","raw":"---\nlayout: post\ntitle: 非对称加密(公钥加密)\ncategory: windows\ntags: encrypt\ndate: 2016-07-21 14:35:58\ncomments: true\n\n---\n\n\n<h1><center>公钥加密的工作原理</center></h1>\n## 对称加密：\n\n```c\n* 加密密钥和解密密钥是一样的。\n```\n<br>\n\n## 非对称加密：\n\n```c\n*\t(也叫公钥加密)\n* 两个密钥在加密和解密中配合使用，密钥对具有特殊的互补关系，密钥对在数学上存在特殊关系。\n```\n<br>\n\n## 邮件的电子签名过程：\n\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.35451fb8-5e11-4d67-ba6e-e5d4da6febca%28zh-cn,TechNet.10%29.gif)\n\n```c\n* 捕获邮件正文-->计算邮件哈希值-->检索发件人私钥-->用发件人私钥加密哈希值-->附加到邮件底部(明文签名)/与原始邮件组合成二进制附件(不透明签名)-->发送mail\n* --私钥只有发件人才唯一拥有，公钥仅仅与一个私钥关联，所以可以用公钥唯一识别一个私钥。\n```\n<br>\n\n### 验证邮件签名的过程：\n\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.d1b14a27-5cfb-4df2-89f7-990219378716%28zh-cn,TechNet.10%29.gif)\n```c\n* 接收邮件-->检索加密的哈希值-->检索邮件正文-->用正文计算邮件哈希值-->检索发件人的公钥-->用发件人公钥解密签名(加密的哈希值)-->和计算的哈希值对比-->验证签名邮件\n* --文件内容不变，计算的哈希值就不会变。\n* --私钥加密的东西，需要对应的公钥解密。\n* --如果哈希值一致，说明公钥对应的私钥是对的，私钥只有发件人知道，所以确定发件人属实。\n\n```\n\n<br>\n\n## 邮件内容的加密\n\n\n```c\n* 对称密钥加密的话，需要\"密钥协商\"，必须协商出一个双方都知道的密钥。\n* 非对称密钥加密的话，没有协商过程，因为一个公钥，可以很多人拥有，私钥是只有一个人有。\n* 由于非对称(公钥加密)密钥加密使用密钥对，加密和解密是一个昂贵的计算过程，速度慢。所以这么做呗......\n```\n<br>\n\n### send加密mail内容\n\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.21058391-2d70-42f9-bf25-8ead79705b27%28zh-cn,TechNet.10%29.gif)\n```c\n* -- 1.找到邮件正文-->2.检索收件人公钥-->3.生成一次性的会话密钥(这个是对称密钥)-->4.用会话密钥加密正文-->5.用收件人公钥加密会话密钥，并附到邮件-->6.发送邮件\n```\n<br>\n\n### recv解密mail内容\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.50f0afca-e520-46b5-8e12-6e295dfe86d9%28zh-cn,TechNet.10%29.gif)\n```c\n* -- 1.接收邮件-->2.检索加密邮件正文和会话密钥->3.检索收件人私钥解密会话密钥->4.用解密的会话密钥解密正文->5.解密邮件返回给收件人\n\n```\n<br>\n\n### 同时使用签名和邮件内容加密\n\n![tu](http://technet.microsoft.com/zh-cn/library/Aa998077.e81cca9b-c780-49d9-a3f9-69cc3c442183%28zh-cn,TechNet.10%29.gif)\n\n<br>\n\n### 同时使用签名和邮件内容加密后的解密\n\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.97705e57-0a94-4197-99c3-40bb58a9eaa0%28zh-cn,TechNet.10%29.gif)\n<br>\n\n### 功能和所需的密钥表\n\n![](http://technet.microsoft.com/zh-cn/library/Aa998077.ef4e76b6-4799-45a9-90f8-ec7af508152a%28zh-cn,TechNet.10%29.gif)\n","slug":"windows/public_key_encryption","published":1,"updated":"2019-01-26T05:02:17.346Z","photos":[],"link":"","_id":"cjrd0e8rq001ikwlidvy0uf8w","content":"<p></p><h1><center>公钥加密的工作原理</center></h1><p></p>\n<h2 id=\"对称加密：\"><a href=\"#对称加密：\" class=\"headerlink\" title=\"对称加密：\"></a>对称加密：</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 加密密钥和解密密钥是一样的。</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h2 id=\"非对称加密：\"><a href=\"#非对称加密：\" class=\"headerlink\" title=\"非对称加密：\"></a>非对称加密：</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*\t(也叫公钥加密)</span><br><span class=\"line\">* 两个密钥在加密和解密中配合使用，密钥对具有特殊的互补关系，密钥对在数学上存在特殊关系。</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h2 id=\"邮件的电子签名过程：\"><a href=\"#邮件的电子签名过程：\" class=\"headerlink\" title=\"邮件的电子签名过程：\"></a>邮件的电子签名过程：</h2><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.35451fb8-5e11-4d67-ba6e-e5d4da6febca%28zh-cn,TechNet.10%29.gif\" alt=\"\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 捕获邮件正文--&gt;计算邮件哈希值--&gt;检索发件人私钥--&gt;用发件人私钥加密哈希值--&gt;附加到邮件底部(明文签名)/与原始邮件组合成二进制附件(不透明签名)--&gt;发送mail</span><br><span class=\"line\">* --私钥只有发件人才唯一拥有，公钥仅仅与一个私钥关联，所以可以用公钥唯一识别一个私钥。</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"验证邮件签名的过程：\"><a href=\"#验证邮件签名的过程：\" class=\"headerlink\" title=\"验证邮件签名的过程：\"></a>验证邮件签名的过程：</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.d1b14a27-5cfb-4df2-89f7-990219378716%28zh-cn,TechNet.10%29.gif\" alt=\"\"><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 接收邮件--&gt;检索加密的哈希值--&gt;检索邮件正文--&gt;用正文计算邮件哈希值--&gt;检索发件人的公钥--&gt;用发件人公钥解密签名(加密的哈希值)--&gt;和计算的哈希值对比--&gt;验证签名邮件</span><br><span class=\"line\">* --文件内容不变，计算的哈希值就不会变。</span><br><span class=\"line\">* --私钥加密的东西，需要对应的公钥解密。</span><br><span class=\"line\">* --如果哈希值一致，说明公钥对应的私钥是对的，私钥只有发件人知道，所以确定发件人属实。</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h2 id=\"邮件内容的加密\"><a href=\"#邮件内容的加密\" class=\"headerlink\" title=\"邮件内容的加密\"></a>邮件内容的加密</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 对称密钥加密的话，需要<span class=\"string\">\"密钥协商\"</span>，必须协商出一个双方都知道的密钥。</span><br><span class=\"line\">* 非对称密钥加密的话，没有协商过程，因为一个公钥，可以很多人拥有，私钥是只有一个人有。</span><br><span class=\"line\">* 由于非对称(公钥加密)密钥加密使用密钥对，加密和解密是一个昂贵的计算过程，速度慢。所以这么做呗......</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"send加密mail内容\"><a href=\"#send加密mail内容\" class=\"headerlink\" title=\"send加密mail内容\"></a>send加密mail内容</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.21058391-2d70-42f9-bf25-8ead79705b27%28zh-cn,TechNet.10%29.gif\" alt=\"\"><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* -- <span class=\"number\">1.</span>找到邮件正文--&gt;<span class=\"number\">2.</span>检索收件人公钥--&gt;<span class=\"number\">3.</span>生成一次性的会话密钥(这个是对称密钥)--&gt;<span class=\"number\">4.</span>用会话密钥加密正文--&gt;<span class=\"number\">5.</span>用收件人公钥加密会话密钥，并附到邮件--&gt;<span class=\"number\">6.</span>发送邮件</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"recv解密mail内容\"><a href=\"#recv解密mail内容\" class=\"headerlink\" title=\"recv解密mail内容\"></a>recv解密mail内容</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.50f0afca-e520-46b5-8e12-6e295dfe86d9%28zh-cn,TechNet.10%29.gif\" alt=\"\"><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* -- <span class=\"number\">1.</span>接收邮件--&gt;<span class=\"number\">2.</span>检索加密邮件正文和会话密钥-&gt;<span class=\"number\">3.</span>检索收件人私钥解密会话密钥-&gt;<span class=\"number\">4.</span>用解密的会话密钥解密正文-&gt;<span class=\"number\">5.</span>解密邮件返回给收件人</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"同时使用签名和邮件内容加密\"><a href=\"#同时使用签名和邮件内容加密\" class=\"headerlink\" title=\"同时使用签名和邮件内容加密\"></a>同时使用签名和邮件内容加密</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.e81cca9b-c780-49d9-a3f9-69cc3c442183%28zh-cn,TechNet.10%29.gif\" alt=\"tu\"></p>\n<p><br></p>\n<h3 id=\"同时使用签名和邮件内容加密后的解密\"><a href=\"#同时使用签名和邮件内容加密后的解密\" class=\"headerlink\" title=\"同时使用签名和邮件内容加密后的解密\"></a>同时使用签名和邮件内容加密后的解密</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.97705e57-0a94-4197-99c3-40bb58a9eaa0%28zh-cn,TechNet.10%29.gif\" alt=\"\"><br><br></p>\n<h3 id=\"功能和所需的密钥表\"><a href=\"#功能和所需的密钥表\" class=\"headerlink\" title=\"功能和所需的密钥表\"></a>功能和所需的密钥表</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.ef4e76b6-4799-45a9-90f8-ec7af508152a%28zh-cn,TechNet.10%29.gif\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p></p><h1><center>公钥加密的工作原理</center></h1><p></p>\n<h2 id=\"对称加密：\"><a href=\"#对称加密：\" class=\"headerlink\" title=\"对称加密：\"></a>对称加密：</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 加密密钥和解密密钥是一样的。</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h2 id=\"非对称加密：\"><a href=\"#非对称加密：\" class=\"headerlink\" title=\"非对称加密：\"></a>非对称加密：</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*\t(也叫公钥加密)</span><br><span class=\"line\">* 两个密钥在加密和解密中配合使用，密钥对具有特殊的互补关系，密钥对在数学上存在特殊关系。</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h2 id=\"邮件的电子签名过程：\"><a href=\"#邮件的电子签名过程：\" class=\"headerlink\" title=\"邮件的电子签名过程：\"></a>邮件的电子签名过程：</h2><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.35451fb8-5e11-4d67-ba6e-e5d4da6febca%28zh-cn,TechNet.10%29.gif\" alt=\"\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 捕获邮件正文--&gt;计算邮件哈希值--&gt;检索发件人私钥--&gt;用发件人私钥加密哈希值--&gt;附加到邮件底部(明文签名)/与原始邮件组合成二进制附件(不透明签名)--&gt;发送mail</span><br><span class=\"line\">* --私钥只有发件人才唯一拥有，公钥仅仅与一个私钥关联，所以可以用公钥唯一识别一个私钥。</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"验证邮件签名的过程：\"><a href=\"#验证邮件签名的过程：\" class=\"headerlink\" title=\"验证邮件签名的过程：\"></a>验证邮件签名的过程：</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.d1b14a27-5cfb-4df2-89f7-990219378716%28zh-cn,TechNet.10%29.gif\" alt=\"\"><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 接收邮件--&gt;检索加密的哈希值--&gt;检索邮件正文--&gt;用正文计算邮件哈希值--&gt;检索发件人的公钥--&gt;用发件人公钥解密签名(加密的哈希值)--&gt;和计算的哈希值对比--&gt;验证签名邮件</span><br><span class=\"line\">* --文件内容不变，计算的哈希值就不会变。</span><br><span class=\"line\">* --私钥加密的东西，需要对应的公钥解密。</span><br><span class=\"line\">* --如果哈希值一致，说明公钥对应的私钥是对的，私钥只有发件人知道，所以确定发件人属实。</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h2 id=\"邮件内容的加密\"><a href=\"#邮件内容的加密\" class=\"headerlink\" title=\"邮件内容的加密\"></a>邮件内容的加密</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 对称密钥加密的话，需要<span class=\"string\">\"密钥协商\"</span>，必须协商出一个双方都知道的密钥。</span><br><span class=\"line\">* 非对称密钥加密的话，没有协商过程，因为一个公钥，可以很多人拥有，私钥是只有一个人有。</span><br><span class=\"line\">* 由于非对称(公钥加密)密钥加密使用密钥对，加密和解密是一个昂贵的计算过程，速度慢。所以这么做呗......</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"send加密mail内容\"><a href=\"#send加密mail内容\" class=\"headerlink\" title=\"send加密mail内容\"></a>send加密mail内容</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.21058391-2d70-42f9-bf25-8ead79705b27%28zh-cn,TechNet.10%29.gif\" alt=\"\"><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* -- <span class=\"number\">1.</span>找到邮件正文--&gt;<span class=\"number\">2.</span>检索收件人公钥--&gt;<span class=\"number\">3.</span>生成一次性的会话密钥(这个是对称密钥)--&gt;<span class=\"number\">4.</span>用会话密钥加密正文--&gt;<span class=\"number\">5.</span>用收件人公钥加密会话密钥，并附到邮件--&gt;<span class=\"number\">6.</span>发送邮件</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"recv解密mail内容\"><a href=\"#recv解密mail内容\" class=\"headerlink\" title=\"recv解密mail内容\"></a>recv解密mail内容</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.50f0afca-e520-46b5-8e12-6e295dfe86d9%28zh-cn,TechNet.10%29.gif\" alt=\"\"><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* -- <span class=\"number\">1.</span>接收邮件--&gt;<span class=\"number\">2.</span>检索加密邮件正文和会话密钥-&gt;<span class=\"number\">3.</span>检索收件人私钥解密会话密钥-&gt;<span class=\"number\">4.</span>用解密的会话密钥解密正文-&gt;<span class=\"number\">5.</span>解密邮件返回给收件人</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"同时使用签名和邮件内容加密\"><a href=\"#同时使用签名和邮件内容加密\" class=\"headerlink\" title=\"同时使用签名和邮件内容加密\"></a>同时使用签名和邮件内容加密</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.e81cca9b-c780-49d9-a3f9-69cc3c442183%28zh-cn,TechNet.10%29.gif\" alt=\"tu\"></p>\n<p><br></p>\n<h3 id=\"同时使用签名和邮件内容加密后的解密\"><a href=\"#同时使用签名和邮件内容加密后的解密\" class=\"headerlink\" title=\"同时使用签名和邮件内容加密后的解密\"></a>同时使用签名和邮件内容加密后的解密</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.97705e57-0a94-4197-99c3-40bb58a9eaa0%28zh-cn,TechNet.10%29.gif\" alt=\"\"><br><br></p>\n<h3 id=\"功能和所需的密钥表\"><a href=\"#功能和所需的密钥表\" class=\"headerlink\" title=\"功能和所需的密钥表\"></a>功能和所需的密钥表</h3><p><img src=\"http://technet.microsoft.com/zh-cn/library/Aa998077.ef4e76b6-4799-45a9-90f8-ec7af508152a%28zh-cn,TechNet.10%29.gif\" alt=\"\"></p>\n"},{"layout":"post","title":"windows时间的处理","date":"2016-06-28T06:33:59.000Z","comments":1,"_content":"\n# windows时间的处理：\n\n## 系统时间：\n UTC时间（格林威治时间）,世界标准时间，北京时间是UTC+8\n\n## 本地时间：\n UTC时间+时区偏差，就是计算机右下角显示的时间\n\n## 文件时间：类型有三种\n 1.创建时间\n \n 2.访问时间\n \n 3.修改时间\n \n文件时间是：\n \n 64位的值记录了自1601年1月1日0点以来的以100纳秒（ns）为单位的格林威治时间间隔，我们鼠标右键查看文件属性，看到的是这个间隔加上时区差的，并且显示格式的SYSTEM结构体形式(年月日的形式)，不是FILETIME结构体形式（两个DWORD成员）。所以看起来跟本地时间差别不大。\n\n#  基本概念\n先来看看这两个结构体的定义：\n\n### FILETIME结构体:\n```cpp\ntypedef struct _FILETIME {\n    DWORDdwLowDateTime;\n    DWORDdwHighDateTime;\n} FILETIME, *PFILETIME, *LPFILETIME;\n```\n它在MSDN上的说明——Contains a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC时间).\n\n### SYSTEMTIME结构体：\n```cpp\ntypedef struct _SYSTEMTIME {\n\n    WORDwYear;\n\n    WORDwMonth;\n\n    WORDwDayOfWeek;\n\n    WORDwDay;\n\n    WORDwHour;\n\n    WORDwMinute;\n\n    WORDwSecond;\n\n    WORDwMilliseconds;\n\n} SYSTEMTIME, *PSYSTEMTIME, *LPSYSTEMTIME;\n```\n\n### 代码示例\n\n ```c\n #include \"stdafx.h\"\n#include <windows.h>  \n#include <stdio.h>  \n//#include <conio.h>  \n\nclass CLocaltimeAndFiletime  \n{  \npublic:  \n    static void GetCurrentLocalTime(char *pstrDate, char *pstrTime);  \n    static void FileTimeToLocalTime(FILETIME &ft, char *pstrDate, char *pstrTime);  \n};  \n\n//取得：本地时间 = UTC+8（北京的）  //UTC是系统时间\nvoid CLocaltimeAndFiletime::GetCurrentLocalTime(char *pstrDate, char *pstrTime)  \n{  \n    SYSTEMTIME st;  \n    GetLocalTime(&st);  //取得本地时间\n\t//getsystemtime(&st) //依据所在时区，和本地时间，推算出UTC时间=本地-8小时\n    if (pstrDate != NULL)  \n        sprintf(pstrDate, \"%d-%d-%d\", st.wYear, st.wMonth, st.wDay);  \n    if (pstrTime != NULL)  \n        sprintf(pstrTime, \"%02d:%02d:%02d\", st.wHour, st.wMinute, st.wSecond);  \n}  \n\n//把一个64e位的文件时间（三种类型，创建/访问/修改），转换成SYSTEEMTIME结构类型\nvoid CLocaltimeAndFiletime::FileTimeToLocalTime(FILETIME &ft, char *pstrDate, char *pstrTime)  \n{  \n    FILETIME localft;  //文件时间是1601年--目前的UTC时间的差（64位整数），转换成UTC+本地时区的64位值，\n    FileTimeToLocalFileTime(&ft, &localft);  \n    SYSTEMTIME st;  \n    FileTimeToSystemTime(&localft, &st);  //转换成年月日形式\n\t\n    if (pstrDate != NULL)  \n        sprintf(pstrDate, \"%d-%d-%d\", st.wYear, st.wMonth, st.wDay);  \n    if (pstrTime != NULL)  \n        sprintf(pstrTime, \"%02d:%02d:%02d\", st.wHour, st.wMinute, st.wSecond);  \n}  \n\n\nint main(int argc, char *argv[])  \n{  \n    printf(\"windows(FILETIME和SYSTEMTIME) \\n\");          \n    \n    const int MAX_LEN = 30;  \n    char strDate[MAX_LEN], strTime[MAX_LEN];  \n    CLocaltimeAndFiletime::GetCurrentLocalTime(strDate, strTime);  \n    printf(\"current: %s %s\\n\", strDate, strTime);  \n\t\n    const char* pstrFileName = \"C:\\\\1.html\";  \n    printf(\"文件名：%s\\n\", pstrFileName);  \n    //打开一个文件取得句柄，利用这个句柄取得文件的时间属性（创建，访问，修改）\n    HANDLE handleFile = CreateFile(pstrFileName, GENERIC_READ,   \n        FILE_SHARE_READ, NULL, OPEN_EXISTING, 0, NULL);  \n    FILETIME ftCreationTime, ftLastAccessTime, ftLastWriteTime;  \n    //取得时间属性\n    GetFileTime(handleFile, &ftCreationTime, &ftLastAccessTime, &ftLastWriteTime);  \n    //转换创建时间\n    CLocaltimeAndFiletime::FileTimeToLocalTime(ftCreationTime, strDate, strTime);  \n    printf(\"create: %s %s\\n\", strDate, strTime);  \n    //转换最后一次访问时间\n    CLocaltimeAndFiletime::FileTimeToLocalTime(ftLastAccessTime, strDate, strTime);  \n    printf(\"access: %s %s\\n\", strDate, strTime);\n    //转换修改时间\n    CLocaltimeAndFiletime::FileTimeToLocalTime(ftLastWriteTime, strDate, strTime);  \n    printf(\"modify: %s %s\\n\", strDate, strTime);  \n    //getch();  \n    return 0;  \n}  \n ```\n","source":"_posts/windows/win_time_func.md","raw":"---\nlayout: post\ntitle: windows时间的处理\ncategory: windows\ntags: c++\ndate: 2016-06-28 14:33:59\ncomments: true\n\n---\n\n# windows时间的处理：\n\n## 系统时间：\n UTC时间（格林威治时间）,世界标准时间，北京时间是UTC+8\n\n## 本地时间：\n UTC时间+时区偏差，就是计算机右下角显示的时间\n\n## 文件时间：类型有三种\n 1.创建时间\n \n 2.访问时间\n \n 3.修改时间\n \n文件时间是：\n \n 64位的值记录了自1601年1月1日0点以来的以100纳秒（ns）为单位的格林威治时间间隔，我们鼠标右键查看文件属性，看到的是这个间隔加上时区差的，并且显示格式的SYSTEM结构体形式(年月日的形式)，不是FILETIME结构体形式（两个DWORD成员）。所以看起来跟本地时间差别不大。\n\n#  基本概念\n先来看看这两个结构体的定义：\n\n### FILETIME结构体:\n```cpp\ntypedef struct _FILETIME {\n    DWORDdwLowDateTime;\n    DWORDdwHighDateTime;\n} FILETIME, *PFILETIME, *LPFILETIME;\n```\n它在MSDN上的说明——Contains a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC时间).\n\n### SYSTEMTIME结构体：\n```cpp\ntypedef struct _SYSTEMTIME {\n\n    WORDwYear;\n\n    WORDwMonth;\n\n    WORDwDayOfWeek;\n\n    WORDwDay;\n\n    WORDwHour;\n\n    WORDwMinute;\n\n    WORDwSecond;\n\n    WORDwMilliseconds;\n\n} SYSTEMTIME, *PSYSTEMTIME, *LPSYSTEMTIME;\n```\n\n### 代码示例\n\n ```c\n #include \"stdafx.h\"\n#include <windows.h>  \n#include <stdio.h>  \n//#include <conio.h>  \n\nclass CLocaltimeAndFiletime  \n{  \npublic:  \n    static void GetCurrentLocalTime(char *pstrDate, char *pstrTime);  \n    static void FileTimeToLocalTime(FILETIME &ft, char *pstrDate, char *pstrTime);  \n};  \n\n//取得：本地时间 = UTC+8（北京的）  //UTC是系统时间\nvoid CLocaltimeAndFiletime::GetCurrentLocalTime(char *pstrDate, char *pstrTime)  \n{  \n    SYSTEMTIME st;  \n    GetLocalTime(&st);  //取得本地时间\n\t//getsystemtime(&st) //依据所在时区，和本地时间，推算出UTC时间=本地-8小时\n    if (pstrDate != NULL)  \n        sprintf(pstrDate, \"%d-%d-%d\", st.wYear, st.wMonth, st.wDay);  \n    if (pstrTime != NULL)  \n        sprintf(pstrTime, \"%02d:%02d:%02d\", st.wHour, st.wMinute, st.wSecond);  \n}  \n\n//把一个64e位的文件时间（三种类型，创建/访问/修改），转换成SYSTEEMTIME结构类型\nvoid CLocaltimeAndFiletime::FileTimeToLocalTime(FILETIME &ft, char *pstrDate, char *pstrTime)  \n{  \n    FILETIME localft;  //文件时间是1601年--目前的UTC时间的差（64位整数），转换成UTC+本地时区的64位值，\n    FileTimeToLocalFileTime(&ft, &localft);  \n    SYSTEMTIME st;  \n    FileTimeToSystemTime(&localft, &st);  //转换成年月日形式\n\t\n    if (pstrDate != NULL)  \n        sprintf(pstrDate, \"%d-%d-%d\", st.wYear, st.wMonth, st.wDay);  \n    if (pstrTime != NULL)  \n        sprintf(pstrTime, \"%02d:%02d:%02d\", st.wHour, st.wMinute, st.wSecond);  \n}  \n\n\nint main(int argc, char *argv[])  \n{  \n    printf(\"windows(FILETIME和SYSTEMTIME) \\n\");          \n    \n    const int MAX_LEN = 30;  \n    char strDate[MAX_LEN], strTime[MAX_LEN];  \n    CLocaltimeAndFiletime::GetCurrentLocalTime(strDate, strTime);  \n    printf(\"current: %s %s\\n\", strDate, strTime);  \n\t\n    const char* pstrFileName = \"C:\\\\1.html\";  \n    printf(\"文件名：%s\\n\", pstrFileName);  \n    //打开一个文件取得句柄，利用这个句柄取得文件的时间属性（创建，访问，修改）\n    HANDLE handleFile = CreateFile(pstrFileName, GENERIC_READ,   \n        FILE_SHARE_READ, NULL, OPEN_EXISTING, 0, NULL);  \n    FILETIME ftCreationTime, ftLastAccessTime, ftLastWriteTime;  \n    //取得时间属性\n    GetFileTime(handleFile, &ftCreationTime, &ftLastAccessTime, &ftLastWriteTime);  \n    //转换创建时间\n    CLocaltimeAndFiletime::FileTimeToLocalTime(ftCreationTime, strDate, strTime);  \n    printf(\"create: %s %s\\n\", strDate, strTime);  \n    //转换最后一次访问时间\n    CLocaltimeAndFiletime::FileTimeToLocalTime(ftLastAccessTime, strDate, strTime);  \n    printf(\"access: %s %s\\n\", strDate, strTime);\n    //转换修改时间\n    CLocaltimeAndFiletime::FileTimeToLocalTime(ftLastWriteTime, strDate, strTime);  \n    printf(\"modify: %s %s\\n\", strDate, strTime);  \n    //getch();  \n    return 0;  \n}  \n ```\n","slug":"windows/win_time_func","published":1,"updated":"2019-01-26T05:01:47.195Z","photos":[],"link":"","_id":"cjrd0e8rr001jkwli5x11whg5","content":"<h1 id=\"windows时间的处理：\"><a href=\"#windows时间的处理：\" class=\"headerlink\" title=\"windows时间的处理：\"></a>windows时间的处理：</h1><h2 id=\"系统时间：\"><a href=\"#系统时间：\" class=\"headerlink\" title=\"系统时间：\"></a>系统时间：</h2><p> UTC时间（格林威治时间）,世界标准时间，北京时间是UTC+8</p>\n<h2 id=\"本地时间：\"><a href=\"#本地时间：\" class=\"headerlink\" title=\"本地时间：\"></a>本地时间：</h2><p> UTC时间+时区偏差，就是计算机右下角显示的时间</p>\n<h2 id=\"文件时间：类型有三种\"><a href=\"#文件时间：类型有三种\" class=\"headerlink\" title=\"文件时间：类型有三种\"></a>文件时间：类型有三种</h2><p> 1.创建时间</p>\n<p> 2.访问时间</p>\n<p> 3.修改时间</p>\n<p>文件时间是：</p>\n<p> 64位的值记录了自1601年1月1日0点以来的以100纳秒（ns）为单位的格林威治时间间隔，我们鼠标右键查看文件属性，看到的是这个间隔加上时区差的，并且显示格式的SYSTEM结构体形式(年月日的形式)，不是FILETIME结构体形式（两个DWORD成员）。所以看起来跟本地时间差别不大。</p>\n<h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h1><p>先来看看这两个结构体的定义：</p>\n<h3 id=\"FILETIME结构体\"><a href=\"#FILETIME结构体\" class=\"headerlink\" title=\"FILETIME结构体:\"></a>FILETIME结构体:</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">FILETIME</span> &#123;</span></span><br><span class=\"line\">    DWORDdwLowDateTime;</span><br><span class=\"line\">    DWORDdwHighDateTime;</span><br><span class=\"line\">&#125; FILETIME, *PFILETIME, *LPFILETIME;</span><br></pre></td></tr></table></figure>\n<p>它在MSDN上的说明——Contains a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC时间).</p>\n<h3 id=\"SYSTEMTIME结构体：\"><a href=\"#SYSTEMTIME结构体：\" class=\"headerlink\" title=\"SYSTEMTIME结构体：\"></a>SYSTEMTIME结构体：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">SYSTEMTIME</span> &#123;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwYear;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwMonth;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwDayOfWeek;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwDay;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwHour;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwMinute;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwSecond;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwMilliseconds;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; SYSTEMTIME, *PSYSTEMTIME, *LPSYSTEMTIME;</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h3> <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"stdafx.h\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;windows.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"comment\">//#include &lt;conio.h&gt;  </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CLocaltimeAndFiletime</span>  </span></span><br><span class=\"line\"><span class=\"class\">&#123;</span>  </span><br><span class=\"line\"><span class=\"keyword\">public</span>:  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetCurrentLocalTime</span><span class=\"params\">(<span class=\"keyword\">char</span> *pstrDate, <span class=\"keyword\">char</span> *pstrTime)</span></span>;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">FileTimeToLocalTime</span><span class=\"params\">(FILETIME &amp;ft, <span class=\"keyword\">char</span> *pstrDate, <span class=\"keyword\">char</span> *pstrTime)</span></span>;  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//取得：本地时间 = UTC+8（北京的）  //UTC是系统时间</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> CLocaltimeAndFiletime::GetCurrentLocalTime(<span class=\"keyword\">char</span> *pstrDate, <span class=\"keyword\">char</span> *pstrTime)  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    SYSTEMTIME st;  </span><br><span class=\"line\">    GetLocalTime(&amp;st);  <span class=\"comment\">//取得本地时间</span></span><br><span class=\"line\">\t<span class=\"comment\">//getsystemtime(&amp;st) //依据所在时区，和本地时间，推算出UTC时间=本地-8小时</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pstrDate != <span class=\"literal\">NULL</span>)  </span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(pstrDate, <span class=\"string\">\"%d-%d-%d\"</span>, st.wYear, st.wMonth, st.wDay);  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pstrTime != <span class=\"literal\">NULL</span>)  </span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(pstrTime, <span class=\"string\">\"%02d:%02d:%02d\"</span>, st.wHour, st.wMinute, st.wSecond);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//把一个64e位的文件时间（三种类型，创建/访问/修改），转换成SYSTEEMTIME结构类型</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> CLocaltimeAndFiletime::FileTimeToLocalTime(FILETIME &amp;ft, <span class=\"keyword\">char</span> *pstrDate, <span class=\"keyword\">char</span> *pstrTime)  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    FILETIME localft;  <span class=\"comment\">//文件时间是1601年--目前的UTC时间的差（64位整数），转换成UTC+本地时区的64位值，</span></span><br><span class=\"line\">    FileTimeToLocalFileTime(&amp;ft, &amp;localft);  </span><br><span class=\"line\">    SYSTEMTIME st;  </span><br><span class=\"line\">    FileTimeToSystemTime(&amp;localft, &amp;st);  <span class=\"comment\">//转换成年月日形式</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pstrDate != <span class=\"literal\">NULL</span>)  </span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(pstrDate, <span class=\"string\">\"%d-%d-%d\"</span>, st.wYear, st.wMonth, st.wDay);  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pstrTime != <span class=\"literal\">NULL</span>)  </span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(pstrTime, <span class=\"string\">\"%02d:%02d:%02d\"</span>, st.wHour, st.wMinute, st.wSecond);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"windows(FILETIME和SYSTEMTIME) \\n\"</span>);          </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAX_LEN = <span class=\"number\">30</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> strDate[MAX_LEN], strTime[MAX_LEN];  </span><br><span class=\"line\">    CLocaltimeAndFiletime::GetCurrentLocalTime(strDate, strTime);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"current: %s %s\\n\"</span>, strDate, strTime);  </span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* pstrFileName = <span class=\"string\">\"C:\\\\1.html\"</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"文件名：%s\\n\"</span>, pstrFileName);  </span><br><span class=\"line\">    <span class=\"comment\">//打开一个文件取得句柄，利用这个句柄取得文件的时间属性（创建，访问，修改）</span></span><br><span class=\"line\">    HANDLE handleFile = CreateFile(pstrFileName, GENERIC_READ,   </span><br><span class=\"line\">        FILE_SHARE_READ, <span class=\"literal\">NULL</span>, OPEN_EXISTING, <span class=\"number\">0</span>, <span class=\"literal\">NULL</span>);  </span><br><span class=\"line\">    FILETIME ftCreationTime, ftLastAccessTime, ftLastWriteTime;  </span><br><span class=\"line\">    <span class=\"comment\">//取得时间属性</span></span><br><span class=\"line\">    GetFileTime(handleFile, &amp;ftCreationTime, &amp;ftLastAccessTime, &amp;ftLastWriteTime);  </span><br><span class=\"line\">    <span class=\"comment\">//转换创建时间</span></span><br><span class=\"line\">    CLocaltimeAndFiletime::FileTimeToLocalTime(ftCreationTime, strDate, strTime);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"create: %s %s\\n\"</span>, strDate, strTime);  </span><br><span class=\"line\">    <span class=\"comment\">//转换最后一次访问时间</span></span><br><span class=\"line\">    CLocaltimeAndFiletime::FileTimeToLocalTime(ftLastAccessTime, strDate, strTime);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"access: %s %s\\n\"</span>, strDate, strTime);</span><br><span class=\"line\">    <span class=\"comment\">//转换修改时间</span></span><br><span class=\"line\">    CLocaltimeAndFiletime::FileTimeToLocalTime(ftLastWriteTime, strDate, strTime);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"modify: %s %s\\n\"</span>, strDate, strTime);  </span><br><span class=\"line\">    <span class=\"comment\">//getch();  </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"windows时间的处理：\"><a href=\"#windows时间的处理：\" class=\"headerlink\" title=\"windows时间的处理：\"></a>windows时间的处理：</h1><h2 id=\"系统时间：\"><a href=\"#系统时间：\" class=\"headerlink\" title=\"系统时间：\"></a>系统时间：</h2><p> UTC时间（格林威治时间）,世界标准时间，北京时间是UTC+8</p>\n<h2 id=\"本地时间：\"><a href=\"#本地时间：\" class=\"headerlink\" title=\"本地时间：\"></a>本地时间：</h2><p> UTC时间+时区偏差，就是计算机右下角显示的时间</p>\n<h2 id=\"文件时间：类型有三种\"><a href=\"#文件时间：类型有三种\" class=\"headerlink\" title=\"文件时间：类型有三种\"></a>文件时间：类型有三种</h2><p> 1.创建时间</p>\n<p> 2.访问时间</p>\n<p> 3.修改时间</p>\n<p>文件时间是：</p>\n<p> 64位的值记录了自1601年1月1日0点以来的以100纳秒（ns）为单位的格林威治时间间隔，我们鼠标右键查看文件属性，看到的是这个间隔加上时区差的，并且显示格式的SYSTEM结构体形式(年月日的形式)，不是FILETIME结构体形式（两个DWORD成员）。所以看起来跟本地时间差别不大。</p>\n<h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h1><p>先来看看这两个结构体的定义：</p>\n<h3 id=\"FILETIME结构体\"><a href=\"#FILETIME结构体\" class=\"headerlink\" title=\"FILETIME结构体:\"></a>FILETIME结构体:</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">FILETIME</span> &#123;</span></span><br><span class=\"line\">    DWORDdwLowDateTime;</span><br><span class=\"line\">    DWORDdwHighDateTime;</span><br><span class=\"line\">&#125; FILETIME, *PFILETIME, *LPFILETIME;</span><br></pre></td></tr></table></figure>\n<p>它在MSDN上的说明——Contains a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC时间).</p>\n<h3 id=\"SYSTEMTIME结构体：\"><a href=\"#SYSTEMTIME结构体：\" class=\"headerlink\" title=\"SYSTEMTIME结构体：\"></a>SYSTEMTIME结构体：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">SYSTEMTIME</span> &#123;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwYear;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwMonth;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwDayOfWeek;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwDay;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwHour;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwMinute;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwSecond;</span><br><span class=\"line\"></span><br><span class=\"line\">    WORDwMilliseconds;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; SYSTEMTIME, *PSYSTEMTIME, *LPSYSTEMTIME;</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h3> <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"stdafx.h\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;windows.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"comment\">//#include &lt;conio.h&gt;  </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CLocaltimeAndFiletime</span>  </span></span><br><span class=\"line\"><span class=\"class\">&#123;</span>  </span><br><span class=\"line\"><span class=\"keyword\">public</span>:  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetCurrentLocalTime</span><span class=\"params\">(<span class=\"keyword\">char</span> *pstrDate, <span class=\"keyword\">char</span> *pstrTime)</span></span>;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">FileTimeToLocalTime</span><span class=\"params\">(FILETIME &amp;ft, <span class=\"keyword\">char</span> *pstrDate, <span class=\"keyword\">char</span> *pstrTime)</span></span>;  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//取得：本地时间 = UTC+8（北京的）  //UTC是系统时间</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> CLocaltimeAndFiletime::GetCurrentLocalTime(<span class=\"keyword\">char</span> *pstrDate, <span class=\"keyword\">char</span> *pstrTime)  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    SYSTEMTIME st;  </span><br><span class=\"line\">    GetLocalTime(&amp;st);  <span class=\"comment\">//取得本地时间</span></span><br><span class=\"line\">\t<span class=\"comment\">//getsystemtime(&amp;st) //依据所在时区，和本地时间，推算出UTC时间=本地-8小时</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pstrDate != <span class=\"literal\">NULL</span>)  </span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(pstrDate, <span class=\"string\">\"%d-%d-%d\"</span>, st.wYear, st.wMonth, st.wDay);  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pstrTime != <span class=\"literal\">NULL</span>)  </span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(pstrTime, <span class=\"string\">\"%02d:%02d:%02d\"</span>, st.wHour, st.wMinute, st.wSecond);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//把一个64e位的文件时间（三种类型，创建/访问/修改），转换成SYSTEEMTIME结构类型</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> CLocaltimeAndFiletime::FileTimeToLocalTime(FILETIME &amp;ft, <span class=\"keyword\">char</span> *pstrDate, <span class=\"keyword\">char</span> *pstrTime)  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    FILETIME localft;  <span class=\"comment\">//文件时间是1601年--目前的UTC时间的差（64位整数），转换成UTC+本地时区的64位值，</span></span><br><span class=\"line\">    FileTimeToLocalFileTime(&amp;ft, &amp;localft);  </span><br><span class=\"line\">    SYSTEMTIME st;  </span><br><span class=\"line\">    FileTimeToSystemTime(&amp;localft, &amp;st);  <span class=\"comment\">//转换成年月日形式</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pstrDate != <span class=\"literal\">NULL</span>)  </span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(pstrDate, <span class=\"string\">\"%d-%d-%d\"</span>, st.wYear, st.wMonth, st.wDay);  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pstrTime != <span class=\"literal\">NULL</span>)  </span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(pstrTime, <span class=\"string\">\"%02d:%02d:%02d\"</span>, st.wHour, st.wMinute, st.wSecond);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"windows(FILETIME和SYSTEMTIME) \\n\"</span>);          </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAX_LEN = <span class=\"number\">30</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> strDate[MAX_LEN], strTime[MAX_LEN];  </span><br><span class=\"line\">    CLocaltimeAndFiletime::GetCurrentLocalTime(strDate, strTime);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"current: %s %s\\n\"</span>, strDate, strTime);  </span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* pstrFileName = <span class=\"string\">\"C:\\\\1.html\"</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"文件名：%s\\n\"</span>, pstrFileName);  </span><br><span class=\"line\">    <span class=\"comment\">//打开一个文件取得句柄，利用这个句柄取得文件的时间属性（创建，访问，修改）</span></span><br><span class=\"line\">    HANDLE handleFile = CreateFile(pstrFileName, GENERIC_READ,   </span><br><span class=\"line\">        FILE_SHARE_READ, <span class=\"literal\">NULL</span>, OPEN_EXISTING, <span class=\"number\">0</span>, <span class=\"literal\">NULL</span>);  </span><br><span class=\"line\">    FILETIME ftCreationTime, ftLastAccessTime, ftLastWriteTime;  </span><br><span class=\"line\">    <span class=\"comment\">//取得时间属性</span></span><br><span class=\"line\">    GetFileTime(handleFile, &amp;ftCreationTime, &amp;ftLastAccessTime, &amp;ftLastWriteTime);  </span><br><span class=\"line\">    <span class=\"comment\">//转换创建时间</span></span><br><span class=\"line\">    CLocaltimeAndFiletime::FileTimeToLocalTime(ftCreationTime, strDate, strTime);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"create: %s %s\\n\"</span>, strDate, strTime);  </span><br><span class=\"line\">    <span class=\"comment\">//转换最后一次访问时间</span></span><br><span class=\"line\">    CLocaltimeAndFiletime::FileTimeToLocalTime(ftLastAccessTime, strDate, strTime);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"access: %s %s\\n\"</span>, strDate, strTime);</span><br><span class=\"line\">    <span class=\"comment\">//转换修改时间</span></span><br><span class=\"line\">    CLocaltimeAndFiletime::FileTimeToLocalTime(ftLastWriteTime, strDate, strTime);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"modify: %s %s\\n\"</span>, strDate, strTime);  </span><br><span class=\"line\">    <span class=\"comment\">//getch();  </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"windowFTP的建立","date":"2016-07-31T07:30:55.000Z","comments":1,"_content":"\n# windows下建立ftp服务器 \n需要单独建立一个用户，然后把特定目录设置为ftp目录（单独的用户需要有访问权限哦），这样避免别人知道你的计算机用户名和密码。\n可以把新建的这个用户名密码告诉他们。别的目录不属于这个用户的文件夹，他就没法访问了。。\n\n# 运行：appwiz.cpl 添加ftp服务组件\n\n# 右键计算机 -管理-服务应用程序管理-IIS管理 ，添加ftp站点\n\n上传目录：一步一步设置，IP ,ftp上传目录，点口为21  ，基本，权限：可读可写，用户：所有用户，ssL可选，证书 ,完成。\n\n下载目录：IP ，端口2121 ，用户：所有用户，SSL可选，基本，权限：可读，完成。\n\n# 注意\n如果你使用的用户是administrator ，需要FTP上传目录和下载目录，添加用户权限，加入新建的用户。\n\n\nwindows下访问，可在文件浏览器输入ftp://IP  默认端口21  \nlinux下访问 ,当前目录home/username/  ,输入ftp ip port   提示输入ftp服务器的用户名和密码\n提示 user logged in。\nls 可显示ftp上面的文件和文件夹。\n下载文件: get xxx   ./（/home/username/）\n上传文件:  cd 进入到ftp的目录11/  cd 11 \n         然后 put  home/username/index.php  ,就把index.php上传了。。\n          \n\n\n\n\n\n\n\n","source":"_posts/windows/windowsFTP.md","raw":"---\nlayout: post\ntitle: windowFTP的建立\ncategory: windows \ntags: windows \ndate: 2016-7-31 15:30:55\ncomments: true\n\n---\n\n# windows下建立ftp服务器 \n需要单独建立一个用户，然后把特定目录设置为ftp目录（单独的用户需要有访问权限哦），这样避免别人知道你的计算机用户名和密码。\n可以把新建的这个用户名密码告诉他们。别的目录不属于这个用户的文件夹，他就没法访问了。。\n\n# 运行：appwiz.cpl 添加ftp服务组件\n\n# 右键计算机 -管理-服务应用程序管理-IIS管理 ，添加ftp站点\n\n上传目录：一步一步设置，IP ,ftp上传目录，点口为21  ，基本，权限：可读可写，用户：所有用户，ssL可选，证书 ,完成。\n\n下载目录：IP ，端口2121 ，用户：所有用户，SSL可选，基本，权限：可读，完成。\n\n# 注意\n如果你使用的用户是administrator ，需要FTP上传目录和下载目录，添加用户权限，加入新建的用户。\n\n\nwindows下访问，可在文件浏览器输入ftp://IP  默认端口21  \nlinux下访问 ,当前目录home/username/  ,输入ftp ip port   提示输入ftp服务器的用户名和密码\n提示 user logged in。\nls 可显示ftp上面的文件和文件夹。\n下载文件: get xxx   ./（/home/username/）\n上传文件:  cd 进入到ftp的目录11/  cd 11 \n         然后 put  home/username/index.php  ,就把index.php上传了。。\n          \n\n\n\n\n\n\n\n","slug":"windows/windowsFTP","published":1,"updated":"2018-05-26T02:38:14.919Z","photos":[],"link":"","_id":"cjrd0e8rt001mkwlizzhu82o1","content":"<h1 id=\"windows下建立ftp服务器\"><a href=\"#windows下建立ftp服务器\" class=\"headerlink\" title=\"windows下建立ftp服务器\"></a>windows下建立ftp服务器</h1><p>需要单独建立一个用户，然后把特定目录设置为ftp目录（单独的用户需要有访问权限哦），这样避免别人知道你的计算机用户名和密码。<br>可以把新建的这个用户名密码告诉他们。别的目录不属于这个用户的文件夹，他就没法访问了。。</p>\n<h1 id=\"运行：appwiz-cpl-添加ftp服务组件\"><a href=\"#运行：appwiz-cpl-添加ftp服务组件\" class=\"headerlink\" title=\"运行：appwiz.cpl 添加ftp服务组件\"></a>运行：appwiz.cpl 添加ftp服务组件</h1><h1 id=\"右键计算机-管理-服务应用程序管理-IIS管理-，添加ftp站点\"><a href=\"#右键计算机-管理-服务应用程序管理-IIS管理-，添加ftp站点\" class=\"headerlink\" title=\"右键计算机 -管理-服务应用程序管理-IIS管理 ，添加ftp站点\"></a>右键计算机 -管理-服务应用程序管理-IIS管理 ，添加ftp站点</h1><p>上传目录：一步一步设置，IP ,ftp上传目录，点口为21  ，基本，权限：可读可写，用户：所有用户，ssL可选，证书 ,完成。</p>\n<p>下载目录：IP ，端口2121 ，用户：所有用户，SSL可选，基本，权限：可读，完成。</p>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>如果你使用的用户是administrator ，需要FTP上传目录和下载目录，添加用户权限，加入新建的用户。</p>\n<p>windows下访问，可在文件浏览器输入<a href=\"ftp://IP\" target=\"_blank\" rel=\"noopener\">ftp://IP</a>  默认端口21<br>linux下访问 ,当前目录home/username/  ,输入ftp ip port   提示输入ftp服务器的用户名和密码<br>提示 user logged in。<br>ls 可显示ftp上面的文件和文件夹。<br>下载文件: get xxx   ./（/home/username/）<br>上传文件:  cd 进入到ftp的目录11/  cd 11<br>         然后 put  home/username/index.php  ,就把index.php上传了。。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"windows下建立ftp服务器\"><a href=\"#windows下建立ftp服务器\" class=\"headerlink\" title=\"windows下建立ftp服务器\"></a>windows下建立ftp服务器</h1><p>需要单独建立一个用户，然后把特定目录设置为ftp目录（单独的用户需要有访问权限哦），这样避免别人知道你的计算机用户名和密码。<br>可以把新建的这个用户名密码告诉他们。别的目录不属于这个用户的文件夹，他就没法访问了。。</p>\n<h1 id=\"运行：appwiz-cpl-添加ftp服务组件\"><a href=\"#运行：appwiz-cpl-添加ftp服务组件\" class=\"headerlink\" title=\"运行：appwiz.cpl 添加ftp服务组件\"></a>运行：appwiz.cpl 添加ftp服务组件</h1><h1 id=\"右键计算机-管理-服务应用程序管理-IIS管理-，添加ftp站点\"><a href=\"#右键计算机-管理-服务应用程序管理-IIS管理-，添加ftp站点\" class=\"headerlink\" title=\"右键计算机 -管理-服务应用程序管理-IIS管理 ，添加ftp站点\"></a>右键计算机 -管理-服务应用程序管理-IIS管理 ，添加ftp站点</h1><p>上传目录：一步一步设置，IP ,ftp上传目录，点口为21  ，基本，权限：可读可写，用户：所有用户，ssL可选，证书 ,完成。</p>\n<p>下载目录：IP ，端口2121 ，用户：所有用户，SSL可选，基本，权限：可读，完成。</p>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>如果你使用的用户是administrator ，需要FTP上传目录和下载目录，添加用户权限，加入新建的用户。</p>\n<p>windows下访问，可在文件浏览器输入<a href=\"ftp://IP\" target=\"_blank\" rel=\"noopener\">ftp://IP</a>  默认端口21<br>linux下访问 ,当前目录home/username/  ,输入ftp ip port   提示输入ftp服务器的用户名和密码<br>提示 user logged in。<br>ls 可显示ftp上面的文件和文件夹。<br>下载文件: get xxx   ./（/home/username/）<br>上传文件:  cd 进入到ftp的目录11/  cd 11<br>         然后 put  home/username/index.php  ,就把index.php上传了。。</p>\n"},{"layout":"post","title":"windows 管道通信","date":"2017-01-08T06:11:00.000Z","_content":"\n#windows 管道通信\n\n思路如下：\nserver端：\n1 建立一个可读可写的管道\n2 将cmd /c+命令建立的执行进程的输出（stdOutput）和错误(stdError)\n与管道写端关联。就是把cmd执行命令的结果写进管道。\n3 recv client端发来的命令比如： \"dir\"\n4 组合成字符串\"c:/windows/system32/cmd.exe /cdir\"\n5 利用字符串建立进程，就是执行的意思\n6 sleep(1000) 停止一秒，让进程完全执行完输出结果\n否则可能进程没执行完毕，就向下执行了，导致管道中\n只有部分cmd命令执行的结果。\n7 while循环ReadFile读取管道中的数据\n8 send发送数据给client端，显示\n\nclient端： \n这个很简单，建立一个阻塞的socket ，循环发送你想法的\n命令，到server端执行就可以了。\n\nserver端代码：\n```c\n//server.cpp  \n#include \"stdafx.h\"\n#include <stdio.h>\n#include <winsock2.h>\n#pragma comment(lib, \"ws2_32.lib\")\n\nint main(int argc, char* argv[])\n{\n\n    SOCKET sClient;\n    BYTE minorVer = 2; \n    BYTE majorVer = 2;\n    WSADATA wsaData;\n    WORD sockVersion = MAKEWORD(minorVer, majorVer);\n    if(WSAStartup(sockVersion, &wsaData) != 0)\n        return 0;\n    SOCKET sListen = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n    if(sListen == INVALID_SOCKET)\n    {\n        printf(\"socket error \\n\");\n        return 0;\n    }\n    sockaddr_in sin;\n    sin.sin_family = AF_INET;\n    sin.sin_port = htons(4500);\n    sin.sin_addr.S_un.S_addr = INADDR_ANY;  \n    if(bind(sListen, (LPSOCKADDR)&sin, sizeof(sin)) == SOCKET_ERROR)\n    {\n        printf(\"bind error \\n\");\n        return 0;\n    }\n    if(listen(sListen, 5) == SOCKET_ERROR)\n    {\n        printf(\"listen error \\n\");\n        return 0;\n    }\n\n    sClient  =accept(sListen,NULL,NULL);\n\n//  send(sClient,wMessage,strlen(wMessage),0);\n    char rBuffer[4096] = {0};\n    char totalbuffer[4096] ={0};\n    char cmdline[256]={0};\n\n    while(true)\n    {\n\n        memset(cmdline,0,256);\n        SECURITY_ATTRIBUTES sa;\n        HANDLE hRead,hWrite;\n        sa.nLength = sizeof(SECURITY_ATTRIBUTES);\n        sa.lpSecurityDescriptor = NULL;\n        sa.bInheritHandle = TRUE;\n        if (!CreatePipe(&hRead,&hWrite,&sa,0)) \n        {\n            printf(\"CreatePipe Error\");\n            return 0;\n        }   \n        STARTUPINFO si;\n        PROCESS_INFORMATION pi; \n        si.cb = sizeof(STARTUPINFO);\n        GetStartupInfo(&si); \n\n        si.hStdError = hWrite;\n        si.hStdOutput = hWrite;\n        si.wShowWindow = SW_HIDE;\n        si.dwFlags = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES;\n        \n        GetSystemDirectory(cmdline,sizeof(cmdline));\n        strcat(cmdline,\"\\\\cmd.exe /c\");\n        char cmdbuff[256];\n        ZeroMemory(cmdbuff,sizeof(cmdbuff));    \n    \n        recv(sClient,cmdbuff,256,NULL);\n        strncat(cmdline,cmdbuff,strlen(cmdbuff));\n        if (!CreateProcess(NULL,cmdline,NULL,NULL,TRUE,NULL,NULL,NULL,&si,&pi))     \n        {\n            printf(\"CreateProcess Error\");\n            continue;\n        }\n            ZeroMemory(cmdbuff,sizeof(cmdbuff));\n    \n        CloseHandle(hWrite);\n        DWORD dwRead;\n        Sleep(1000);\n     while(ReadFile(hRead,rBuffer,4096,&dwRead,NULL))\n        {  \n            char a[4] ={0};\n            sprintf(a,\"%d\",dwRead); //把数字转换成字符串放入数组\n            lstrcpy(totalbuffer,a); // 把总字节数写入数据最前面\n            lstrcat(totalbuffer,\"#\");//在加一个#符表示数字部分结束\n            lstrcat(totalbuffer,rBuffer);//缀数据部分\n            printf(\"%d\",dwRead);\n            send(sClient,totalbuffer,dwRead+5,0); //发送\n            printf(\"%s\",totalbuffer);   \n            memset(rBuffer,0,4096);  // 这是个死循环，一直读取管道中数据，所有要清零缓存\n            memset(totalbuffer,0,4096);\n        \n        }       \n    \n    \n    }\n\n    return 0;\n}\n\n```\n\n\nclient端代码：\n```c\n#include <stdio.h>\n#include \"stdafx.h\"\n#include <Winsock2.h>\n\n\n#pragma comment(lib,\"ws2_32.lib\")\nint main(int argc, char* argv[])\n{\n    \n    BYTE minorVer = 2; \n    BYTE majorVer = 2;\n    char recvBuf[4096]={0};\n    char buffer[4096]={0};\n    char temp[10]={0};\n    int len = 0;\n    int total = 0;\n    int t =0;\n    WSADATA wsaData;\n    WORD sockVersion = MAKEWORD(minorVer, majorVer);\n    if(WSAStartup(sockVersion, &wsaData) != 0)\n        return 0;\n    //创建套接字\n    SOCKET sockClient = socket( AF_INET,SOCK_STREAM, 0 );\n    SOCKADDR_IN addrSrv;\n    addrSrv.sin_addr.S_un.S_addr = inet_addr(\"172.28.125.137\"); //存server端ip ，\n    addrSrv.sin_family = AF_INET;\n    addrSrv.sin_port = htons(4500);\n    char x[15]={0}; //存放命令比如： cd ， dir ，ls ，pwd \n    //向服务器发出连接请求\n    connect( sockClient, (SOCKADDR*)&addrSrv, sizeof(SOCKADDR)); // 连接\n    while(1){\n        ZeroMemory(recvBuf,sizeof(recvBuf));   // 清零缓存\n        if(0!=scanf(\"%s\",x)){   // 等待输入命令\n          send(sockClient,x,lstrlen(x), 0 );\n                total=recv( sockClient, buffer, 4096, 0 ); //接收一次，可能收不完哦\n                lstrcat(recvBuf,buffer); // 存到总buffer里面\n                memcpy(temp,buffer,strstr(buffer,\"#\")-buffer);// 从buffer里面取出来数字部分，就是#前的字符串\n                t = atoi(temp); // 转成数字\n                printf(\"%d\",t);\n                while(total<t){ //如果第一次收到的小于这个数字，继续接收，存到临时buffer\n                    ZeroMemory(buffer,sizeof(buffer));\n                    len=recv( sockClient, buffer, 4096, 0 );\n                    total=len+total; // 取到的长度加上第一次的长度\n                    lstrcat(recvBuf,buffer);// 这次取得放到总的recvBuf里面\n                }\n            //  printf(\"%d\\n\",atoi(recvBuf));\n          printf(\"%s\\n\",recvBuf);\n          printf(\"%d\\n\",strlen(recvBuf));\n          total =0; // 以下清零是为了下次while循环准备，\n          len = 0;\n          t =0;\n          ZeroMemory(temp,sizeof(temp));\n          ZeroMemory(buffer,sizeof(buffer));\n         ZeroMemory(recvBuf,sizeof(recvBuf));\n        }   //接受数据\n\n }\n\n    closesocket(sockClient);\n    WSACleanup();\n    return 0;\n}\n\n```\n\n注意：ReadFile是异步或同步模式 ，ReadFileEx只有异步模式\n","source":"_posts/windows/windows_pipe.md","raw":"---\nlayout: post\ntitle: windows 管道通信\ndate: 2017-1-8 14:11:00\ncategory: windows \n\n---\n\n#windows 管道通信\n\n思路如下：\nserver端：\n1 建立一个可读可写的管道\n2 将cmd /c+命令建立的执行进程的输出（stdOutput）和错误(stdError)\n与管道写端关联。就是把cmd执行命令的结果写进管道。\n3 recv client端发来的命令比如： \"dir\"\n4 组合成字符串\"c:/windows/system32/cmd.exe /cdir\"\n5 利用字符串建立进程，就是执行的意思\n6 sleep(1000) 停止一秒，让进程完全执行完输出结果\n否则可能进程没执行完毕，就向下执行了，导致管道中\n只有部分cmd命令执行的结果。\n7 while循环ReadFile读取管道中的数据\n8 send发送数据给client端，显示\n\nclient端： \n这个很简单，建立一个阻塞的socket ，循环发送你想法的\n命令，到server端执行就可以了。\n\nserver端代码：\n```c\n//server.cpp  \n#include \"stdafx.h\"\n#include <stdio.h>\n#include <winsock2.h>\n#pragma comment(lib, \"ws2_32.lib\")\n\nint main(int argc, char* argv[])\n{\n\n    SOCKET sClient;\n    BYTE minorVer = 2; \n    BYTE majorVer = 2;\n    WSADATA wsaData;\n    WORD sockVersion = MAKEWORD(minorVer, majorVer);\n    if(WSAStartup(sockVersion, &wsaData) != 0)\n        return 0;\n    SOCKET sListen = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n    if(sListen == INVALID_SOCKET)\n    {\n        printf(\"socket error \\n\");\n        return 0;\n    }\n    sockaddr_in sin;\n    sin.sin_family = AF_INET;\n    sin.sin_port = htons(4500);\n    sin.sin_addr.S_un.S_addr = INADDR_ANY;  \n    if(bind(sListen, (LPSOCKADDR)&sin, sizeof(sin)) == SOCKET_ERROR)\n    {\n        printf(\"bind error \\n\");\n        return 0;\n    }\n    if(listen(sListen, 5) == SOCKET_ERROR)\n    {\n        printf(\"listen error \\n\");\n        return 0;\n    }\n\n    sClient  =accept(sListen,NULL,NULL);\n\n//  send(sClient,wMessage,strlen(wMessage),0);\n    char rBuffer[4096] = {0};\n    char totalbuffer[4096] ={0};\n    char cmdline[256]={0};\n\n    while(true)\n    {\n\n        memset(cmdline,0,256);\n        SECURITY_ATTRIBUTES sa;\n        HANDLE hRead,hWrite;\n        sa.nLength = sizeof(SECURITY_ATTRIBUTES);\n        sa.lpSecurityDescriptor = NULL;\n        sa.bInheritHandle = TRUE;\n        if (!CreatePipe(&hRead,&hWrite,&sa,0)) \n        {\n            printf(\"CreatePipe Error\");\n            return 0;\n        }   \n        STARTUPINFO si;\n        PROCESS_INFORMATION pi; \n        si.cb = sizeof(STARTUPINFO);\n        GetStartupInfo(&si); \n\n        si.hStdError = hWrite;\n        si.hStdOutput = hWrite;\n        si.wShowWindow = SW_HIDE;\n        si.dwFlags = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES;\n        \n        GetSystemDirectory(cmdline,sizeof(cmdline));\n        strcat(cmdline,\"\\\\cmd.exe /c\");\n        char cmdbuff[256];\n        ZeroMemory(cmdbuff,sizeof(cmdbuff));    \n    \n        recv(sClient,cmdbuff,256,NULL);\n        strncat(cmdline,cmdbuff,strlen(cmdbuff));\n        if (!CreateProcess(NULL,cmdline,NULL,NULL,TRUE,NULL,NULL,NULL,&si,&pi))     \n        {\n            printf(\"CreateProcess Error\");\n            continue;\n        }\n            ZeroMemory(cmdbuff,sizeof(cmdbuff));\n    \n        CloseHandle(hWrite);\n        DWORD dwRead;\n        Sleep(1000);\n     while(ReadFile(hRead,rBuffer,4096,&dwRead,NULL))\n        {  \n            char a[4] ={0};\n            sprintf(a,\"%d\",dwRead); //把数字转换成字符串放入数组\n            lstrcpy(totalbuffer,a); // 把总字节数写入数据最前面\n            lstrcat(totalbuffer,\"#\");//在加一个#符表示数字部分结束\n            lstrcat(totalbuffer,rBuffer);//缀数据部分\n            printf(\"%d\",dwRead);\n            send(sClient,totalbuffer,dwRead+5,0); //发送\n            printf(\"%s\",totalbuffer);   \n            memset(rBuffer,0,4096);  // 这是个死循环，一直读取管道中数据，所有要清零缓存\n            memset(totalbuffer,0,4096);\n        \n        }       \n    \n    \n    }\n\n    return 0;\n}\n\n```\n\n\nclient端代码：\n```c\n#include <stdio.h>\n#include \"stdafx.h\"\n#include <Winsock2.h>\n\n\n#pragma comment(lib,\"ws2_32.lib\")\nint main(int argc, char* argv[])\n{\n    \n    BYTE minorVer = 2; \n    BYTE majorVer = 2;\n    char recvBuf[4096]={0};\n    char buffer[4096]={0};\n    char temp[10]={0};\n    int len = 0;\n    int total = 0;\n    int t =0;\n    WSADATA wsaData;\n    WORD sockVersion = MAKEWORD(minorVer, majorVer);\n    if(WSAStartup(sockVersion, &wsaData) != 0)\n        return 0;\n    //创建套接字\n    SOCKET sockClient = socket( AF_INET,SOCK_STREAM, 0 );\n    SOCKADDR_IN addrSrv;\n    addrSrv.sin_addr.S_un.S_addr = inet_addr(\"172.28.125.137\"); //存server端ip ，\n    addrSrv.sin_family = AF_INET;\n    addrSrv.sin_port = htons(4500);\n    char x[15]={0}; //存放命令比如： cd ， dir ，ls ，pwd \n    //向服务器发出连接请求\n    connect( sockClient, (SOCKADDR*)&addrSrv, sizeof(SOCKADDR)); // 连接\n    while(1){\n        ZeroMemory(recvBuf,sizeof(recvBuf));   // 清零缓存\n        if(0!=scanf(\"%s\",x)){   // 等待输入命令\n          send(sockClient,x,lstrlen(x), 0 );\n                total=recv( sockClient, buffer, 4096, 0 ); //接收一次，可能收不完哦\n                lstrcat(recvBuf,buffer); // 存到总buffer里面\n                memcpy(temp,buffer,strstr(buffer,\"#\")-buffer);// 从buffer里面取出来数字部分，就是#前的字符串\n                t = atoi(temp); // 转成数字\n                printf(\"%d\",t);\n                while(total<t){ //如果第一次收到的小于这个数字，继续接收，存到临时buffer\n                    ZeroMemory(buffer,sizeof(buffer));\n                    len=recv( sockClient, buffer, 4096, 0 );\n                    total=len+total; // 取到的长度加上第一次的长度\n                    lstrcat(recvBuf,buffer);// 这次取得放到总的recvBuf里面\n                }\n            //  printf(\"%d\\n\",atoi(recvBuf));\n          printf(\"%s\\n\",recvBuf);\n          printf(\"%d\\n\",strlen(recvBuf));\n          total =0; // 以下清零是为了下次while循环准备，\n          len = 0;\n          t =0;\n          ZeroMemory(temp,sizeof(temp));\n          ZeroMemory(buffer,sizeof(buffer));\n         ZeroMemory(recvBuf,sizeof(recvBuf));\n        }   //接受数据\n\n }\n\n    closesocket(sockClient);\n    WSACleanup();\n    return 0;\n}\n\n```\n\n注意：ReadFile是异步或同步模式 ，ReadFileEx只有异步模式\n","slug":"windows/windows_pipe","published":1,"updated":"2018-05-26T02:38:14.916Z","comments":1,"photos":[],"link":"","_id":"cjrd0e8sl002ekwli43kl2oy6","content":"<p>#windows 管道通信</p>\n<p>思路如下：<br>server端：<br>1 建立一个可读可写的管道<br>2 将cmd /c+命令建立的执行进程的输出（stdOutput）和错误(stdError)<br>与管道写端关联。就是把cmd执行命令的结果写进管道。<br>3 recv client端发来的命令比如： “dir”<br>4 组合成字符串”c:/windows/system32/cmd.exe /cdir”<br>5 利用字符串建立进程，就是执行的意思<br>6 sleep(1000) 停止一秒，让进程完全执行完输出结果<br>否则可能进程没执行完毕，就向下执行了，导致管道中<br>只有部分cmd命令执行的结果。<br>7 while循环ReadFile读取管道中的数据<br>8 send发送数据给client端，显示</p>\n<p>client端：<br>这个很简单，建立一个阻塞的socket ，循环发送你想法的<br>命令，到server端执行就可以了。</p>\n<p>server端代码：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//server.cpp  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"stdafx.h\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;winsock2.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> comment(lib, <span class=\"meta-string\">\"ws2_32.lib\"</span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    SOCKET sClient;</span><br><span class=\"line\">    BYTE minorVer = <span class=\"number\">2</span>; </span><br><span class=\"line\">    BYTE majorVer = <span class=\"number\">2</span>;</span><br><span class=\"line\">    WSADATA wsaData;</span><br><span class=\"line\">    WORD sockVersion = MAKEWORD(minorVer, majorVer);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(WSAStartup(sockVersion, &amp;wsaData) != <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    SOCKET sListen = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sListen == INVALID_SOCKET)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"socket error \\n\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sockaddr_in <span class=\"built_in\">sin</span>;</span><br><span class=\"line\">    <span class=\"built_in\">sin</span>.sin_family = AF_INET;</span><br><span class=\"line\">    <span class=\"built_in\">sin</span>.sin_port = htons(<span class=\"number\">4500</span>);</span><br><span class=\"line\">    <span class=\"built_in\">sin</span>.sin_addr.S_un.S_addr = INADDR_ANY;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(bind(sListen, (LPSOCKADDR)&amp;<span class=\"built_in\">sin</span>, <span class=\"keyword\">sizeof</span>(<span class=\"built_in\">sin</span>)) == SOCKET_ERROR)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"bind error \\n\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(listen(sListen, <span class=\"number\">5</span>) == SOCKET_ERROR)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"listen error \\n\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    sClient  =accept(sListen,<span class=\"literal\">NULL</span>,<span class=\"literal\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  send(sClient,wMessage,strlen(wMessage),0);</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> rBuffer[<span class=\"number\">4096</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> totalbuffer[<span class=\"number\">4096</span>] =&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> cmdline[<span class=\"number\">256</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(cmdline,<span class=\"number\">0</span>,<span class=\"number\">256</span>);</span><br><span class=\"line\">        SECURITY_ATTRIBUTES sa;</span><br><span class=\"line\">        HANDLE hRead,hWrite;</span><br><span class=\"line\">        sa.nLength = <span class=\"keyword\">sizeof</span>(SECURITY_ATTRIBUTES);</span><br><span class=\"line\">        sa.lpSecurityDescriptor = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        sa.bInheritHandle = TRUE;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!CreatePipe(&amp;hRead,&amp;hWrite,&amp;sa,<span class=\"number\">0</span>)) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"CreatePipe Error\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;   </span><br><span class=\"line\">        STARTUPINFO si;</span><br><span class=\"line\">        PROCESS_INFORMATION pi; </span><br><span class=\"line\">        si.cb = <span class=\"keyword\">sizeof</span>(STARTUPINFO);</span><br><span class=\"line\">        GetStartupInfo(&amp;si); </span><br><span class=\"line\"></span><br><span class=\"line\">        si.hStdError = hWrite;</span><br><span class=\"line\">        si.hStdOutput = hWrite;</span><br><span class=\"line\">        si.wShowWindow = SW_HIDE;</span><br><span class=\"line\">        si.dwFlags = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES;</span><br><span class=\"line\">        </span><br><span class=\"line\">        GetSystemDirectory(cmdline,<span class=\"keyword\">sizeof</span>(cmdline));</span><br><span class=\"line\">        <span class=\"built_in\">strcat</span>(cmdline,<span class=\"string\">\"\\\\cmd.exe /c\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">char</span> cmdbuff[<span class=\"number\">256</span>];</span><br><span class=\"line\">        ZeroMemory(cmdbuff,<span class=\"keyword\">sizeof</span>(cmdbuff));    </span><br><span class=\"line\">    </span><br><span class=\"line\">        recv(sClient,cmdbuff,<span class=\"number\">256</span>,<span class=\"literal\">NULL</span>);</span><br><span class=\"line\">        <span class=\"built_in\">strncat</span>(cmdline,cmdbuff,<span class=\"built_in\">strlen</span>(cmdbuff));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!CreateProcess(<span class=\"literal\">NULL</span>,cmdline,<span class=\"literal\">NULL</span>,<span class=\"literal\">NULL</span>,TRUE,<span class=\"literal\">NULL</span>,<span class=\"literal\">NULL</span>,<span class=\"literal\">NULL</span>,&amp;si,&amp;pi))     </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"CreateProcess Error\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">            ZeroMemory(cmdbuff,<span class=\"keyword\">sizeof</span>(cmdbuff));</span><br><span class=\"line\">    </span><br><span class=\"line\">        CloseHandle(hWrite);</span><br><span class=\"line\">        DWORD dwRead;</span><br><span class=\"line\">        Sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">     <span class=\"keyword\">while</span>(ReadFile(hRead,rBuffer,<span class=\"number\">4096</span>,&amp;dwRead,<span class=\"literal\">NULL</span>))</span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"keyword\">char</span> a[<span class=\"number\">4</span>] =&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">            <span class=\"built_in\">sprintf</span>(a,<span class=\"string\">\"%d\"</span>,dwRead); <span class=\"comment\">//把数字转换成字符串放入数组</span></span><br><span class=\"line\">            lstrcpy(totalbuffer,a); <span class=\"comment\">// 把总字节数写入数据最前面</span></span><br><span class=\"line\">            lstrcat(totalbuffer,<span class=\"string\">\"#\"</span>);<span class=\"comment\">//在加一个#符表示数字部分结束</span></span><br><span class=\"line\">            lstrcat(totalbuffer,rBuffer);<span class=\"comment\">//缀数据部分</span></span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,dwRead);</span><br><span class=\"line\">            send(sClient,totalbuffer,dwRead+<span class=\"number\">5</span>,<span class=\"number\">0</span>); <span class=\"comment\">//发送</span></span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\"</span>,totalbuffer);   </span><br><span class=\"line\">            <span class=\"built_in\">memset</span>(rBuffer,<span class=\"number\">0</span>,<span class=\"number\">4096</span>);  <span class=\"comment\">// 这是个死循环，一直读取管道中数据，所有要清零缓存</span></span><br><span class=\"line\">            <span class=\"built_in\">memset</span>(totalbuffer,<span class=\"number\">0</span>,<span class=\"number\">4096</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#125;       </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>client端代码：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"stdafx.h\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Winsock2.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> comment(lib,<span class=\"meta-string\">\"ws2_32.lib\"</span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    BYTE minorVer = <span class=\"number\">2</span>; </span><br><span class=\"line\">    BYTE majorVer = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> recvBuf[<span class=\"number\">4096</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> buffer[<span class=\"number\">4096</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> temp[<span class=\"number\">10</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> total = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t =<span class=\"number\">0</span>;</span><br><span class=\"line\">    WSADATA wsaData;</span><br><span class=\"line\">    WORD sockVersion = MAKEWORD(minorVer, majorVer);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(WSAStartup(sockVersion, &amp;wsaData) != <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//创建套接字</span></span><br><span class=\"line\">    SOCKET sockClient = socket( AF_INET,SOCK_STREAM, <span class=\"number\">0</span> );</span><br><span class=\"line\">    SOCKADDR_IN addrSrv;</span><br><span class=\"line\">    addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class=\"string\">\"172.28.125.137\"</span>); <span class=\"comment\">//存server端ip ，</span></span><br><span class=\"line\">    addrSrv.sin_family = AF_INET;</span><br><span class=\"line\">    addrSrv.sin_port = htons(<span class=\"number\">4500</span>);</span><br><span class=\"line\">    <span class=\"keyword\">char</span> x[<span class=\"number\">15</span>]=&#123;<span class=\"number\">0</span>&#125;; <span class=\"comment\">//存放命令比如： cd ， dir ，ls ，pwd </span></span><br><span class=\"line\">    <span class=\"comment\">//向服务器发出连接请求</span></span><br><span class=\"line\">    connect( sockClient, (SOCKADDR*)&amp;addrSrv, <span class=\"keyword\">sizeof</span>(SOCKADDR)); <span class=\"comment\">// 连接</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        ZeroMemory(recvBuf,<span class=\"keyword\">sizeof</span>(recvBuf));   <span class=\"comment\">// 清零缓存</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"number\">0</span>!=<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,x))&#123;   <span class=\"comment\">// 等待输入命令</span></span><br><span class=\"line\">          send(sockClient,x,lstrlen(x), <span class=\"number\">0</span> );</span><br><span class=\"line\">                total=recv( sockClient, buffer, <span class=\"number\">4096</span>, <span class=\"number\">0</span> ); <span class=\"comment\">//接收一次，可能收不完哦</span></span><br><span class=\"line\">                lstrcat(recvBuf,buffer); <span class=\"comment\">// 存到总buffer里面</span></span><br><span class=\"line\">                <span class=\"built_in\">memcpy</span>(temp,buffer,<span class=\"built_in\">strstr</span>(buffer,<span class=\"string\">\"#\"</span>)-buffer);<span class=\"comment\">// 从buffer里面取出来数字部分，就是#前的字符串</span></span><br><span class=\"line\">                t = atoi(temp); <span class=\"comment\">// 转成数字</span></span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,t);</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(total&lt;t)&#123; <span class=\"comment\">//如果第一次收到的小于这个数字，继续接收，存到临时buffer</span></span><br><span class=\"line\">                    ZeroMemory(buffer,<span class=\"keyword\">sizeof</span>(buffer));</span><br><span class=\"line\">                    len=recv( sockClient, buffer, <span class=\"number\">4096</span>, <span class=\"number\">0</span> );</span><br><span class=\"line\">                    total=len+total; <span class=\"comment\">// 取到的长度加上第一次的长度</span></span><br><span class=\"line\">                    lstrcat(recvBuf,buffer);<span class=\"comment\">// 这次取得放到总的recvBuf里面</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            <span class=\"comment\">//  printf(\"%d\\n\",atoi(recvBuf));</span></span><br><span class=\"line\">          <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\\n\"</span>,recvBuf);</span><br><span class=\"line\">          <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,<span class=\"built_in\">strlen</span>(recvBuf));</span><br><span class=\"line\">          total =<span class=\"number\">0</span>; <span class=\"comment\">// 以下清零是为了下次while循环准备，</span></span><br><span class=\"line\">          len = <span class=\"number\">0</span>;</span><br><span class=\"line\">          t =<span class=\"number\">0</span>;</span><br><span class=\"line\">          ZeroMemory(temp,<span class=\"keyword\">sizeof</span>(temp));</span><br><span class=\"line\">          ZeroMemory(buffer,<span class=\"keyword\">sizeof</span>(buffer));</span><br><span class=\"line\">         ZeroMemory(recvBuf,<span class=\"keyword\">sizeof</span>(recvBuf));</span><br><span class=\"line\">        &#125;   <span class=\"comment\">//接受数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    closesocket(sockClient);</span><br><span class=\"line\">    WSACleanup();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意：ReadFile是异步或同步模式 ，ReadFileEx只有异步模式</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#windows 管道通信</p>\n<p>思路如下：<br>server端：<br>1 建立一个可读可写的管道<br>2 将cmd /c+命令建立的执行进程的输出（stdOutput）和错误(stdError)<br>与管道写端关联。就是把cmd执行命令的结果写进管道。<br>3 recv client端发来的命令比如： “dir”<br>4 组合成字符串”c:/windows/system32/cmd.exe /cdir”<br>5 利用字符串建立进程，就是执行的意思<br>6 sleep(1000) 停止一秒，让进程完全执行完输出结果<br>否则可能进程没执行完毕，就向下执行了，导致管道中<br>只有部分cmd命令执行的结果。<br>7 while循环ReadFile读取管道中的数据<br>8 send发送数据给client端，显示</p>\n<p>client端：<br>这个很简单，建立一个阻塞的socket ，循环发送你想法的<br>命令，到server端执行就可以了。</p>\n<p>server端代码：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//server.cpp  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"stdafx.h\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;winsock2.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> comment(lib, <span class=\"meta-string\">\"ws2_32.lib\"</span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    SOCKET sClient;</span><br><span class=\"line\">    BYTE minorVer = <span class=\"number\">2</span>; </span><br><span class=\"line\">    BYTE majorVer = <span class=\"number\">2</span>;</span><br><span class=\"line\">    WSADATA wsaData;</span><br><span class=\"line\">    WORD sockVersion = MAKEWORD(minorVer, majorVer);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(WSAStartup(sockVersion, &amp;wsaData) != <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    SOCKET sListen = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sListen == INVALID_SOCKET)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"socket error \\n\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sockaddr_in <span class=\"built_in\">sin</span>;</span><br><span class=\"line\">    <span class=\"built_in\">sin</span>.sin_family = AF_INET;</span><br><span class=\"line\">    <span class=\"built_in\">sin</span>.sin_port = htons(<span class=\"number\">4500</span>);</span><br><span class=\"line\">    <span class=\"built_in\">sin</span>.sin_addr.S_un.S_addr = INADDR_ANY;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(bind(sListen, (LPSOCKADDR)&amp;<span class=\"built_in\">sin</span>, <span class=\"keyword\">sizeof</span>(<span class=\"built_in\">sin</span>)) == SOCKET_ERROR)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"bind error \\n\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(listen(sListen, <span class=\"number\">5</span>) == SOCKET_ERROR)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"listen error \\n\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    sClient  =accept(sListen,<span class=\"literal\">NULL</span>,<span class=\"literal\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  send(sClient,wMessage,strlen(wMessage),0);</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> rBuffer[<span class=\"number\">4096</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> totalbuffer[<span class=\"number\">4096</span>] =&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> cmdline[<span class=\"number\">256</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(cmdline,<span class=\"number\">0</span>,<span class=\"number\">256</span>);</span><br><span class=\"line\">        SECURITY_ATTRIBUTES sa;</span><br><span class=\"line\">        HANDLE hRead,hWrite;</span><br><span class=\"line\">        sa.nLength = <span class=\"keyword\">sizeof</span>(SECURITY_ATTRIBUTES);</span><br><span class=\"line\">        sa.lpSecurityDescriptor = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        sa.bInheritHandle = TRUE;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!CreatePipe(&amp;hRead,&amp;hWrite,&amp;sa,<span class=\"number\">0</span>)) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"CreatePipe Error\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;   </span><br><span class=\"line\">        STARTUPINFO si;</span><br><span class=\"line\">        PROCESS_INFORMATION pi; </span><br><span class=\"line\">        si.cb = <span class=\"keyword\">sizeof</span>(STARTUPINFO);</span><br><span class=\"line\">        GetStartupInfo(&amp;si); </span><br><span class=\"line\"></span><br><span class=\"line\">        si.hStdError = hWrite;</span><br><span class=\"line\">        si.hStdOutput = hWrite;</span><br><span class=\"line\">        si.wShowWindow = SW_HIDE;</span><br><span class=\"line\">        si.dwFlags = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES;</span><br><span class=\"line\">        </span><br><span class=\"line\">        GetSystemDirectory(cmdline,<span class=\"keyword\">sizeof</span>(cmdline));</span><br><span class=\"line\">        <span class=\"built_in\">strcat</span>(cmdline,<span class=\"string\">\"\\\\cmd.exe /c\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">char</span> cmdbuff[<span class=\"number\">256</span>];</span><br><span class=\"line\">        ZeroMemory(cmdbuff,<span class=\"keyword\">sizeof</span>(cmdbuff));    </span><br><span class=\"line\">    </span><br><span class=\"line\">        recv(sClient,cmdbuff,<span class=\"number\">256</span>,<span class=\"literal\">NULL</span>);</span><br><span class=\"line\">        <span class=\"built_in\">strncat</span>(cmdline,cmdbuff,<span class=\"built_in\">strlen</span>(cmdbuff));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!CreateProcess(<span class=\"literal\">NULL</span>,cmdline,<span class=\"literal\">NULL</span>,<span class=\"literal\">NULL</span>,TRUE,<span class=\"literal\">NULL</span>,<span class=\"literal\">NULL</span>,<span class=\"literal\">NULL</span>,&amp;si,&amp;pi))     </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"CreateProcess Error\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">            ZeroMemory(cmdbuff,<span class=\"keyword\">sizeof</span>(cmdbuff));</span><br><span class=\"line\">    </span><br><span class=\"line\">        CloseHandle(hWrite);</span><br><span class=\"line\">        DWORD dwRead;</span><br><span class=\"line\">        Sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">     <span class=\"keyword\">while</span>(ReadFile(hRead,rBuffer,<span class=\"number\">4096</span>,&amp;dwRead,<span class=\"literal\">NULL</span>))</span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"keyword\">char</span> a[<span class=\"number\">4</span>] =&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">            <span class=\"built_in\">sprintf</span>(a,<span class=\"string\">\"%d\"</span>,dwRead); <span class=\"comment\">//把数字转换成字符串放入数组</span></span><br><span class=\"line\">            lstrcpy(totalbuffer,a); <span class=\"comment\">// 把总字节数写入数据最前面</span></span><br><span class=\"line\">            lstrcat(totalbuffer,<span class=\"string\">\"#\"</span>);<span class=\"comment\">//在加一个#符表示数字部分结束</span></span><br><span class=\"line\">            lstrcat(totalbuffer,rBuffer);<span class=\"comment\">//缀数据部分</span></span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,dwRead);</span><br><span class=\"line\">            send(sClient,totalbuffer,dwRead+<span class=\"number\">5</span>,<span class=\"number\">0</span>); <span class=\"comment\">//发送</span></span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\"</span>,totalbuffer);   </span><br><span class=\"line\">            <span class=\"built_in\">memset</span>(rBuffer,<span class=\"number\">0</span>,<span class=\"number\">4096</span>);  <span class=\"comment\">// 这是个死循环，一直读取管道中数据，所有要清零缓存</span></span><br><span class=\"line\">            <span class=\"built_in\">memset</span>(totalbuffer,<span class=\"number\">0</span>,<span class=\"number\">4096</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#125;       </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>client端代码：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"stdafx.h\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Winsock2.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> comment(lib,<span class=\"meta-string\">\"ws2_32.lib\"</span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    BYTE minorVer = <span class=\"number\">2</span>; </span><br><span class=\"line\">    BYTE majorVer = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> recvBuf[<span class=\"number\">4096</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> buffer[<span class=\"number\">4096</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> temp[<span class=\"number\">10</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> total = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t =<span class=\"number\">0</span>;</span><br><span class=\"line\">    WSADATA wsaData;</span><br><span class=\"line\">    WORD sockVersion = MAKEWORD(minorVer, majorVer);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(WSAStartup(sockVersion, &amp;wsaData) != <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//创建套接字</span></span><br><span class=\"line\">    SOCKET sockClient = socket( AF_INET,SOCK_STREAM, <span class=\"number\">0</span> );</span><br><span class=\"line\">    SOCKADDR_IN addrSrv;</span><br><span class=\"line\">    addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class=\"string\">\"172.28.125.137\"</span>); <span class=\"comment\">//存server端ip ，</span></span><br><span class=\"line\">    addrSrv.sin_family = AF_INET;</span><br><span class=\"line\">    addrSrv.sin_port = htons(<span class=\"number\">4500</span>);</span><br><span class=\"line\">    <span class=\"keyword\">char</span> x[<span class=\"number\">15</span>]=&#123;<span class=\"number\">0</span>&#125;; <span class=\"comment\">//存放命令比如： cd ， dir ，ls ，pwd </span></span><br><span class=\"line\">    <span class=\"comment\">//向服务器发出连接请求</span></span><br><span class=\"line\">    connect( sockClient, (SOCKADDR*)&amp;addrSrv, <span class=\"keyword\">sizeof</span>(SOCKADDR)); <span class=\"comment\">// 连接</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        ZeroMemory(recvBuf,<span class=\"keyword\">sizeof</span>(recvBuf));   <span class=\"comment\">// 清零缓存</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"number\">0</span>!=<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,x))&#123;   <span class=\"comment\">// 等待输入命令</span></span><br><span class=\"line\">          send(sockClient,x,lstrlen(x), <span class=\"number\">0</span> );</span><br><span class=\"line\">                total=recv( sockClient, buffer, <span class=\"number\">4096</span>, <span class=\"number\">0</span> ); <span class=\"comment\">//接收一次，可能收不完哦</span></span><br><span class=\"line\">                lstrcat(recvBuf,buffer); <span class=\"comment\">// 存到总buffer里面</span></span><br><span class=\"line\">                <span class=\"built_in\">memcpy</span>(temp,buffer,<span class=\"built_in\">strstr</span>(buffer,<span class=\"string\">\"#\"</span>)-buffer);<span class=\"comment\">// 从buffer里面取出来数字部分，就是#前的字符串</span></span><br><span class=\"line\">                t = atoi(temp); <span class=\"comment\">// 转成数字</span></span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,t);</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(total&lt;t)&#123; <span class=\"comment\">//如果第一次收到的小于这个数字，继续接收，存到临时buffer</span></span><br><span class=\"line\">                    ZeroMemory(buffer,<span class=\"keyword\">sizeof</span>(buffer));</span><br><span class=\"line\">                    len=recv( sockClient, buffer, <span class=\"number\">4096</span>, <span class=\"number\">0</span> );</span><br><span class=\"line\">                    total=len+total; <span class=\"comment\">// 取到的长度加上第一次的长度</span></span><br><span class=\"line\">                    lstrcat(recvBuf,buffer);<span class=\"comment\">// 这次取得放到总的recvBuf里面</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            <span class=\"comment\">//  printf(\"%d\\n\",atoi(recvBuf));</span></span><br><span class=\"line\">          <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\\n\"</span>,recvBuf);</span><br><span class=\"line\">          <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,<span class=\"built_in\">strlen</span>(recvBuf));</span><br><span class=\"line\">          total =<span class=\"number\">0</span>; <span class=\"comment\">// 以下清零是为了下次while循环准备，</span></span><br><span class=\"line\">          len = <span class=\"number\">0</span>;</span><br><span class=\"line\">          t =<span class=\"number\">0</span>;</span><br><span class=\"line\">          ZeroMemory(temp,<span class=\"keyword\">sizeof</span>(temp));</span><br><span class=\"line\">          ZeroMemory(buffer,<span class=\"keyword\">sizeof</span>(buffer));</span><br><span class=\"line\">         ZeroMemory(recvBuf,<span class=\"keyword\">sizeof</span>(recvBuf));</span><br><span class=\"line\">        &#125;   <span class=\"comment\">//接受数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    closesocket(sockClient);</span><br><span class=\"line\">    WSACleanup();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意：ReadFile是异步或同步模式 ，ReadFileEx只有异步模式</p>\n"},{"layout":"post","title":"html5标签","date":"2016-08-10T03:30:55.000Z","comments":1,"_content":"\n\n# html5标签总结\n\n```html\n\n1. <!---->       注释\n2. <!DOCTYPE>    定义html文本类型\n3. <a>           定义超链接\n4. <abbr>        把一段字符串用缩写表示<abbr title =\"People world\">PW </abbr>\n5. <address>     在article元素内部，表示该文章的作者身份信息\n6. <applet>      定义嵌入的applet ，html5不支持了。请用object代替\n7. <acronym>     html5不支持了，请用<abbr代替哦\n8. <area>        标签定义图像映射内部的区域，图像中部分区域可以点击，就是说有链接的\n9. 两栏式架构   \n    |header---------------------------------------------------------------------------------------|顶部\n    |nav------------------------------------------------------------------------------------------|外链\n    |article---包含<section>-----------------<aside>--------------------------|文章主体--段落或章节-侧边栏\n    |footer---------------------------------------------------------------------------------------|底部\n   以前都是用<div id=\"header\">  <div id =\"nav\">......\n   这样来定义页面的结构，html5新定义了这些，避免div太多混乱.\n\n10. <aside>     可用于文章的侧边栏\n11. <audio>     定义声音链接\n12. <b>         定义粗体字体，强调\n13. <base>      放在head里面，用于页面中的链接的基地址。后面的链接就可以写相对地址了。\n                比如base =www.xxx000.com/img  ,链接一个图片就可以不写全路径，直接src=\"xxx.jpeg\"\n14. <basefont>  html不支持了。设置文档中所有字体的默认颜色，大小\n15. <bdi>       通过脱离父元素的文本设置方向\n16. <bdo>       定义文本方向，指定dir属性是rtl还是ltr\n17. <big>       html不支持了。请用css控制 ，制作更大的文本\n18. <blockquote>摘自另一个源的块引用\n19. <body>      定义文档主体\n20. <br >       换行符\n21. <button>    定义按钮，多种属性，可以是按钮，提交，重置.....\n22. <canvas>    只是承载图形的容器。需要script脚本绘制图形，然后传给canvas标签中\n23. <caption>   放在table后面，定义表格的标题的\n24. <canter>    5不支持了，请用CSS定义居中\n25. <cite>      定义歌曲，影视，书籍等作品的标题\n26. <code>      HTML5 <em> <strong> <dfn> <code> <samp> <kbd> <var> <cite> 等短标签，\n                不推荐使用了。css能有更丰富的表现\n27. <col>       只能在table或者colgroup元素内使用，定义一列或多列表格的属性值。默认\n                至少一列，只有span属性能用了，其他的用css\n28. <colgroup>  里面只能有col元素 H5已经不支持大部分属性了，用于对表格中的列进行组合，\n                并格式化。要区别于col\n29. <command>   可以指定消息事件处理函数。目前只支持ＩＥ\n30. <datalist>  定义选项列表。和input元素配合使用，对于输入框提示作用\n31. <dd>　　　  dl定义列表，dt定义项目,dd对项目进行描述\n32. <del>       定义已经删除的文本。中划线\n33. <details>   描述文档中的某个细节。目前只chrome支持\n34. <div>       定义文档中的分割和部分。以便对块元素进行格式化。\n35. <dl>        定义一个list　配合dt和dd使用。dt是项目。dd是项目具体描述\n36. <em>        被强调的文本。一般配合css使用啦。\n37. <embed>     定义嵌入的内容。属性src=\"\"\n38. <fieldset>  表单中 配合legend标签定义fieldset的标题。相当与通过legend定义的标题话一个框框,\\\n                把许多表单元素圈住。\n39. <figcaptio> 标签定义 figure 元素的标题（caption）。\n40. <figure>    标签规定独立的流内容（图像、图表、照片、代码等等）。定义的内容与主内容无关，              定义的内容不存在时也不对文档有影响\n41. <font>      H5不支持了，请用CSS\n42. <footer>    定义页脚，作者信息等等\n43. <form>      form 元素包含一个或多个表单元素，比如：\n                button\n                input\n                keygen\n                object\n                output\n                select\n                textarea\n\n44. <frame>     H5不支持了。\n45. <frameset>  5也不支持了。\n46. <h1-h6>     定义标题大小\n47. <head>      头部元素，下面是可用在 head 部分的标签：\n                base\n                link\n                meta\n                script\n                style\n                title\n48. <header>    定义文档的页眉\n49. <hgroup>    对标题进行组合 .H5的新标签\n50. <hr>        定义主题变化，表现为一条水平线。\n51. <html>      定义html文档\n52. <i>         斜体。应该使用CSS\n53. <iframe>    创建包含另个文档的内嵌框架。\n54. <img>       必须要的两个属性src和alt（指定图片表述，以备图片无法加载时显示文字）\n55. <input>     定义用户的输入字段，根据不同的 type 属性，输入字段有多种形态。输入字段可以是 文本字段、复选框、密码字段、单选按钮、按钮等等。\n56. <ins>       地难以插入文本，一般和del一起使用。ins定义的文字会加入下划线\n57. <keygen>    类似input,定义表单的密钥生成器字段。H5新标签\n58.  <kbd>      表示文本是键盘输入的\n59. <label>     input标签配合使用。点击label标签定义的文字，相当与自动点击input控件\n60.  <legend>   给一下元素定义标题的：<fieldset>、<figure>、<details>。\n61.  <li>       定义列表项。在<ul>标签和<ol>标签中使用/有序和无序列表\n62. <link>      文档链接外部资源的。大部分用来链接外部样式表css文件\n63.  <map>      定义图像区域映射，name属性和ｉｍｇ的usemap属性关联，包含area元素。\n64. <mark>      突出显示文本。文本背景黄色。\n65. <menu>      标签定义菜单列表。用于排列表单控件\n\n                <menu>\n                <li><input type=\"checkbox\" />Red</li>\n                <li><input type=\"checkbox\" />blue</li>\n                </menu>\n\n67. <meta>      定义页面相关信息。位于head中定义关键词，利于搜索引擎检索：\n\n                <meta name=\"keywords\" content=\"HTML, CSS, XML, XHTML, JavaScript\" />\n                定义对页面的描述：\n                <meta name=\"description\" content=\"w3c html web 技术标准教程。\" />\n                每５秒刷新一次页面：\n                <meta http-equiv=\"refresh\" content=\"5\" />\n\n68. <meter>     定义度量范围，可以用属性,max/min　也可以用文本中定义范围。\n69. <nav>       定义导航栏的链接的部分\n70. <noframes>  H5不支持了，用于不能显示框架的时候提示文本\n71. <noscript>  当不支持脚本时。显示提示的文本\n72. <object>    定义一个嵌入的对象，多媒体等。图像请使用ｉｍｇ代替。大部分html4中的属性H5不支持了。\n73. <ol>        有序列表\n74. <optgroup>  组合选项：\n\n              <select>\n              <optgroup label=\"Swedish Cars\">\n              <option value =\"volvo\">Volvo</option>\n              <option value =\"saab\">Saab</option>\n              </optgroup>\n              <optgroup label=\"German Cars\">\n              <option value =\"mercedes\">Mercedes</option>\n              <option value =\"audi\">Audi</option>\n              </optgroup>\n              </select>\n\n75. <optlon>    定义一个下拉列表选项：\n76.\n              <select>\n              <option value=\"volvo\">Volvo</option>\n              <option value=\"saab\">Saab</option>\n              <option value=\"opel\" selected=\"selected\">Opel</option>\n              <option value=\"audi\">Audi</option>\n              </select>\n\n76. <output>    标签定义不同类型的输出，比如脚本的输出。:\n\n              <form oninput=\"x.value=parseInt(a.value)+parseInt(b.value)\">0<input type=\"range\" id=\"a\" value=\"50\">100+<input type=\"number\" id=\"b\" value=\"50\">\n              =<output name=\"x\" for=\"a b\"></output>\n              </form>\n              计算0-100的随机数加50＝多少，<input type=\"range\" id=\"a\" value=\"50\">表示一个随机滚动条。\n\n77. <p>         段落\n78. <param>     http://www.w3chtml.com/html5/tag/param.html\n79. <pre>       文本原样输出。不会改变格式\n80. <progress>  表示时间函数有关的进度条：\n\n                <progress>\n                <span id=\"objprogress\">85</span>%\n                </progress>\n\n81. <q>         短引用，cite属性指定来源地址，显示是会插入了一个引号，表示后面的内容是引用的内容。\n82. <rp>        指示不支持ruby元素时，显示的文本注释\n83. <ruby>      显示中文注音或者字符。里面用<rt>和<rp>元素包裹。\n84. <s>         增加删除线文本。H5不支持了。请用css，\n85. <samp>      如下标签都是不推荐使用的，请用css样式表，更好。\n    <em>        呈现为被强调的文本。\n    <strong>    定义重要的文本。\n    <dfn>       定义一个定义项目。\n    <code>      定义计算机代码文本。\n    <samp>      定义样本文本。\n    <kbd>       定义键盘文本。它表示文本是从键盘上键入的。它经常用在与计算机相关的文档或手册中。\n    <var>       定义变量。您可以将此标签与 <pre> 及 <code> 标签配合使用。\n    <cite>      定义引用。可使用该标签对参考文献的引用进行定义，比如书籍或杂志的标题。\n86. <script>    javascript脚本置于其中。可链接外部ｊｓ脚本，一般脚本用于图像操作，表单验证和动态内容更改。\n87. <select>    多个option标签置于其中，形成选择下拉列表。\n88. <small>     小型文本，一般作为旁注信息\n89. <source>    多媒体资源标签：\n\n                <audio controls>\n                <source src=\"horse.ogg\" type=\"audio/ogg\">\n                <source src=\"horse.mp3\" type=\"audio/mpeg\">\n                Your browser does not support the audio element.\n                </audio>\n\n90 .<span>      对文档中行内元素进行分组。一遍对单独的一组文本进行样式控制。\n91 .<strike>    加删除线。请用del代替。不建议使用，用css吧\n92. <strong>    加粗文本\n93. <style>     html插入样式信息标签。\n94 .<sub>       定义上标文本，相当于脚注信息\n95. <summary>   <datails>元素的地一个元素，定义details的标题内容。\n96. <sup>       定义上标文本，相当于脚注信息\n97. <table>     定义表格　<tr>定义一行,<th>定义表的第一行头。<td>定义表的内容\n\n                <table border=\"1\">\n                <tr>\n                <th>月份</th>\n                <th>存款</th>\n                </tr>\n                <tr>\n                <td>一月</td>\n                <td>1000 元</td>\n                </tr>\n                </table>\n\n98. <tbody>     表格的正文部分。H５已废除\n99. <td>        表格内容行\n100. <textarea> 文本域，相当于MFC中的编辑框\n101. <tfoot> \t  表格的页脚部分，H5已废除\n102. <th>       表格的头一行\n103. <thead>    表格的头部分，需要有tr行\n104. <time>     定义时间或者日期，目前浏览器还都不支持\n105 .<title>    浏览器显示的标题\n106. <tr>       定义表格中的行\n107. <track>    为视频媒体文件制定外部文本轨道。比如字幕啥的。目前浏览器还不要支持此标签。\n\n                <video width=\"320\" height=\"240\" controls=\"controls\">\n                <source src=\"forrest_gump.mp4\" type=\"video/mp4\" />\n                <source src=\"forrest_gump.ogg\" type=\"video/ogg\" />\n                <track kind=\"subtitles\" src=\"subs_chi.srt\" srclang=\"zh\" label=\"Chinese\">\n                <track kind=\"subtitles\" src=\"subs_eng.srt\" srclang=\"en\" label=\"English\">\n                </video>\n\n108. <tt>       定义打印机文本。目前h5已经不支持了。\n109. <u>        下划线。目前已不支持\n110. <ul>       无需列表。\n111. <var>      定义变量。您可以将此标签与 <pre> 及 <code> 标签配合使用。\n112. <video>    视频标签：\n                <video src=\"movie.ogg\" controls=\"controls\">\n                您的浏览器不支持 video 标签。\n                </video>\n\n113. <wbr>      标志在何处适合加入换行符，避免有些单词加入换行符没拆开，不明意义。\n114. <rt>       在ruby元素中加入汉字的注音：\n\n                <ruby>\n                漢 <rt> ㄏㄢˋ </rt>\n                </ruby>\n\n115. <section>  定义区段。页眉，页脚.......\n116. <label>    定义一个选项组的标注\t\t\n```\n","source":"_posts/web/html5_tags.md","raw":"---\nlayout: post\ntitle: html5标签\ncategory: web\ndate: 2016-8-10 11:30:55\ntags: html5\ncomments: true\n\n---\n\n\n# html5标签总结\n\n```html\n\n1. <!---->       注释\n2. <!DOCTYPE>    定义html文本类型\n3. <a>           定义超链接\n4. <abbr>        把一段字符串用缩写表示<abbr title =\"People world\">PW </abbr>\n5. <address>     在article元素内部，表示该文章的作者身份信息\n6. <applet>      定义嵌入的applet ，html5不支持了。请用object代替\n7. <acronym>     html5不支持了，请用<abbr代替哦\n8. <area>        标签定义图像映射内部的区域，图像中部分区域可以点击，就是说有链接的\n9. 两栏式架构   \n    |header---------------------------------------------------------------------------------------|顶部\n    |nav------------------------------------------------------------------------------------------|外链\n    |article---包含<section>-----------------<aside>--------------------------|文章主体--段落或章节-侧边栏\n    |footer---------------------------------------------------------------------------------------|底部\n   以前都是用<div id=\"header\">  <div id =\"nav\">......\n   这样来定义页面的结构，html5新定义了这些，避免div太多混乱.\n\n10. <aside>     可用于文章的侧边栏\n11. <audio>     定义声音链接\n12. <b>         定义粗体字体，强调\n13. <base>      放在head里面，用于页面中的链接的基地址。后面的链接就可以写相对地址了。\n                比如base =www.xxx000.com/img  ,链接一个图片就可以不写全路径，直接src=\"xxx.jpeg\"\n14. <basefont>  html不支持了。设置文档中所有字体的默认颜色，大小\n15. <bdi>       通过脱离父元素的文本设置方向\n16. <bdo>       定义文本方向，指定dir属性是rtl还是ltr\n17. <big>       html不支持了。请用css控制 ，制作更大的文本\n18. <blockquote>摘自另一个源的块引用\n19. <body>      定义文档主体\n20. <br >       换行符\n21. <button>    定义按钮，多种属性，可以是按钮，提交，重置.....\n22. <canvas>    只是承载图形的容器。需要script脚本绘制图形，然后传给canvas标签中\n23. <caption>   放在table后面，定义表格的标题的\n24. <canter>    5不支持了，请用CSS定义居中\n25. <cite>      定义歌曲，影视，书籍等作品的标题\n26. <code>      HTML5 <em> <strong> <dfn> <code> <samp> <kbd> <var> <cite> 等短标签，\n                不推荐使用了。css能有更丰富的表现\n27. <col>       只能在table或者colgroup元素内使用，定义一列或多列表格的属性值。默认\n                至少一列，只有span属性能用了，其他的用css\n28. <colgroup>  里面只能有col元素 H5已经不支持大部分属性了，用于对表格中的列进行组合，\n                并格式化。要区别于col\n29. <command>   可以指定消息事件处理函数。目前只支持ＩＥ\n30. <datalist>  定义选项列表。和input元素配合使用，对于输入框提示作用\n31. <dd>　　　  dl定义列表，dt定义项目,dd对项目进行描述\n32. <del>       定义已经删除的文本。中划线\n33. <details>   描述文档中的某个细节。目前只chrome支持\n34. <div>       定义文档中的分割和部分。以便对块元素进行格式化。\n35. <dl>        定义一个list　配合dt和dd使用。dt是项目。dd是项目具体描述\n36. <em>        被强调的文本。一般配合css使用啦。\n37. <embed>     定义嵌入的内容。属性src=\"\"\n38. <fieldset>  表单中 配合legend标签定义fieldset的标题。相当与通过legend定义的标题话一个框框,\\\n                把许多表单元素圈住。\n39. <figcaptio> 标签定义 figure 元素的标题（caption）。\n40. <figure>    标签规定独立的流内容（图像、图表、照片、代码等等）。定义的内容与主内容无关，              定义的内容不存在时也不对文档有影响\n41. <font>      H5不支持了，请用CSS\n42. <footer>    定义页脚，作者信息等等\n43. <form>      form 元素包含一个或多个表单元素，比如：\n                button\n                input\n                keygen\n                object\n                output\n                select\n                textarea\n\n44. <frame>     H5不支持了。\n45. <frameset>  5也不支持了。\n46. <h1-h6>     定义标题大小\n47. <head>      头部元素，下面是可用在 head 部分的标签：\n                base\n                link\n                meta\n                script\n                style\n                title\n48. <header>    定义文档的页眉\n49. <hgroup>    对标题进行组合 .H5的新标签\n50. <hr>        定义主题变化，表现为一条水平线。\n51. <html>      定义html文档\n52. <i>         斜体。应该使用CSS\n53. <iframe>    创建包含另个文档的内嵌框架。\n54. <img>       必须要的两个属性src和alt（指定图片表述，以备图片无法加载时显示文字）\n55. <input>     定义用户的输入字段，根据不同的 type 属性，输入字段有多种形态。输入字段可以是 文本字段、复选框、密码字段、单选按钮、按钮等等。\n56. <ins>       地难以插入文本，一般和del一起使用。ins定义的文字会加入下划线\n57. <keygen>    类似input,定义表单的密钥生成器字段。H5新标签\n58.  <kbd>      表示文本是键盘输入的\n59. <label>     input标签配合使用。点击label标签定义的文字，相当与自动点击input控件\n60.  <legend>   给一下元素定义标题的：<fieldset>、<figure>、<details>。\n61.  <li>       定义列表项。在<ul>标签和<ol>标签中使用/有序和无序列表\n62. <link>      文档链接外部资源的。大部分用来链接外部样式表css文件\n63.  <map>      定义图像区域映射，name属性和ｉｍｇ的usemap属性关联，包含area元素。\n64. <mark>      突出显示文本。文本背景黄色。\n65. <menu>      标签定义菜单列表。用于排列表单控件\n\n                <menu>\n                <li><input type=\"checkbox\" />Red</li>\n                <li><input type=\"checkbox\" />blue</li>\n                </menu>\n\n67. <meta>      定义页面相关信息。位于head中定义关键词，利于搜索引擎检索：\n\n                <meta name=\"keywords\" content=\"HTML, CSS, XML, XHTML, JavaScript\" />\n                定义对页面的描述：\n                <meta name=\"description\" content=\"w3c html web 技术标准教程。\" />\n                每５秒刷新一次页面：\n                <meta http-equiv=\"refresh\" content=\"5\" />\n\n68. <meter>     定义度量范围，可以用属性,max/min　也可以用文本中定义范围。\n69. <nav>       定义导航栏的链接的部分\n70. <noframes>  H5不支持了，用于不能显示框架的时候提示文本\n71. <noscript>  当不支持脚本时。显示提示的文本\n72. <object>    定义一个嵌入的对象，多媒体等。图像请使用ｉｍｇ代替。大部分html4中的属性H5不支持了。\n73. <ol>        有序列表\n74. <optgroup>  组合选项：\n\n              <select>\n              <optgroup label=\"Swedish Cars\">\n              <option value =\"volvo\">Volvo</option>\n              <option value =\"saab\">Saab</option>\n              </optgroup>\n              <optgroup label=\"German Cars\">\n              <option value =\"mercedes\">Mercedes</option>\n              <option value =\"audi\">Audi</option>\n              </optgroup>\n              </select>\n\n75. <optlon>    定义一个下拉列表选项：\n76.\n              <select>\n              <option value=\"volvo\">Volvo</option>\n              <option value=\"saab\">Saab</option>\n              <option value=\"opel\" selected=\"selected\">Opel</option>\n              <option value=\"audi\">Audi</option>\n              </select>\n\n76. <output>    标签定义不同类型的输出，比如脚本的输出。:\n\n              <form oninput=\"x.value=parseInt(a.value)+parseInt(b.value)\">0<input type=\"range\" id=\"a\" value=\"50\">100+<input type=\"number\" id=\"b\" value=\"50\">\n              =<output name=\"x\" for=\"a b\"></output>\n              </form>\n              计算0-100的随机数加50＝多少，<input type=\"range\" id=\"a\" value=\"50\">表示一个随机滚动条。\n\n77. <p>         段落\n78. <param>     http://www.w3chtml.com/html5/tag/param.html\n79. <pre>       文本原样输出。不会改变格式\n80. <progress>  表示时间函数有关的进度条：\n\n                <progress>\n                <span id=\"objprogress\">85</span>%\n                </progress>\n\n81. <q>         短引用，cite属性指定来源地址，显示是会插入了一个引号，表示后面的内容是引用的内容。\n82. <rp>        指示不支持ruby元素时，显示的文本注释\n83. <ruby>      显示中文注音或者字符。里面用<rt>和<rp>元素包裹。\n84. <s>         增加删除线文本。H5不支持了。请用css，\n85. <samp>      如下标签都是不推荐使用的，请用css样式表，更好。\n    <em>        呈现为被强调的文本。\n    <strong>    定义重要的文本。\n    <dfn>       定义一个定义项目。\n    <code>      定义计算机代码文本。\n    <samp>      定义样本文本。\n    <kbd>       定义键盘文本。它表示文本是从键盘上键入的。它经常用在与计算机相关的文档或手册中。\n    <var>       定义变量。您可以将此标签与 <pre> 及 <code> 标签配合使用。\n    <cite>      定义引用。可使用该标签对参考文献的引用进行定义，比如书籍或杂志的标题。\n86. <script>    javascript脚本置于其中。可链接外部ｊｓ脚本，一般脚本用于图像操作，表单验证和动态内容更改。\n87. <select>    多个option标签置于其中，形成选择下拉列表。\n88. <small>     小型文本，一般作为旁注信息\n89. <source>    多媒体资源标签：\n\n                <audio controls>\n                <source src=\"horse.ogg\" type=\"audio/ogg\">\n                <source src=\"horse.mp3\" type=\"audio/mpeg\">\n                Your browser does not support the audio element.\n                </audio>\n\n90 .<span>      对文档中行内元素进行分组。一遍对单独的一组文本进行样式控制。\n91 .<strike>    加删除线。请用del代替。不建议使用，用css吧\n92. <strong>    加粗文本\n93. <style>     html插入样式信息标签。\n94 .<sub>       定义上标文本，相当于脚注信息\n95. <summary>   <datails>元素的地一个元素，定义details的标题内容。\n96. <sup>       定义上标文本，相当于脚注信息\n97. <table>     定义表格　<tr>定义一行,<th>定义表的第一行头。<td>定义表的内容\n\n                <table border=\"1\">\n                <tr>\n                <th>月份</th>\n                <th>存款</th>\n                </tr>\n                <tr>\n                <td>一月</td>\n                <td>1000 元</td>\n                </tr>\n                </table>\n\n98. <tbody>     表格的正文部分。H５已废除\n99. <td>        表格内容行\n100. <textarea> 文本域，相当于MFC中的编辑框\n101. <tfoot> \t  表格的页脚部分，H5已废除\n102. <th>       表格的头一行\n103. <thead>    表格的头部分，需要有tr行\n104. <time>     定义时间或者日期，目前浏览器还都不支持\n105 .<title>    浏览器显示的标题\n106. <tr>       定义表格中的行\n107. <track>    为视频媒体文件制定外部文本轨道。比如字幕啥的。目前浏览器还不要支持此标签。\n\n                <video width=\"320\" height=\"240\" controls=\"controls\">\n                <source src=\"forrest_gump.mp4\" type=\"video/mp4\" />\n                <source src=\"forrest_gump.ogg\" type=\"video/ogg\" />\n                <track kind=\"subtitles\" src=\"subs_chi.srt\" srclang=\"zh\" label=\"Chinese\">\n                <track kind=\"subtitles\" src=\"subs_eng.srt\" srclang=\"en\" label=\"English\">\n                </video>\n\n108. <tt>       定义打印机文本。目前h5已经不支持了。\n109. <u>        下划线。目前已不支持\n110. <ul>       无需列表。\n111. <var>      定义变量。您可以将此标签与 <pre> 及 <code> 标签配合使用。\n112. <video>    视频标签：\n                <video src=\"movie.ogg\" controls=\"controls\">\n                您的浏览器不支持 video 标签。\n                </video>\n\n113. <wbr>      标志在何处适合加入换行符，避免有些单词加入换行符没拆开，不明意义。\n114. <rt>       在ruby元素中加入汉字的注音：\n\n                <ruby>\n                漢 <rt> ㄏㄢˋ </rt>\n                </ruby>\n\n115. <section>  定义区段。页眉，页脚.......\n116. <label>    定义一个选项组的标注\t\t\n```\n","slug":"web/html5_tags","published":1,"updated":"2019-01-26T05:00:54.512Z","photos":[],"link":"","_id":"cjrd0e8sn002fkwliosdtn2oq","content":"<h1 id=\"html5标签总结\"><a href=\"#html5标签总结\" class=\"headerlink\" title=\"html5标签总结\"></a>html5标签总结</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1. <span class=\"comment\">&lt;!----&gt;</span>       注释</span><br><span class=\"line\">2. <span class=\"meta\">&lt;!DOCTYPE&gt;</span>    定义html文本类型</span><br><span class=\"line\">3. <span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span>           定义超链接</span><br><span class=\"line\">4. <span class=\"tag\">&lt;<span class=\"name\">abbr</span>&gt;</span>        把一段字符串用缩写表示<span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span> =<span class=\"string\">\"People world\"</span>&gt;</span>PW <span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span></span><br><span class=\"line\">5. <span class=\"tag\">&lt;<span class=\"name\">address</span>&gt;</span>     在article元素内部，表示该文章的作者身份信息</span><br><span class=\"line\">6. <span class=\"tag\">&lt;<span class=\"name\">applet</span>&gt;</span>      定义嵌入的applet ，html5不支持了。请用object代替</span><br><span class=\"line\">7. <span class=\"tag\">&lt;<span class=\"name\">acronym</span>&gt;</span>     html5不支持了，请用<span class=\"tag\">&lt;<span class=\"name\">abbr代替哦</span></span></span><br><span class=\"line\">8. &lt;area&gt;        标签定义图像映射内部的区域，图像中部分区域可以点击，就是说有链接的</span><br><span class=\"line\">9. 两栏式架构   </span><br><span class=\"line\">    |header---------------------------------------------------------------------------------------|顶部</span><br><span class=\"line\">    |nav------------------------------------------------------------------------------------------|外链</span><br><span class=\"line\">    |article---包含<span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span>-----------------<span class=\"tag\">&lt;<span class=\"name\">aside</span>&gt;</span>--------------------------|文章主体--段落或章节-侧边栏</span><br><span class=\"line\">    |footer---------------------------------------------------------------------------------------|底部</span><br><span class=\"line\">   以前都是用<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"header\"</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span> =<span class=\"string\">\"nav\"</span>&gt;</span>......</span><br><span class=\"line\">   这样来定义页面的结构，html5新定义了这些，避免div太多混乱.</span><br><span class=\"line\"></span><br><span class=\"line\">10. <span class=\"tag\">&lt;<span class=\"name\">aside</span>&gt;</span>     可用于文章的侧边栏</span><br><span class=\"line\">11. <span class=\"tag\">&lt;<span class=\"name\">audio</span>&gt;</span>     定义声音链接</span><br><span class=\"line\">12. <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>         定义粗体字体，强调</span><br><span class=\"line\">13. <span class=\"tag\">&lt;<span class=\"name\">base</span>&gt;</span>      放在head里面，用于页面中的链接的基地址。后面的链接就可以写相对地址了。</span><br><span class=\"line\">                比如base =www.xxx000.com/img  ,链接一个图片就可以不写全路径，直接src=\"xxx.jpeg\"</span><br><span class=\"line\">14. <span class=\"tag\">&lt;<span class=\"name\">basefont</span>&gt;</span>  html不支持了。设置文档中所有字体的默认颜色，大小</span><br><span class=\"line\">15. <span class=\"tag\">&lt;<span class=\"name\">bdi</span>&gt;</span>       通过脱离父元素的文本设置方向</span><br><span class=\"line\">16. <span class=\"tag\">&lt;<span class=\"name\">bdo</span>&gt;</span>       定义文本方向，指定dir属性是rtl还是ltr</span><br><span class=\"line\">17. <span class=\"tag\">&lt;<span class=\"name\">big</span>&gt;</span>       html不支持了。请用css控制 ，制作更大的文本</span><br><span class=\"line\">18. <span class=\"tag\">&lt;<span class=\"name\">blockquote</span>&gt;</span>摘自另一个源的块引用</span><br><span class=\"line\">19. <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>      定义文档主体</span><br><span class=\"line\">20. <span class=\"tag\">&lt;<span class=\"name\">br</span> &gt;</span>       换行符</span><br><span class=\"line\">21. <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>    定义按钮，多种属性，可以是按钮，提交，重置.....</span><br><span class=\"line\">22. <span class=\"tag\">&lt;<span class=\"name\">canvas</span>&gt;</span>    只是承载图形的容器。需要script脚本绘制图形，然后传给canvas标签中</span><br><span class=\"line\">23. <span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span>   放在table后面，定义表格的标题的</span><br><span class=\"line\">24. <span class=\"tag\">&lt;<span class=\"name\">canter</span>&gt;</span>    5不支持了，请用CSS定义居中</span><br><span class=\"line\">25. <span class=\"tag\">&lt;<span class=\"name\">cite</span>&gt;</span>      定义歌曲，影视，书籍等作品的标题</span><br><span class=\"line\">26. <span class=\"tag\">&lt;<span class=\"name\">code</span>&gt;</span>      HTML5 <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">dfn</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">code</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">samp</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">kbd</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">var</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">cite</span>&gt;</span> 等短标签，</span><br><span class=\"line\">                不推荐使用了。css能有更丰富的表现</span><br><span class=\"line\">27. <span class=\"tag\">&lt;<span class=\"name\">col</span>&gt;</span>       只能在table或者colgroup元素内使用，定义一列或多列表格的属性值。默认</span><br><span class=\"line\">                至少一列，只有span属性能用了，其他的用css</span><br><span class=\"line\">28. <span class=\"tag\">&lt;<span class=\"name\">colgroup</span>&gt;</span>  里面只能有col元素 H5已经不支持大部分属性了，用于对表格中的列进行组合，</span><br><span class=\"line\">                并格式化。要区别于col</span><br><span class=\"line\">29. <span class=\"tag\">&lt;<span class=\"name\">command</span>&gt;</span>   可以指定消息事件处理函数。目前只支持ＩＥ</span><br><span class=\"line\">30. <span class=\"tag\">&lt;<span class=\"name\">datalist</span>&gt;</span>  定义选项列表。和input元素配合使用，对于输入框提示作用</span><br><span class=\"line\">31. <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>　　　  dl定义列表，dt定义项目,dd对项目进行描述</span><br><span class=\"line\">32. <span class=\"tag\">&lt;<span class=\"name\">del</span>&gt;</span>       定义已经删除的文本。中划线</span><br><span class=\"line\">33. <span class=\"tag\">&lt;<span class=\"name\">details</span>&gt;</span>   描述文档中的某个细节。目前只chrome支持</span><br><span class=\"line\">34. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>       定义文档中的分割和部分。以便对块元素进行格式化。</span><br><span class=\"line\">35. <span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span>        定义一个list　配合dt和dd使用。dt是项目。dd是项目具体描述</span><br><span class=\"line\">36. <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>        被强调的文本。一般配合css使用啦。</span><br><span class=\"line\">37. <span class=\"tag\">&lt;<span class=\"name\">embed</span>&gt;</span>     定义嵌入的内容。属性src=\"\"</span><br><span class=\"line\">38. <span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span>  表单中 配合legend标签定义fieldset的标题。相当与通过legend定义的标题话一个框框,\\</span><br><span class=\"line\">                把许多表单元素圈住。</span><br><span class=\"line\">39. <span class=\"tag\">&lt;<span class=\"name\">figcaptio</span>&gt;</span> 标签定义 figure 元素的标题（caption）。</span><br><span class=\"line\">40. <span class=\"tag\">&lt;<span class=\"name\">figure</span>&gt;</span>    标签规定独立的流内容（图像、图表、照片、代码等等）。定义的内容与主内容无关，              定义的内容不存在时也不对文档有影响</span><br><span class=\"line\">41. <span class=\"tag\">&lt;<span class=\"name\">font</span>&gt;</span>      H5不支持了，请用CSS</span><br><span class=\"line\">42. <span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span>    定义页脚，作者信息等等</span><br><span class=\"line\">43. <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span>      form 元素包含一个或多个表单元素，比如：</span><br><span class=\"line\">                button</span><br><span class=\"line\">                input</span><br><span class=\"line\">                keygen</span><br><span class=\"line\">                object</span><br><span class=\"line\">                output</span><br><span class=\"line\">                select</span><br><span class=\"line\">                textarea</span><br><span class=\"line\"></span><br><span class=\"line\">44. <span class=\"tag\">&lt;<span class=\"name\">frame</span>&gt;</span>     H5不支持了。</span><br><span class=\"line\">45. <span class=\"tag\">&lt;<span class=\"name\">frameset</span>&gt;</span>  5也不支持了。</span><br><span class=\"line\">46. <span class=\"tag\">&lt;<span class=\"name\">h1-h6</span>&gt;</span>     定义标题大小</span><br><span class=\"line\">47. <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span>      头部元素，下面是可用在 head 部分的标签：</span><br><span class=\"line\">                base</span><br><span class=\"line\">                link</span><br><span class=\"line\">                meta</span><br><span class=\"line\">                script</span><br><span class=\"line\">                style</span><br><span class=\"line\">                title</span><br><span class=\"line\">48. <span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span>    定义文档的页眉</span><br><span class=\"line\">49. <span class=\"tag\">&lt;<span class=\"name\">hgroup</span>&gt;</span>    对标题进行组合 .H5的新标签</span><br><span class=\"line\">50. <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span>        定义主题变化，表现为一条水平线。</span><br><span class=\"line\">51. <span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span>      定义html文档</span><br><span class=\"line\">52. <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>         斜体。应该使用CSS</span><br><span class=\"line\">53. <span class=\"tag\">&lt;<span class=\"name\">iframe</span>&gt;</span>    创建包含另个文档的内嵌框架。</span><br><span class=\"line\">54. <span class=\"tag\">&lt;<span class=\"name\">img</span>&gt;</span>       必须要的两个属性src和alt（指定图片表述，以备图片无法加载时显示文字）</span><br><span class=\"line\">55. <span class=\"tag\">&lt;<span class=\"name\">input</span>&gt;</span>     定义用户的输入字段，根据不同的 type 属性，输入字段有多种形态。输入字段可以是 文本字段、复选框、密码字段、单选按钮、按钮等等。</span><br><span class=\"line\">56. <span class=\"tag\">&lt;<span class=\"name\">ins</span>&gt;</span>       地难以插入文本，一般和del一起使用。ins定义的文字会加入下划线</span><br><span class=\"line\">57. <span class=\"tag\">&lt;<span class=\"name\">keygen</span>&gt;</span>    类似input,定义表单的密钥生成器字段。H5新标签</span><br><span class=\"line\">58.  <span class=\"tag\">&lt;<span class=\"name\">kbd</span>&gt;</span>      表示文本是键盘输入的</span><br><span class=\"line\">59. <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>     input标签配合使用。点击label标签定义的文字，相当与自动点击input控件</span><br><span class=\"line\">60.  <span class=\"tag\">&lt;<span class=\"name\">legend</span>&gt;</span>   给一下元素定义标题的：<span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span>、<span class=\"tag\">&lt;<span class=\"name\">figure</span>&gt;</span>、<span class=\"tag\">&lt;<span class=\"name\">details</span>&gt;</span>。</span><br><span class=\"line\">61.  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>       定义列表项。在<span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span>标签和<span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span>标签中使用/有序和无序列表</span><br><span class=\"line\">62. <span class=\"tag\">&lt;<span class=\"name\">link</span>&gt;</span>      文档链接外部资源的。大部分用来链接外部样式表css文件</span><br><span class=\"line\">63.  <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span>      定义图像区域映射，name属性和ｉｍｇ的usemap属性关联，包含area元素。</span><br><span class=\"line\">64. <span class=\"tag\">&lt;<span class=\"name\">mark</span>&gt;</span>      突出显示文本。文本背景黄色。</span><br><span class=\"line\">65. <span class=\"tag\">&lt;<span class=\"name\">menu</span>&gt;</span>      标签定义菜单列表。用于排列表单控件</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">menu</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> /&gt;</span>Red<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> /&gt;</span>blue<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">menu</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">67. <span class=\"tag\">&lt;<span class=\"name\">meta</span>&gt;</span>      定义页面相关信息。位于head中定义关键词，利于搜索引擎检索：</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"HTML, CSS, XML, XHTML, JavaScript\"</span> /&gt;</span></span><br><span class=\"line\">                定义对页面的描述：</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"w3c html web 技术标准教程。\"</span> /&gt;</span></span><br><span class=\"line\">                每５秒刷新一次页面：</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"refresh\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"5\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">68. <span class=\"tag\">&lt;<span class=\"name\">meter</span>&gt;</span>     定义度量范围，可以用属性,max/min　也可以用文本中定义范围。</span><br><span class=\"line\">69. <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span>       定义导航栏的链接的部分</span><br><span class=\"line\">70. <span class=\"tag\">&lt;<span class=\"name\">noframes</span>&gt;</span>  H5不支持了，用于不能显示框架的时候提示文本</span><br><span class=\"line\">71. <span class=\"tag\">&lt;<span class=\"name\">noscript</span>&gt;</span>  当不支持脚本时。显示提示的文本</span><br><span class=\"line\">72. <span class=\"tag\">&lt;<span class=\"name\">object</span>&gt;</span>    定义一个嵌入的对象，多媒体等。图像请使用ｉｍｇ代替。大部分html4中的属性H5不支持了。</span><br><span class=\"line\">73. <span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span>        有序列表</span><br><span class=\"line\">74. <span class=\"tag\">&lt;<span class=\"name\">optgroup</span>&gt;</span>  组合选项：</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">optgroup</span> <span class=\"attr\">label</span>=<span class=\"string\">\"Swedish Cars\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"volvo\"</span>&gt;</span>Volvo<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"saab\"</span>&gt;</span>Saab<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">optgroup</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">optgroup</span> <span class=\"attr\">label</span>=<span class=\"string\">\"German Cars\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"mercedes\"</span>&gt;</span>Mercedes<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"audi\"</span>&gt;</span>Audi<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">optgroup</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">75. <span class=\"tag\">&lt;<span class=\"name\">optlon</span>&gt;</span>    定义一个下拉列表选项：</span><br><span class=\"line\">76.</span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"volvo\"</span>&gt;</span>Volvo<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"saab\"</span>&gt;</span>Saab<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"opel\"</span> <span class=\"attr\">selected</span>=<span class=\"string\">\"selected\"</span>&gt;</span>Opel<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"audi\"</span>&gt;</span>Audi<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">76. <span class=\"tag\">&lt;<span class=\"name\">output</span>&gt;</span>    标签定义不同类型的输出，比如脚本的输出。:</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">oninput</span>=<span class=\"string\">\"x.value=parseInt(a.value)+parseInt(b.value)\"</span>&gt;</span>0<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"a\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"50\"</span>&gt;</span>100+<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"number\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"b\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"50\"</span>&gt;</span></span><br><span class=\"line\">              =<span class=\"tag\">&lt;<span class=\"name\">output</span> <span class=\"attr\">name</span>=<span class=\"string\">\"x\"</span> <span class=\"attr\">for</span>=<span class=\"string\">\"a b\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">output</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">              计算0-100的随机数加50＝多少，<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"a\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"50\"</span>&gt;</span>表示一个随机滚动条。</span><br><span class=\"line\"></span><br><span class=\"line\">77. <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>         段落</span><br><span class=\"line\">78. <span class=\"tag\">&lt;<span class=\"name\">param</span>&gt;</span>     http://www.w3chtml.com/html5/tag/param.html</span><br><span class=\"line\">79. <span class=\"tag\">&lt;<span class=\"name\">pre</span>&gt;</span>       文本原样输出。不会改变格式</span><br><span class=\"line\">80. <span class=\"tag\">&lt;<span class=\"name\">progress</span>&gt;</span>  表示时间函数有关的进度条：</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">progress</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"objprogress\"</span>&gt;</span>85<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>%</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">progress</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">81. <span class=\"tag\">&lt;<span class=\"name\">q</span>&gt;</span>         短引用，cite属性指定来源地址，显示是会插入了一个引号，表示后面的内容是引用的内容。</span><br><span class=\"line\">82. <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>        指示不支持ruby元素时，显示的文本注释</span><br><span class=\"line\">83. <span class=\"tag\">&lt;<span class=\"name\">ruby</span>&gt;</span>      显示中文注音或者字符。里面用<span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>和<span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>元素包裹。</span><br><span class=\"line\">84. <span class=\"tag\">&lt;<span class=\"name\">s</span>&gt;</span>         增加删除线文本。H5不支持了。请用css，</span><br><span class=\"line\">85. <span class=\"tag\">&lt;<span class=\"name\">samp</span>&gt;</span>      如下标签都是不推荐使用的，请用css样式表，更好。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>        呈现为被强调的文本。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>    定义重要的文本。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dfn</span>&gt;</span>       定义一个定义项目。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">code</span>&gt;</span>      定义计算机代码文本。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">samp</span>&gt;</span>      定义样本文本。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">kbd</span>&gt;</span>       定义键盘文本。它表示文本是从键盘上键入的。它经常用在与计算机相关的文档或手册中。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">var</span>&gt;</span>       定义变量。您可以将此标签与 <span class=\"tag\">&lt;<span class=\"name\">pre</span>&gt;</span> 及 <span class=\"tag\">&lt;<span class=\"name\">code</span>&gt;</span> 标签配合使用。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cite</span>&gt;</span>      定义引用。可使用该标签对参考文献的引用进行定义，比如书籍或杂志的标题。</span><br><span class=\"line\">86. <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">    javascript脚本置于其中。可链接外部ｊｓ脚本，一般脚本用于图像操作，表单验证和动态内容更改。</span></span><br><span class=\"line\"><span class=\"xml\">87. <span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span>    多个option标签置于其中，形成选择下拉列表。</span></span><br><span class=\"line\"><span class=\"xml\">88. <span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span>     小型文本，一般作为旁注信息</span></span><br><span class=\"line\"><span class=\"xml\">89. <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>    多媒体资源标签：</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">controls</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"horse.ogg\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"audio/ogg\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"horse.mp3\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"audio/mpeg\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\">                Your browser does not support the audio element.</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">90 .<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>      对文档中行内元素进行分组。一遍对单独的一组文本进行样式控制。</span></span><br><span class=\"line\"><span class=\"xml\">91 .<span class=\"tag\">&lt;<span class=\"name\">strike</span>&gt;</span>    加删除线。请用del代替。不建议使用，用css吧</span></span><br><span class=\"line\"><span class=\"xml\">92. <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>    加粗文本</span></span><br><span class=\"line\"><span class=\"xml\">93. <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\">     html插入样式信息标签。</span></span></span><br><span class=\"line\"><span class=\"xml\">94 .<span class=\"tag\">&lt;<span class=\"name\">sub</span>&gt;</span>       定义上标文本，相当于脚注信息</span></span><br><span class=\"line\"><span class=\"xml\">95. <span class=\"tag\">&lt;<span class=\"name\">summary</span>&gt;</span>   <span class=\"tag\">&lt;<span class=\"name\">datails</span>&gt;</span>元素的地一个元素，定义details的标题内容。</span></span><br><span class=\"line\"><span class=\"xml\">96. <span class=\"tag\">&lt;<span class=\"name\">sup</span>&gt;</span>       定义上标文本，相当于脚注信息</span></span><br><span class=\"line\"><span class=\"xml\">97. <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span>     定义表格　<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span>定义一行,<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>定义表的第一行头。<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>定义表的内容</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>月份<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>存款<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>一月<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1000 元<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">98. <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span>     表格的正文部分。H５已废除</span></span><br><span class=\"line\"><span class=\"xml\">99. <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>        表格内容行</span></span><br><span class=\"line\"><span class=\"xml\">100. <span class=\"tag\">&lt;<span class=\"name\">textarea</span>&gt;</span> 文本域，相当于MFC中的编辑框</span></span><br><span class=\"line\"><span class=\"xml\">101. <span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span> \t  表格的页脚部分，H5已废除</span></span><br><span class=\"line\"><span class=\"xml\">102. <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>       表格的头一行</span></span><br><span class=\"line\"><span class=\"xml\">103. <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span>    表格的头部分，需要有tr行</span></span><br><span class=\"line\"><span class=\"xml\">104. <span class=\"tag\">&lt;<span class=\"name\">time</span>&gt;</span>     定义时间或者日期，目前浏览器还都不支持</span></span><br><span class=\"line\"><span class=\"xml\">105 .<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>    浏览器显示的标题</span></span><br><span class=\"line\"><span class=\"xml\">106. <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span>       定义表格中的行</span></span><br><span class=\"line\"><span class=\"xml\">107. <span class=\"tag\">&lt;<span class=\"name\">track</span>&gt;</span>    为视频媒体文件制定外部文本轨道。比如字幕啥的。目前浏览器还不要支持此标签。</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">width</span>=<span class=\"string\">\"320\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"240\"</span> <span class=\"attr\">controls</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"forrest_gump.mp4\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/mp4\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"forrest_gump.ogg\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/ogg\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">track</span> <span class=\"attr\">kind</span>=<span class=\"string\">\"subtitles\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"subs_chi.srt\"</span> <span class=\"attr\">srclang</span>=<span class=\"string\">\"zh\"</span> <span class=\"attr\">label</span>=<span class=\"string\">\"Chinese\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">track</span> <span class=\"attr\">kind</span>=<span class=\"string\">\"subtitles\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"subs_eng.srt\"</span> <span class=\"attr\">srclang</span>=<span class=\"string\">\"en\"</span> <span class=\"attr\">label</span>=<span class=\"string\">\"English\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">108. <span class=\"tag\">&lt;<span class=\"name\">tt</span>&gt;</span>       定义打印机文本。目前h5已经不支持了。</span></span><br><span class=\"line\"><span class=\"xml\">109. <span class=\"tag\">&lt;<span class=\"name\">u</span>&gt;</span>        下划线。目前已不支持</span></span><br><span class=\"line\"><span class=\"xml\">110. <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span>       无需列表。</span></span><br><span class=\"line\"><span class=\"xml\">111. <span class=\"tag\">&lt;<span class=\"name\">var</span>&gt;</span>      定义变量。您可以将此标签与 <span class=\"tag\">&lt;<span class=\"name\">pre</span>&gt;</span> 及 <span class=\"tag\">&lt;<span class=\"name\">code</span>&gt;</span> 标签配合使用。</span></span><br><span class=\"line\"><span class=\"xml\">112. <span class=\"tag\">&lt;<span class=\"name\">video</span>&gt;</span>    视频标签：</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.ogg\"</span> <span class=\"attr\">controls</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\">                您的浏览器不支持 video 标签。</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">113. <span class=\"tag\">&lt;<span class=\"name\">wbr</span>&gt;</span>      标志在何处适合加入换行符，避免有些单词加入换行符没拆开，不明意义。</span></span><br><span class=\"line\"><span class=\"xml\">114. <span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>       在ruby元素中加入汉字的注音：</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">ruby</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                漢 <span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span> ㄏㄢˋ <span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">ruby</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">115. <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span>  定义区段。页眉，页脚.......</span></span><br><span class=\"line\"><span class=\"xml\">116. <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>    定义一个选项组的标注</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"html5标签总结\"><a href=\"#html5标签总结\" class=\"headerlink\" title=\"html5标签总结\"></a>html5标签总结</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1. <span class=\"comment\">&lt;!----&gt;</span>       注释</span><br><span class=\"line\">2. <span class=\"meta\">&lt;!DOCTYPE&gt;</span>    定义html文本类型</span><br><span class=\"line\">3. <span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span>           定义超链接</span><br><span class=\"line\">4. <span class=\"tag\">&lt;<span class=\"name\">abbr</span>&gt;</span>        把一段字符串用缩写表示<span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span> =<span class=\"string\">\"People world\"</span>&gt;</span>PW <span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span></span><br><span class=\"line\">5. <span class=\"tag\">&lt;<span class=\"name\">address</span>&gt;</span>     在article元素内部，表示该文章的作者身份信息</span><br><span class=\"line\">6. <span class=\"tag\">&lt;<span class=\"name\">applet</span>&gt;</span>      定义嵌入的applet ，html5不支持了。请用object代替</span><br><span class=\"line\">7. <span class=\"tag\">&lt;<span class=\"name\">acronym</span>&gt;</span>     html5不支持了，请用<span class=\"tag\">&lt;<span class=\"name\">abbr代替哦</span></span></span><br><span class=\"line\">8. &lt;area&gt;        标签定义图像映射内部的区域，图像中部分区域可以点击，就是说有链接的</span><br><span class=\"line\">9. 两栏式架构   </span><br><span class=\"line\">    |header---------------------------------------------------------------------------------------|顶部</span><br><span class=\"line\">    |nav------------------------------------------------------------------------------------------|外链</span><br><span class=\"line\">    |article---包含<span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span>-----------------<span class=\"tag\">&lt;<span class=\"name\">aside</span>&gt;</span>--------------------------|文章主体--段落或章节-侧边栏</span><br><span class=\"line\">    |footer---------------------------------------------------------------------------------------|底部</span><br><span class=\"line\">   以前都是用<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"header\"</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span> =<span class=\"string\">\"nav\"</span>&gt;</span>......</span><br><span class=\"line\">   这样来定义页面的结构，html5新定义了这些，避免div太多混乱.</span><br><span class=\"line\"></span><br><span class=\"line\">10. <span class=\"tag\">&lt;<span class=\"name\">aside</span>&gt;</span>     可用于文章的侧边栏</span><br><span class=\"line\">11. <span class=\"tag\">&lt;<span class=\"name\">audio</span>&gt;</span>     定义声音链接</span><br><span class=\"line\">12. <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>         定义粗体字体，强调</span><br><span class=\"line\">13. <span class=\"tag\">&lt;<span class=\"name\">base</span>&gt;</span>      放在head里面，用于页面中的链接的基地址。后面的链接就可以写相对地址了。</span><br><span class=\"line\">                比如base =www.xxx000.com/img  ,链接一个图片就可以不写全路径，直接src=\"xxx.jpeg\"</span><br><span class=\"line\">14. <span class=\"tag\">&lt;<span class=\"name\">basefont</span>&gt;</span>  html不支持了。设置文档中所有字体的默认颜色，大小</span><br><span class=\"line\">15. <span class=\"tag\">&lt;<span class=\"name\">bdi</span>&gt;</span>       通过脱离父元素的文本设置方向</span><br><span class=\"line\">16. <span class=\"tag\">&lt;<span class=\"name\">bdo</span>&gt;</span>       定义文本方向，指定dir属性是rtl还是ltr</span><br><span class=\"line\">17. <span class=\"tag\">&lt;<span class=\"name\">big</span>&gt;</span>       html不支持了。请用css控制 ，制作更大的文本</span><br><span class=\"line\">18. <span class=\"tag\">&lt;<span class=\"name\">blockquote</span>&gt;</span>摘自另一个源的块引用</span><br><span class=\"line\">19. <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>      定义文档主体</span><br><span class=\"line\">20. <span class=\"tag\">&lt;<span class=\"name\">br</span> &gt;</span>       换行符</span><br><span class=\"line\">21. <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>    定义按钮，多种属性，可以是按钮，提交，重置.....</span><br><span class=\"line\">22. <span class=\"tag\">&lt;<span class=\"name\">canvas</span>&gt;</span>    只是承载图形的容器。需要script脚本绘制图形，然后传给canvas标签中</span><br><span class=\"line\">23. <span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span>   放在table后面，定义表格的标题的</span><br><span class=\"line\">24. <span class=\"tag\">&lt;<span class=\"name\">canter</span>&gt;</span>    5不支持了，请用CSS定义居中</span><br><span class=\"line\">25. <span class=\"tag\">&lt;<span class=\"name\">cite</span>&gt;</span>      定义歌曲，影视，书籍等作品的标题</span><br><span class=\"line\">26. <span class=\"tag\">&lt;<span class=\"name\">code</span>&gt;</span>      HTML5 <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">dfn</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">code</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">samp</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">kbd</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">var</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">cite</span>&gt;</span> 等短标签，</span><br><span class=\"line\">                不推荐使用了。css能有更丰富的表现</span><br><span class=\"line\">27. <span class=\"tag\">&lt;<span class=\"name\">col</span>&gt;</span>       只能在table或者colgroup元素内使用，定义一列或多列表格的属性值。默认</span><br><span class=\"line\">                至少一列，只有span属性能用了，其他的用css</span><br><span class=\"line\">28. <span class=\"tag\">&lt;<span class=\"name\">colgroup</span>&gt;</span>  里面只能有col元素 H5已经不支持大部分属性了，用于对表格中的列进行组合，</span><br><span class=\"line\">                并格式化。要区别于col</span><br><span class=\"line\">29. <span class=\"tag\">&lt;<span class=\"name\">command</span>&gt;</span>   可以指定消息事件处理函数。目前只支持ＩＥ</span><br><span class=\"line\">30. <span class=\"tag\">&lt;<span class=\"name\">datalist</span>&gt;</span>  定义选项列表。和input元素配合使用，对于输入框提示作用</span><br><span class=\"line\">31. <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>　　　  dl定义列表，dt定义项目,dd对项目进行描述</span><br><span class=\"line\">32. <span class=\"tag\">&lt;<span class=\"name\">del</span>&gt;</span>       定义已经删除的文本。中划线</span><br><span class=\"line\">33. <span class=\"tag\">&lt;<span class=\"name\">details</span>&gt;</span>   描述文档中的某个细节。目前只chrome支持</span><br><span class=\"line\">34. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>       定义文档中的分割和部分。以便对块元素进行格式化。</span><br><span class=\"line\">35. <span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span>        定义一个list　配合dt和dd使用。dt是项目。dd是项目具体描述</span><br><span class=\"line\">36. <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>        被强调的文本。一般配合css使用啦。</span><br><span class=\"line\">37. <span class=\"tag\">&lt;<span class=\"name\">embed</span>&gt;</span>     定义嵌入的内容。属性src=\"\"</span><br><span class=\"line\">38. <span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span>  表单中 配合legend标签定义fieldset的标题。相当与通过legend定义的标题话一个框框,\\</span><br><span class=\"line\">                把许多表单元素圈住。</span><br><span class=\"line\">39. <span class=\"tag\">&lt;<span class=\"name\">figcaptio</span>&gt;</span> 标签定义 figure 元素的标题（caption）。</span><br><span class=\"line\">40. <span class=\"tag\">&lt;<span class=\"name\">figure</span>&gt;</span>    标签规定独立的流内容（图像、图表、照片、代码等等）。定义的内容与主内容无关，              定义的内容不存在时也不对文档有影响</span><br><span class=\"line\">41. <span class=\"tag\">&lt;<span class=\"name\">font</span>&gt;</span>      H5不支持了，请用CSS</span><br><span class=\"line\">42. <span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span>    定义页脚，作者信息等等</span><br><span class=\"line\">43. <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span>      form 元素包含一个或多个表单元素，比如：</span><br><span class=\"line\">                button</span><br><span class=\"line\">                input</span><br><span class=\"line\">                keygen</span><br><span class=\"line\">                object</span><br><span class=\"line\">                output</span><br><span class=\"line\">                select</span><br><span class=\"line\">                textarea</span><br><span class=\"line\"></span><br><span class=\"line\">44. <span class=\"tag\">&lt;<span class=\"name\">frame</span>&gt;</span>     H5不支持了。</span><br><span class=\"line\">45. <span class=\"tag\">&lt;<span class=\"name\">frameset</span>&gt;</span>  5也不支持了。</span><br><span class=\"line\">46. <span class=\"tag\">&lt;<span class=\"name\">h1-h6</span>&gt;</span>     定义标题大小</span><br><span class=\"line\">47. <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span>      头部元素，下面是可用在 head 部分的标签：</span><br><span class=\"line\">                base</span><br><span class=\"line\">                link</span><br><span class=\"line\">                meta</span><br><span class=\"line\">                script</span><br><span class=\"line\">                style</span><br><span class=\"line\">                title</span><br><span class=\"line\">48. <span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span>    定义文档的页眉</span><br><span class=\"line\">49. <span class=\"tag\">&lt;<span class=\"name\">hgroup</span>&gt;</span>    对标题进行组合 .H5的新标签</span><br><span class=\"line\">50. <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span>        定义主题变化，表现为一条水平线。</span><br><span class=\"line\">51. <span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span>      定义html文档</span><br><span class=\"line\">52. <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>         斜体。应该使用CSS</span><br><span class=\"line\">53. <span class=\"tag\">&lt;<span class=\"name\">iframe</span>&gt;</span>    创建包含另个文档的内嵌框架。</span><br><span class=\"line\">54. <span class=\"tag\">&lt;<span class=\"name\">img</span>&gt;</span>       必须要的两个属性src和alt（指定图片表述，以备图片无法加载时显示文字）</span><br><span class=\"line\">55. <span class=\"tag\">&lt;<span class=\"name\">input</span>&gt;</span>     定义用户的输入字段，根据不同的 type 属性，输入字段有多种形态。输入字段可以是 文本字段、复选框、密码字段、单选按钮、按钮等等。</span><br><span class=\"line\">56. <span class=\"tag\">&lt;<span class=\"name\">ins</span>&gt;</span>       地难以插入文本，一般和del一起使用。ins定义的文字会加入下划线</span><br><span class=\"line\">57. <span class=\"tag\">&lt;<span class=\"name\">keygen</span>&gt;</span>    类似input,定义表单的密钥生成器字段。H5新标签</span><br><span class=\"line\">58.  <span class=\"tag\">&lt;<span class=\"name\">kbd</span>&gt;</span>      表示文本是键盘输入的</span><br><span class=\"line\">59. <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>     input标签配合使用。点击label标签定义的文字，相当与自动点击input控件</span><br><span class=\"line\">60.  <span class=\"tag\">&lt;<span class=\"name\">legend</span>&gt;</span>   给一下元素定义标题的：<span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span>、<span class=\"tag\">&lt;<span class=\"name\">figure</span>&gt;</span>、<span class=\"tag\">&lt;<span class=\"name\">details</span>&gt;</span>。</span><br><span class=\"line\">61.  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>       定义列表项。在<span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span>标签和<span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span>标签中使用/有序和无序列表</span><br><span class=\"line\">62. <span class=\"tag\">&lt;<span class=\"name\">link</span>&gt;</span>      文档链接外部资源的。大部分用来链接外部样式表css文件</span><br><span class=\"line\">63.  <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span>      定义图像区域映射，name属性和ｉｍｇ的usemap属性关联，包含area元素。</span><br><span class=\"line\">64. <span class=\"tag\">&lt;<span class=\"name\">mark</span>&gt;</span>      突出显示文本。文本背景黄色。</span><br><span class=\"line\">65. <span class=\"tag\">&lt;<span class=\"name\">menu</span>&gt;</span>      标签定义菜单列表。用于排列表单控件</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">menu</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> /&gt;</span>Red<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> /&gt;</span>blue<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">menu</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">67. <span class=\"tag\">&lt;<span class=\"name\">meta</span>&gt;</span>      定义页面相关信息。位于head中定义关键词，利于搜索引擎检索：</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"HTML, CSS, XML, XHTML, JavaScript\"</span> /&gt;</span></span><br><span class=\"line\">                定义对页面的描述：</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"w3c html web 技术标准教程。\"</span> /&gt;</span></span><br><span class=\"line\">                每５秒刷新一次页面：</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"refresh\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"5\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">68. <span class=\"tag\">&lt;<span class=\"name\">meter</span>&gt;</span>     定义度量范围，可以用属性,max/min　也可以用文本中定义范围。</span><br><span class=\"line\">69. <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span>       定义导航栏的链接的部分</span><br><span class=\"line\">70. <span class=\"tag\">&lt;<span class=\"name\">noframes</span>&gt;</span>  H5不支持了，用于不能显示框架的时候提示文本</span><br><span class=\"line\">71. <span class=\"tag\">&lt;<span class=\"name\">noscript</span>&gt;</span>  当不支持脚本时。显示提示的文本</span><br><span class=\"line\">72. <span class=\"tag\">&lt;<span class=\"name\">object</span>&gt;</span>    定义一个嵌入的对象，多媒体等。图像请使用ｉｍｇ代替。大部分html4中的属性H5不支持了。</span><br><span class=\"line\">73. <span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span>        有序列表</span><br><span class=\"line\">74. <span class=\"tag\">&lt;<span class=\"name\">optgroup</span>&gt;</span>  组合选项：</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">optgroup</span> <span class=\"attr\">label</span>=<span class=\"string\">\"Swedish Cars\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"volvo\"</span>&gt;</span>Volvo<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"saab\"</span>&gt;</span>Saab<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">optgroup</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">optgroup</span> <span class=\"attr\">label</span>=<span class=\"string\">\"German Cars\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"mercedes\"</span>&gt;</span>Mercedes<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"audi\"</span>&gt;</span>Audi<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">optgroup</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">75. <span class=\"tag\">&lt;<span class=\"name\">optlon</span>&gt;</span>    定义一个下拉列表选项：</span><br><span class=\"line\">76.</span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"volvo\"</span>&gt;</span>Volvo<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"saab\"</span>&gt;</span>Saab<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"opel\"</span> <span class=\"attr\">selected</span>=<span class=\"string\">\"selected\"</span>&gt;</span>Opel<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"audi\"</span>&gt;</span>Audi<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">76. <span class=\"tag\">&lt;<span class=\"name\">output</span>&gt;</span>    标签定义不同类型的输出，比如脚本的输出。:</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">oninput</span>=<span class=\"string\">\"x.value=parseInt(a.value)+parseInt(b.value)\"</span>&gt;</span>0<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"a\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"50\"</span>&gt;</span>100+<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"number\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"b\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"50\"</span>&gt;</span></span><br><span class=\"line\">              =<span class=\"tag\">&lt;<span class=\"name\">output</span> <span class=\"attr\">name</span>=<span class=\"string\">\"x\"</span> <span class=\"attr\">for</span>=<span class=\"string\">\"a b\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">output</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">              计算0-100的随机数加50＝多少，<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"a\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"50\"</span>&gt;</span>表示一个随机滚动条。</span><br><span class=\"line\"></span><br><span class=\"line\">77. <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>         段落</span><br><span class=\"line\">78. <span class=\"tag\">&lt;<span class=\"name\">param</span>&gt;</span>     http://www.w3chtml.com/html5/tag/param.html</span><br><span class=\"line\">79. <span class=\"tag\">&lt;<span class=\"name\">pre</span>&gt;</span>       文本原样输出。不会改变格式</span><br><span class=\"line\">80. <span class=\"tag\">&lt;<span class=\"name\">progress</span>&gt;</span>  表示时间函数有关的进度条：</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">progress</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"objprogress\"</span>&gt;</span>85<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>%</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">progress</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">81. <span class=\"tag\">&lt;<span class=\"name\">q</span>&gt;</span>         短引用，cite属性指定来源地址，显示是会插入了一个引号，表示后面的内容是引用的内容。</span><br><span class=\"line\">82. <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>        指示不支持ruby元素时，显示的文本注释</span><br><span class=\"line\">83. <span class=\"tag\">&lt;<span class=\"name\">ruby</span>&gt;</span>      显示中文注音或者字符。里面用<span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>和<span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>元素包裹。</span><br><span class=\"line\">84. <span class=\"tag\">&lt;<span class=\"name\">s</span>&gt;</span>         增加删除线文本。H5不支持了。请用css，</span><br><span class=\"line\">85. <span class=\"tag\">&lt;<span class=\"name\">samp</span>&gt;</span>      如下标签都是不推荐使用的，请用css样式表，更好。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>        呈现为被强调的文本。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>    定义重要的文本。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dfn</span>&gt;</span>       定义一个定义项目。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">code</span>&gt;</span>      定义计算机代码文本。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">samp</span>&gt;</span>      定义样本文本。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">kbd</span>&gt;</span>       定义键盘文本。它表示文本是从键盘上键入的。它经常用在与计算机相关的文档或手册中。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">var</span>&gt;</span>       定义变量。您可以将此标签与 <span class=\"tag\">&lt;<span class=\"name\">pre</span>&gt;</span> 及 <span class=\"tag\">&lt;<span class=\"name\">code</span>&gt;</span> 标签配合使用。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cite</span>&gt;</span>      定义引用。可使用该标签对参考文献的引用进行定义，比如书籍或杂志的标题。</span><br><span class=\"line\">86. <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">    javascript脚本置于其中。可链接外部ｊｓ脚本，一般脚本用于图像操作，表单验证和动态内容更改。</span></span><br><span class=\"line\"><span class=\"xml\">87. <span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span>    多个option标签置于其中，形成选择下拉列表。</span></span><br><span class=\"line\"><span class=\"xml\">88. <span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span>     小型文本，一般作为旁注信息</span></span><br><span class=\"line\"><span class=\"xml\">89. <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>    多媒体资源标签：</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">controls</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"horse.ogg\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"audio/ogg\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"horse.mp3\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"audio/mpeg\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\">                Your browser does not support the audio element.</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">90 .<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>      对文档中行内元素进行分组。一遍对单独的一组文本进行样式控制。</span></span><br><span class=\"line\"><span class=\"xml\">91 .<span class=\"tag\">&lt;<span class=\"name\">strike</span>&gt;</span>    加删除线。请用del代替。不建议使用，用css吧</span></span><br><span class=\"line\"><span class=\"xml\">92. <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>    加粗文本</span></span><br><span class=\"line\"><span class=\"xml\">93. <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\">     html插入样式信息标签。</span></span></span><br><span class=\"line\"><span class=\"xml\">94 .<span class=\"tag\">&lt;<span class=\"name\">sub</span>&gt;</span>       定义上标文本，相当于脚注信息</span></span><br><span class=\"line\"><span class=\"xml\">95. <span class=\"tag\">&lt;<span class=\"name\">summary</span>&gt;</span>   <span class=\"tag\">&lt;<span class=\"name\">datails</span>&gt;</span>元素的地一个元素，定义details的标题内容。</span></span><br><span class=\"line\"><span class=\"xml\">96. <span class=\"tag\">&lt;<span class=\"name\">sup</span>&gt;</span>       定义上标文本，相当于脚注信息</span></span><br><span class=\"line\"><span class=\"xml\">97. <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span>     定义表格　<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span>定义一行,<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>定义表的第一行头。<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>定义表的内容</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>月份<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>存款<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>一月<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1000 元<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">98. <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span>     表格的正文部分。H５已废除</span></span><br><span class=\"line\"><span class=\"xml\">99. <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>        表格内容行</span></span><br><span class=\"line\"><span class=\"xml\">100. <span class=\"tag\">&lt;<span class=\"name\">textarea</span>&gt;</span> 文本域，相当于MFC中的编辑框</span></span><br><span class=\"line\"><span class=\"xml\">101. <span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span> \t  表格的页脚部分，H5已废除</span></span><br><span class=\"line\"><span class=\"xml\">102. <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>       表格的头一行</span></span><br><span class=\"line\"><span class=\"xml\">103. <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span>    表格的头部分，需要有tr行</span></span><br><span class=\"line\"><span class=\"xml\">104. <span class=\"tag\">&lt;<span class=\"name\">time</span>&gt;</span>     定义时间或者日期，目前浏览器还都不支持</span></span><br><span class=\"line\"><span class=\"xml\">105 .<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>    浏览器显示的标题</span></span><br><span class=\"line\"><span class=\"xml\">106. <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span>       定义表格中的行</span></span><br><span class=\"line\"><span class=\"xml\">107. <span class=\"tag\">&lt;<span class=\"name\">track</span>&gt;</span>    为视频媒体文件制定外部文本轨道。比如字幕啥的。目前浏览器还不要支持此标签。</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">width</span>=<span class=\"string\">\"320\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"240\"</span> <span class=\"attr\">controls</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"forrest_gump.mp4\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/mp4\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"forrest_gump.ogg\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/ogg\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">track</span> <span class=\"attr\">kind</span>=<span class=\"string\">\"subtitles\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"subs_chi.srt\"</span> <span class=\"attr\">srclang</span>=<span class=\"string\">\"zh\"</span> <span class=\"attr\">label</span>=<span class=\"string\">\"Chinese\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">track</span> <span class=\"attr\">kind</span>=<span class=\"string\">\"subtitles\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"subs_eng.srt\"</span> <span class=\"attr\">srclang</span>=<span class=\"string\">\"en\"</span> <span class=\"attr\">label</span>=<span class=\"string\">\"English\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">108. <span class=\"tag\">&lt;<span class=\"name\">tt</span>&gt;</span>       定义打印机文本。目前h5已经不支持了。</span></span><br><span class=\"line\"><span class=\"xml\">109. <span class=\"tag\">&lt;<span class=\"name\">u</span>&gt;</span>        下划线。目前已不支持</span></span><br><span class=\"line\"><span class=\"xml\">110. <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span>       无需列表。</span></span><br><span class=\"line\"><span class=\"xml\">111. <span class=\"tag\">&lt;<span class=\"name\">var</span>&gt;</span>      定义变量。您可以将此标签与 <span class=\"tag\">&lt;<span class=\"name\">pre</span>&gt;</span> 及 <span class=\"tag\">&lt;<span class=\"name\">code</span>&gt;</span> 标签配合使用。</span></span><br><span class=\"line\"><span class=\"xml\">112. <span class=\"tag\">&lt;<span class=\"name\">video</span>&gt;</span>    视频标签：</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.ogg\"</span> <span class=\"attr\">controls</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\">                您的浏览器不支持 video 标签。</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">113. <span class=\"tag\">&lt;<span class=\"name\">wbr</span>&gt;</span>      标志在何处适合加入换行符，避免有些单词加入换行符没拆开，不明意义。</span></span><br><span class=\"line\"><span class=\"xml\">114. <span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>       在ruby元素中加入汉字的注音：</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">ruby</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                漢 <span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span> ㄏㄢˋ <span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">ruby</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">115. <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span>  定义区段。页眉，页脚.......</span></span><br><span class=\"line\"><span class=\"xml\">116. <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>    定义一个选项组的标注</span></span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"DLL导出方法","date":"2016-10-06T12:04:30.000Z","comments":1,"_content":"\n# DLL导出方法\n\n## dll导出方法1 ：\n\n模块定义def文件，不支持c++的重载，以c的方式编译，导出的函数名不被修改，这样\n显示调用dll取得函数地址就没事。提供给vb，python等语言,需要_stdcall约定(函数自己清理堆栈)，这样无论是c文件还是c++文件，导出函数都会被改名字。所以dll做成必须要用def文件，否则找不到名字。除非你记得\n修饰过的函数名。\n\n## dll导出方法2：\n\n函数声明头文件声明如下：\n__declspec(dllexport)这种方式，方便c++代码的重载，同名函数不同参数，导出名字会被修饰，所以能区分开。\n这种方式实现了DLL的隐式调用（只提供dll的导出符号lib文件，就可直接调用函数，（只是导出函数符号，没有具体实现，\n不同于静态库的lib文件），def文件导出的dll不能用隐式调用，只能取得函数地址getProcAddress方式）\n\n```c\n\n#ifndef _EXSOPINF_H_\n#define _EXSOPINF_H_\n\n#ifdef __cplusplus  //cpp文件时，用c方式编译导出，不会修改导出函数名。但是_stdcall\n//调用也会修改，_cdecl(默认)调用不会修改\nextern \"C\" {\n#endif\n__declspec(dllexport) DWORD WINAPI function1( LPCSTR lpszFolderName, LPSTR lpszCode );\n__declspec(dllexport) DWORD WINAPI function2( LPCSTR lpszFolderName, LPSTR lpszCode );\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif\n\n函数定义时，也需要在函数名前：加入修饰\n__declspec(dllexport) DWORD WINAPI function1(LPCSTR lpszFolderName, LPSTR lpszCode ){\n\n    return 0;\n}\n其中WINAPI是调用约定。\n```\n## 常见调用约定\n\n```c\n\n调用协议常用场合\n__stdcall：Windows API默认的函数调用协议。\n__cdecl：C/C++默认的函数调用协议。\n__fastcall：适用于对性能要求较高的场合。\n函数参数入栈方式\n__stdcall：函数参数由右向左入栈。\n__cdecl：函数参数由右向左入栈。\n__fastcall：从左开始不大于4字节的参数放入CPU的ECX和EDX寄存器，其余参数从右向左入栈。\n问题一：__fastcall在寄存器中放入不大于4字节的参数，故性能较高，适用于需要高性能的场合。\n栈内数据清除方式\n__stdcall：函数调用结束后由被调用函数清除栈内数据。\n__cdecl：函数调用结束后由函数调用者清除栈内数据。\n__fastcall：函数调用结束后由被调用函数清除栈内数据。\n问题一：不同编译器设定的栈结构不尽相同，跨开发平台时由函数调用者清除栈内数据不可行。\n问题二：某些函数的参数是可变的，如printf函数，这样的函数只能由函数调用者清除栈内数据。\n问题三：由调用者清除栈内数据时，每次调用都包含清除栈内数据的代码，故可执行文件较大。\nC语言编译器函数名称修饰规则\n__stdcall：编译后，函数名被修饰为“_functionname@number”。\n__cdecl：编译后，函数名被修饰为“_functionname”。\n__fastcall：编译后，函数名给修饰为“@functionname@nmuber”。\n注：“functionname”为函数名，“number”为参数字节数。\n注：函数实现和函数定义时如果使用了不同的函数调用协议，则无法实现函数调用。\nC++语言编译器函数名称修饰规则\n__stdcall：编译后，函数名被修饰为“?functionname@@YG******@Z”。\n__cdecl：编译后，函数名被修饰为“?functionname@@YA******@Z”。\n__fastcall：编译后，函数名被修饰为“?functionname@@YI******@Z”。\n注：“******”为函数返回值类型和参数类型表。\n注：函数实现和函数定义时如果使用了不同的函数调用协议，则无法实现函数调用。\nC语言和C++语言间如果不进行特殊处理，也无法实现函数的互相调用。\n\n```\n\n\n## _stdcall与_cdecl的区别(函数调用方式)\n\n(1). 是C Declaration的缩写，表示C语言默认的函数调用方法，实际上也是C++的默认的函数调用方法。\n(2). 所有参数从右到左依次入栈，这些参数由调用者清除，称为手动清栈。具体所示：调用方的函数调用->被调用函数的执行->被调用函数的结果返回->调用方清除调整堆栈。\n(3). 被调用函数无需要求调用者传递多少参数，调用者传递过多或者过少的参数，甚至完全不同的参数都不会产生编译阶段的错误。总的来说函数的参数个数可变的(就像printf函数一样)，因为只有调用者才知道它传给被调用函数几个参数，才能在调用结束时适当地调整堆栈。\n(4). 因为每个调用的地方都需要生成一段调整堆栈的代码，所以最后生成的文件较大。\n\n###   _stdcall(CALLBACK/WINAPI)\n\n(1). 是Standard Call的缩写，要想函数按照此调用方式必须在函数名加入_stdcall，通常_ win32 api 应该是_stdcall调用规则。通过VC++编写的DLL欲被其他语言编写的程序调用，应将函数的调用方式声明为_stdcall 方式，WINAPI都采用这种方式。\n(2).  所有参数从右到左依次入栈，如果是调用类成员的话，最后一个入栈的是this指针。具体所示：调用方的函数调用->被调用函数的执行-> 被调用方清除调整堆栈->被调用函数的结果返回。\n(3).  这些堆栈中的参数由被调用的函数在返回后清除，使用的指令是 retn X，X表示参数占用的字节数，CPU在ret之后自动弹出X个字节的堆栈空间。称为自动清栈。\n(4).  函数在编译的时候就必须确定参数个数，并且调用者必须严格的控制参数的生成，不能多，不能少，否则返回后会出错。总的来说，就是函数的参数个数不能是可变的。是从 _cdecl 修改而来, _stdcall 不支持可变参数,并且清栈由被调用者负责,其他的都一样\n(5).  因为只需在被调用函数的地方生成一段调整堆栈的代码，所以最后生成的文件较小。\n\nPASCAL 是Pascal语言的函数调用方式，也可以在C/C++中使用，参数压栈顺序与前两者相反。返回时的清栈方式忘记了。。。\n\n_fastcall 是编译器指定的快速调用方式。由于大多数的函数参数个数很少，使用堆栈传递比较费时。因此_fastcall通常规定将前两个（或若干个）参数由寄存器传递，其余参数还是通过堆栈传递。不同编译器编译的程序规定的寄存器不同。返回方式和_stdcall相当。\n\n_thiscall 是为了解决类成员调用中this指针传递而规定的。_thiscall要求把this指针放在特定寄存器中，该寄存器由编译器决定。VC使用ecx，Borland的C++编译器使用eax。返回方式和_stdcall相当。\n\n_fastcall 和 _thiscall涉及的寄存器由编译器决定，因此不能用作跨编译器的接口。所以Windows上的COM对象接口都定义为_stdcall调用方式。\n\nC中不加说明默认函数为_cdecl方式（C中也只能用这种方式），C++也一样，但是默认的调用方式可以在IDE环境中设置。\n\n带有可变参数的函数必须且只能使用_cdecl方式，例如下面的函数:\n      int printf(char * fmtStr, ...);\n\n      int scanf(char * fmtStr, ...);\n\n###  函数名修饰\n\n(1). _cdecl ：对于_cdecl而言，如果对于定义在C程序文件(编译器会通过后缀名为.C判断)的输出函数，函数名会保持原样；对于定义在C++程序文件中的输出函数，函数名会被修饰(见10)。为使函数名不被修饰，有两种方法：A.可通过在前面加上extern “c”以去除函数名修饰；B. 可通过.def文件去除函数名修饰。\n\n(2). _stdcall：无论是C程序文件中的输出函数还是C++程序文件中的输出函数，函数名都会被修饰。对于定义在C++程序文件中的输出函数，好像更复杂，和_cdecl的情况类似。去除函数名修饰方法：只能通过.def文件去除函数名修饰。\n\n### 函数名修饰规则：\n\n(1). 为什么要函数名修饰：\n      函数名修饰就是编译器在编译期间创建的一个字符串，用来指明函数的定义和原型。LINK程序或其他工具有时需要指定函数的名字修饰来定位函数的正确位置。多少情况下程序员并不需要知道函数的名字修饰，LINK程序或其他工具会自动区分他们。当然，在某些情况下需要指定函数名修饰，例如在c++程序中，为了让LINK程序或其他工具能够匹配到正确的函数名字，就必须为重载函数后一些特殊函数(如构造函数和析构函数)指定名字修饰。另一种需要指定函数名修饰的情况是在汇编程序中调用C或C++函数。\n(2). C语言：\n      对于_stdcall调用约定，编译器和链接器会在输出函数名前加上一个下划线前缀，函数名后面加上一个“@”符号和其参数的字节数，例如_functionname@number。_cdecl调用约定仅在输出函数名前加上一个下划线前缀，例如_functionname。_fastcall调用约定在输出函数名前加上一个 “@“符号，后面也是一个”@“符号和其参数的字节数，例如@functionname@number。\n(3). C++语言：\n   C++的函数名修饰规则有些复杂，但是信息更充分，通过分析修饰名不仅能够知道函数的调用方式，返回值类型，参数个数甚至参数类型。不管__cdecl，__fastcall还是__stdcall调用方式，函数修饰都是以一个“?”开始，后面紧跟函数的名字，再后面是参数表的开始标识和按照参数类型代号拼出的参数表。对于__stdcall方式，参数表的开始标识是“@@YG”，对于__cdecl方式则是“@@YA”，对于__fastcall方式则是“@@YI”。参数表的拼写代号如下所示：\nX--void\nD--char\nE--unsigned char\nF--short\nH--int\nI--unsigned int\nJ--long\nK--unsigned long（DWORD）\nM--float\nN--double\n_N—bool\nU—struct\n\n指针的方式有些特别，用PA表示指针，用PB表示const类型的指针。后面的代号表明指针类型，如果相同类型的指针连续出现，以“0”代替，一个“0”代表一次重复。U表示结构类型，通常后跟结构体的类型名，用“@@”表示结构类型名的结束。函数的返回值不作特殊处理，它的描述方式和函数参数一样，紧跟着参数表的开始标志，也就是说，函数参数表的第一项实际上是表示函数的返回值类型。参数表后以“@Z”标识整个名字的结束，如果该函数无参数，则以“Z”标识结束。下面举两个例子，假如有以下函数声明：\nint Function1(char *var1,unsigned long);\n其函数修饰名为“?Function1@@YGHPADK@Z”，而对于函数声明：\noid Function2();\n其函数修饰名则为“?Function2@@YGXXZ” 。\n对于C++的类成员函数（其调用方式是thiscall），函数的名字修饰与非成员的C++函数稍有不同，首先就是在函数名字和参数表之间插入以“@”字符引导的类名；其次是参数表的开始标识不同，公有（public）成员函数的标识是“@@QAE”,保护（protected）成员函数的标识是“@@IAE”,私有（private）成员函数的标识是“@@AAE”，如果函数声明使用了const关键字，则相应的标识应分别为“@@QBE”，“@@IBE”和“@@ABE”。如果参数类型是类实例的引用，则使用“AAV1”，对于const类型的引用，则使用“ABV1”。\n\n###   查看函数的名字修饰\n 有两种方式可以检查你的程序中的函数的名字修饰：使用编译输出列表或使用Dumpbin工具。使用/FAc，/FAs或/FAcs命令行参数可以让编译器输出函数或变量名字列表。使用dumpbin.exe /SYMBOLS命令也可以获得obj文件或lib文件中的函数或变量名字列表。此外，还可以使用 undname.exe 将修饰名转换为未修饰形式。\n\n###   _beginthread需要_cdecl的线程函数地址，_beginthreadex和_CreateThread需要_stdcall的线程函数地址。\n\n```c\n\n#define CALLBACK __stdcall //这就是传说中的回调函数\n#define WINAPI __stdcall //这就是传说中的WINAPI\n#define WINAPIV __cdecl\n#define APIENTRY WINAPI //DllMain的入口就在这里\n#define APIPRIVATE __stdcall\n#define PASCAL __stdcall\n```\n","source":"_posts/windows/dll_export.md","raw":"---\nlayout: post\ntitle:  DLL导出方法\ncategory: windows \ndate: 2016-10-6 20:04:30\ncomments: true\n---\n\n# DLL导出方法\n\n## dll导出方法1 ：\n\n模块定义def文件，不支持c++的重载，以c的方式编译，导出的函数名不被修改，这样\n显示调用dll取得函数地址就没事。提供给vb，python等语言,需要_stdcall约定(函数自己清理堆栈)，这样无论是c文件还是c++文件，导出函数都会被改名字。所以dll做成必须要用def文件，否则找不到名字。除非你记得\n修饰过的函数名。\n\n## dll导出方法2：\n\n函数声明头文件声明如下：\n__declspec(dllexport)这种方式，方便c++代码的重载，同名函数不同参数，导出名字会被修饰，所以能区分开。\n这种方式实现了DLL的隐式调用（只提供dll的导出符号lib文件，就可直接调用函数，（只是导出函数符号，没有具体实现，\n不同于静态库的lib文件），def文件导出的dll不能用隐式调用，只能取得函数地址getProcAddress方式）\n\n```c\n\n#ifndef _EXSOPINF_H_\n#define _EXSOPINF_H_\n\n#ifdef __cplusplus  //cpp文件时，用c方式编译导出，不会修改导出函数名。但是_stdcall\n//调用也会修改，_cdecl(默认)调用不会修改\nextern \"C\" {\n#endif\n__declspec(dllexport) DWORD WINAPI function1( LPCSTR lpszFolderName, LPSTR lpszCode );\n__declspec(dllexport) DWORD WINAPI function2( LPCSTR lpszFolderName, LPSTR lpszCode );\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif\n\n函数定义时，也需要在函数名前：加入修饰\n__declspec(dllexport) DWORD WINAPI function1(LPCSTR lpszFolderName, LPSTR lpszCode ){\n\n    return 0;\n}\n其中WINAPI是调用约定。\n```\n## 常见调用约定\n\n```c\n\n调用协议常用场合\n__stdcall：Windows API默认的函数调用协议。\n__cdecl：C/C++默认的函数调用协议。\n__fastcall：适用于对性能要求较高的场合。\n函数参数入栈方式\n__stdcall：函数参数由右向左入栈。\n__cdecl：函数参数由右向左入栈。\n__fastcall：从左开始不大于4字节的参数放入CPU的ECX和EDX寄存器，其余参数从右向左入栈。\n问题一：__fastcall在寄存器中放入不大于4字节的参数，故性能较高，适用于需要高性能的场合。\n栈内数据清除方式\n__stdcall：函数调用结束后由被调用函数清除栈内数据。\n__cdecl：函数调用结束后由函数调用者清除栈内数据。\n__fastcall：函数调用结束后由被调用函数清除栈内数据。\n问题一：不同编译器设定的栈结构不尽相同，跨开发平台时由函数调用者清除栈内数据不可行。\n问题二：某些函数的参数是可变的，如printf函数，这样的函数只能由函数调用者清除栈内数据。\n问题三：由调用者清除栈内数据时，每次调用都包含清除栈内数据的代码，故可执行文件较大。\nC语言编译器函数名称修饰规则\n__stdcall：编译后，函数名被修饰为“_functionname@number”。\n__cdecl：编译后，函数名被修饰为“_functionname”。\n__fastcall：编译后，函数名给修饰为“@functionname@nmuber”。\n注：“functionname”为函数名，“number”为参数字节数。\n注：函数实现和函数定义时如果使用了不同的函数调用协议，则无法实现函数调用。\nC++语言编译器函数名称修饰规则\n__stdcall：编译后，函数名被修饰为“?functionname@@YG******@Z”。\n__cdecl：编译后，函数名被修饰为“?functionname@@YA******@Z”。\n__fastcall：编译后，函数名被修饰为“?functionname@@YI******@Z”。\n注：“******”为函数返回值类型和参数类型表。\n注：函数实现和函数定义时如果使用了不同的函数调用协议，则无法实现函数调用。\nC语言和C++语言间如果不进行特殊处理，也无法实现函数的互相调用。\n\n```\n\n\n## _stdcall与_cdecl的区别(函数调用方式)\n\n(1). 是C Declaration的缩写，表示C语言默认的函数调用方法，实际上也是C++的默认的函数调用方法。\n(2). 所有参数从右到左依次入栈，这些参数由调用者清除，称为手动清栈。具体所示：调用方的函数调用->被调用函数的执行->被调用函数的结果返回->调用方清除调整堆栈。\n(3). 被调用函数无需要求调用者传递多少参数，调用者传递过多或者过少的参数，甚至完全不同的参数都不会产生编译阶段的错误。总的来说函数的参数个数可变的(就像printf函数一样)，因为只有调用者才知道它传给被调用函数几个参数，才能在调用结束时适当地调整堆栈。\n(4). 因为每个调用的地方都需要生成一段调整堆栈的代码，所以最后生成的文件较大。\n\n###   _stdcall(CALLBACK/WINAPI)\n\n(1). 是Standard Call的缩写，要想函数按照此调用方式必须在函数名加入_stdcall，通常_ win32 api 应该是_stdcall调用规则。通过VC++编写的DLL欲被其他语言编写的程序调用，应将函数的调用方式声明为_stdcall 方式，WINAPI都采用这种方式。\n(2).  所有参数从右到左依次入栈，如果是调用类成员的话，最后一个入栈的是this指针。具体所示：调用方的函数调用->被调用函数的执行-> 被调用方清除调整堆栈->被调用函数的结果返回。\n(3).  这些堆栈中的参数由被调用的函数在返回后清除，使用的指令是 retn X，X表示参数占用的字节数，CPU在ret之后自动弹出X个字节的堆栈空间。称为自动清栈。\n(4).  函数在编译的时候就必须确定参数个数，并且调用者必须严格的控制参数的生成，不能多，不能少，否则返回后会出错。总的来说，就是函数的参数个数不能是可变的。是从 _cdecl 修改而来, _stdcall 不支持可变参数,并且清栈由被调用者负责,其他的都一样\n(5).  因为只需在被调用函数的地方生成一段调整堆栈的代码，所以最后生成的文件较小。\n\nPASCAL 是Pascal语言的函数调用方式，也可以在C/C++中使用，参数压栈顺序与前两者相反。返回时的清栈方式忘记了。。。\n\n_fastcall 是编译器指定的快速调用方式。由于大多数的函数参数个数很少，使用堆栈传递比较费时。因此_fastcall通常规定将前两个（或若干个）参数由寄存器传递，其余参数还是通过堆栈传递。不同编译器编译的程序规定的寄存器不同。返回方式和_stdcall相当。\n\n_thiscall 是为了解决类成员调用中this指针传递而规定的。_thiscall要求把this指针放在特定寄存器中，该寄存器由编译器决定。VC使用ecx，Borland的C++编译器使用eax。返回方式和_stdcall相当。\n\n_fastcall 和 _thiscall涉及的寄存器由编译器决定，因此不能用作跨编译器的接口。所以Windows上的COM对象接口都定义为_stdcall调用方式。\n\nC中不加说明默认函数为_cdecl方式（C中也只能用这种方式），C++也一样，但是默认的调用方式可以在IDE环境中设置。\n\n带有可变参数的函数必须且只能使用_cdecl方式，例如下面的函数:\n      int printf(char * fmtStr, ...);\n\n      int scanf(char * fmtStr, ...);\n\n###  函数名修饰\n\n(1). _cdecl ：对于_cdecl而言，如果对于定义在C程序文件(编译器会通过后缀名为.C判断)的输出函数，函数名会保持原样；对于定义在C++程序文件中的输出函数，函数名会被修饰(见10)。为使函数名不被修饰，有两种方法：A.可通过在前面加上extern “c”以去除函数名修饰；B. 可通过.def文件去除函数名修饰。\n\n(2). _stdcall：无论是C程序文件中的输出函数还是C++程序文件中的输出函数，函数名都会被修饰。对于定义在C++程序文件中的输出函数，好像更复杂，和_cdecl的情况类似。去除函数名修饰方法：只能通过.def文件去除函数名修饰。\n\n### 函数名修饰规则：\n\n(1). 为什么要函数名修饰：\n      函数名修饰就是编译器在编译期间创建的一个字符串，用来指明函数的定义和原型。LINK程序或其他工具有时需要指定函数的名字修饰来定位函数的正确位置。多少情况下程序员并不需要知道函数的名字修饰，LINK程序或其他工具会自动区分他们。当然，在某些情况下需要指定函数名修饰，例如在c++程序中，为了让LINK程序或其他工具能够匹配到正确的函数名字，就必须为重载函数后一些特殊函数(如构造函数和析构函数)指定名字修饰。另一种需要指定函数名修饰的情况是在汇编程序中调用C或C++函数。\n(2). C语言：\n      对于_stdcall调用约定，编译器和链接器会在输出函数名前加上一个下划线前缀，函数名后面加上一个“@”符号和其参数的字节数，例如_functionname@number。_cdecl调用约定仅在输出函数名前加上一个下划线前缀，例如_functionname。_fastcall调用约定在输出函数名前加上一个 “@“符号，后面也是一个”@“符号和其参数的字节数，例如@functionname@number。\n(3). C++语言：\n   C++的函数名修饰规则有些复杂，但是信息更充分，通过分析修饰名不仅能够知道函数的调用方式，返回值类型，参数个数甚至参数类型。不管__cdecl，__fastcall还是__stdcall调用方式，函数修饰都是以一个“?”开始，后面紧跟函数的名字，再后面是参数表的开始标识和按照参数类型代号拼出的参数表。对于__stdcall方式，参数表的开始标识是“@@YG”，对于__cdecl方式则是“@@YA”，对于__fastcall方式则是“@@YI”。参数表的拼写代号如下所示：\nX--void\nD--char\nE--unsigned char\nF--short\nH--int\nI--unsigned int\nJ--long\nK--unsigned long（DWORD）\nM--float\nN--double\n_N—bool\nU—struct\n\n指针的方式有些特别，用PA表示指针，用PB表示const类型的指针。后面的代号表明指针类型，如果相同类型的指针连续出现，以“0”代替，一个“0”代表一次重复。U表示结构类型，通常后跟结构体的类型名，用“@@”表示结构类型名的结束。函数的返回值不作特殊处理，它的描述方式和函数参数一样，紧跟着参数表的开始标志，也就是说，函数参数表的第一项实际上是表示函数的返回值类型。参数表后以“@Z”标识整个名字的结束，如果该函数无参数，则以“Z”标识结束。下面举两个例子，假如有以下函数声明：\nint Function1(char *var1,unsigned long);\n其函数修饰名为“?Function1@@YGHPADK@Z”，而对于函数声明：\noid Function2();\n其函数修饰名则为“?Function2@@YGXXZ” 。\n对于C++的类成员函数（其调用方式是thiscall），函数的名字修饰与非成员的C++函数稍有不同，首先就是在函数名字和参数表之间插入以“@”字符引导的类名；其次是参数表的开始标识不同，公有（public）成员函数的标识是“@@QAE”,保护（protected）成员函数的标识是“@@IAE”,私有（private）成员函数的标识是“@@AAE”，如果函数声明使用了const关键字，则相应的标识应分别为“@@QBE”，“@@IBE”和“@@ABE”。如果参数类型是类实例的引用，则使用“AAV1”，对于const类型的引用，则使用“ABV1”。\n\n###   查看函数的名字修饰\n 有两种方式可以检查你的程序中的函数的名字修饰：使用编译输出列表或使用Dumpbin工具。使用/FAc，/FAs或/FAcs命令行参数可以让编译器输出函数或变量名字列表。使用dumpbin.exe /SYMBOLS命令也可以获得obj文件或lib文件中的函数或变量名字列表。此外，还可以使用 undname.exe 将修饰名转换为未修饰形式。\n\n###   _beginthread需要_cdecl的线程函数地址，_beginthreadex和_CreateThread需要_stdcall的线程函数地址。\n\n```c\n\n#define CALLBACK __stdcall //这就是传说中的回调函数\n#define WINAPI __stdcall //这就是传说中的WINAPI\n#define WINAPIV __cdecl\n#define APIENTRY WINAPI //DllMain的入口就在这里\n#define APIPRIVATE __stdcall\n#define PASCAL __stdcall\n```\n","slug":"windows/dll_export","published":1,"updated":"2019-01-26T05:01:37.181Z","photos":[],"link":"","_id":"cjrd0e8so002gkwlioir2amd8","content":"<h1 id=\"DLL导出方法\"><a href=\"#DLL导出方法\" class=\"headerlink\" title=\"DLL导出方法\"></a>DLL导出方法</h1><h2 id=\"dll导出方法1-：\"><a href=\"#dll导出方法1-：\" class=\"headerlink\" title=\"dll导出方法1 ：\"></a>dll导出方法1 ：</h2><p>模块定义def文件，不支持c++的重载，以c的方式编译，导出的函数名不被修改，这样<br>显示调用dll取得函数地址就没事。提供给vb，python等语言,需要_stdcall约定(函数自己清理堆栈)，这样无论是c文件还是c++文件，导出函数都会被改名字。所以dll做成必须要用def文件，否则找不到名字。除非你记得<br>修饰过的函数名。</p>\n<h2 id=\"dll导出方法2：\"><a href=\"#dll导出方法2：\" class=\"headerlink\" title=\"dll导出方法2：\"></a>dll导出方法2：</h2><p>函数声明头文件声明如下：<br>__declspec(dllexport)这种方式，方便c++代码的重载，同名函数不同参数，导出名字会被修饰，所以能区分开。<br>这种方式实现了DLL的隐式调用（只提供dll的导出符号lib文件，就可直接调用函数，（只是导出函数符号，没有具体实现，<br>不同于静态库的lib文件），def文件导出的dll不能用隐式调用，只能取得函数地址getProcAddress方式）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _EXSOPINF_H_</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _EXSOPINF_H_</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> __cplusplus  <span class=\"comment\">//cpp文件时，用c方式编译导出，不会修改导出函数名。但是_stdcall</span></span></span><br><span class=\"line\"><span class=\"comment\">//调用也会修改，_cdecl(默认)调用不会修改</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">\"C\"</span> &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">__declspec(dllexport) <span class=\"function\">DWORD WINAPI <span class=\"title\">function1</span><span class=\"params\">( LPCSTR lpszFolderName, LPSTR lpszCode )</span></span>;</span><br><span class=\"line\">__declspec(dllexport) <span class=\"function\">DWORD WINAPI <span class=\"title\">function2</span><span class=\"params\">( LPCSTR lpszFolderName, LPSTR lpszCode )</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> __cplusplus</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">函数定义时，也需要在函数名前：加入修饰</span><br><span class=\"line\">__declspec(dllexport) <span class=\"function\">DWORD WINAPI <span class=\"title\">function1</span><span class=\"params\">(LPCSTR lpszFolderName, LPSTR lpszCode )</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">其中WINAPI是调用约定。</span><br></pre></td></tr></table></figure>\n<h2 id=\"常见调用约定\"><a href=\"#常见调用约定\" class=\"headerlink\" title=\"常见调用约定\"></a>常见调用约定</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">调用协议常用场合</span><br><span class=\"line\">__stdcall：Windows API默认的函数调用协议。</span><br><span class=\"line\">__cdecl：C/C++默认的函数调用协议。</span><br><span class=\"line\">__fastcall：适用于对性能要求较高的场合。</span><br><span class=\"line\">函数参数入栈方式</span><br><span class=\"line\">__stdcall：函数参数由右向左入栈。</span><br><span class=\"line\">__cdecl：函数参数由右向左入栈。</span><br><span class=\"line\">__fastcall：从左开始不大于<span class=\"number\">4</span>字节的参数放入CPU的ECX和EDX寄存器，其余参数从右向左入栈。</span><br><span class=\"line\">问题一：__fastcall在寄存器中放入不大于<span class=\"number\">4</span>字节的参数，故性能较高，适用于需要高性能的场合。</span><br><span class=\"line\">栈内数据清除方式</span><br><span class=\"line\">__stdcall：函数调用结束后由被调用函数清除栈内数据。</span><br><span class=\"line\">__cdecl：函数调用结束后由函数调用者清除栈内数据。</span><br><span class=\"line\">__fastcall：函数调用结束后由被调用函数清除栈内数据。</span><br><span class=\"line\">问题一：不同编译器设定的栈结构不尽相同，跨开发平台时由函数调用者清除栈内数据不可行。</span><br><span class=\"line\">问题二：某些函数的参数是可变的，如<span class=\"built_in\">printf</span>函数，这样的函数只能由函数调用者清除栈内数据。</span><br><span class=\"line\">问题三：由调用者清除栈内数据时，每次调用都包含清除栈内数据的代码，故可执行文件较大。</span><br><span class=\"line\">C语言编译器函数名称修饰规则</span><br><span class=\"line\">__stdcall：编译后，函数名被修饰为“_functionname@number”。</span><br><span class=\"line\">__cdecl：编译后，函数名被修饰为“_functionname”。</span><br><span class=\"line\">__fastcall：编译后，函数名给修饰为“@functionname@nmuber”。</span><br><span class=\"line\">注：“functionname”为函数名，“number”为参数字节数。</span><br><span class=\"line\">注：函数实现和函数定义时如果使用了不同的函数调用协议，则无法实现函数调用。</span><br><span class=\"line\">C++语言编译器函数名称修饰规则</span><br><span class=\"line\">__stdcall：编译后，函数名被修饰为“?functionname@@YG******@Z”。</span><br><span class=\"line\">__cdecl：编译后，函数名被修饰为“?functionname@@YA******@Z”。</span><br><span class=\"line\">__fastcall：编译后，函数名被修饰为“?functionname@@YI******@Z”。</span><br><span class=\"line\">注：“******”为函数返回值类型和参数类型表。</span><br><span class=\"line\">注：函数实现和函数定义时如果使用了不同的函数调用协议，则无法实现函数调用。</span><br><span class=\"line\">C语言和C++语言间如果不进行特殊处理，也无法实现函数的互相调用。</span><br></pre></td></tr></table></figure>\n<h2 id=\"stdcall与-cdecl的区别-函数调用方式\"><a href=\"#stdcall与-cdecl的区别-函数调用方式\" class=\"headerlink\" title=\"_stdcall与_cdecl的区别(函数调用方式)\"></a>_stdcall与_cdecl的区别(函数调用方式)</h2><p>(1). 是C Declaration的缩写，表示C语言默认的函数调用方法，实际上也是C++的默认的函数调用方法。<br>(2). 所有参数从右到左依次入栈，这些参数由调用者清除，称为手动清栈。具体所示：调用方的函数调用-&gt;被调用函数的执行-&gt;被调用函数的结果返回-&gt;调用方清除调整堆栈。<br>(3). 被调用函数无需要求调用者传递多少参数，调用者传递过多或者过少的参数，甚至完全不同的参数都不会产生编译阶段的错误。总的来说函数的参数个数可变的(就像printf函数一样)，因为只有调用者才知道它传给被调用函数几个参数，才能在调用结束时适当地调整堆栈。<br>(4). 因为每个调用的地方都需要生成一段调整堆栈的代码，所以最后生成的文件较大。</p>\n<h3 id=\"stdcall-CALLBACK-WINAPI\"><a href=\"#stdcall-CALLBACK-WINAPI\" class=\"headerlink\" title=\"_stdcall(CALLBACK/WINAPI)\"></a>_stdcall(CALLBACK/WINAPI)</h3><p>(1). 是Standard Call的缩写，要想函数按照此调用方式必须在函数名加入<em>stdcall，通常</em> win32 api 应该是_stdcall调用规则。通过VC++编写的DLL欲被其他语言编写的程序调用，应将函数的调用方式声明为_stdcall 方式，WINAPI都采用这种方式。<br>(2).  所有参数从右到左依次入栈，如果是调用类成员的话，最后一个入栈的是this指针。具体所示：调用方的函数调用-&gt;被调用函数的执行-&gt; 被调用方清除调整堆栈-&gt;被调用函数的结果返回。<br>(3).  这些堆栈中的参数由被调用的函数在返回后清除，使用的指令是 retn X，X表示参数占用的字节数，CPU在ret之后自动弹出X个字节的堆栈空间。称为自动清栈。<br>(4).  函数在编译的时候就必须确定参数个数，并且调用者必须严格的控制参数的生成，不能多，不能少，否则返回后会出错。总的来说，就是函数的参数个数不能是可变的。是从 _cdecl 修改而来, _stdcall 不支持可变参数,并且清栈由被调用者负责,其他的都一样<br>(5).  因为只需在被调用函数的地方生成一段调整堆栈的代码，所以最后生成的文件较小。</p>\n<p>PASCAL 是Pascal语言的函数调用方式，也可以在C/C++中使用，参数压栈顺序与前两者相反。返回时的清栈方式忘记了。。。</p>\n<p>_fastcall 是编译器指定的快速调用方式。由于大多数的函数参数个数很少，使用堆栈传递比较费时。因此_fastcall通常规定将前两个（或若干个）参数由寄存器传递，其余参数还是通过堆栈传递。不同编译器编译的程序规定的寄存器不同。返回方式和_stdcall相当。</p>\n<p>_thiscall 是为了解决类成员调用中this指针传递而规定的。_thiscall要求把this指针放在特定寄存器中，该寄存器由编译器决定。VC使用ecx，Borland的C++编译器使用eax。返回方式和_stdcall相当。</p>\n<p>_fastcall 和 _thiscall涉及的寄存器由编译器决定，因此不能用作跨编译器的接口。所以Windows上的COM对象接口都定义为_stdcall调用方式。</p>\n<p>C中不加说明默认函数为_cdecl方式（C中也只能用这种方式），C++也一样，但是默认的调用方式可以在IDE环境中设置。</p>\n<p>带有可变参数的函数必须且只能使用_cdecl方式，例如下面的函数:<br>      int printf(char * fmtStr, …);</p>\n<pre><code>int scanf(char * fmtStr, ...);\n</code></pre><h3 id=\"函数名修饰\"><a href=\"#函数名修饰\" class=\"headerlink\" title=\"函数名修饰\"></a>函数名修饰</h3><p>(1). _cdecl ：对于_cdecl而言，如果对于定义在C程序文件(编译器会通过后缀名为.C判断)的输出函数，函数名会保持原样；对于定义在C++程序文件中的输出函数，函数名会被修饰(见10)。为使函数名不被修饰，有两种方法：A.可通过在前面加上extern “c”以去除函数名修饰；B. 可通过.def文件去除函数名修饰。</p>\n<p>(2). _stdcall：无论是C程序文件中的输出函数还是C++程序文件中的输出函数，函数名都会被修饰。对于定义在C++程序文件中的输出函数，好像更复杂，和_cdecl的情况类似。去除函数名修饰方法：只能通过.def文件去除函数名修饰。</p>\n<h3 id=\"函数名修饰规则：\"><a href=\"#函数名修饰规则：\" class=\"headerlink\" title=\"函数名修饰规则：\"></a>函数名修饰规则：</h3><p>(1). 为什么要函数名修饰：<br>      函数名修饰就是编译器在编译期间创建的一个字符串，用来指明函数的定义和原型。LINK程序或其他工具有时需要指定函数的名字修饰来定位函数的正确位置。多少情况下程序员并不需要知道函数的名字修饰，LINK程序或其他工具会自动区分他们。当然，在某些情况下需要指定函数名修饰，例如在c++程序中，为了让LINK程序或其他工具能够匹配到正确的函数名字，就必须为重载函数后一些特殊函数(如构造函数和析构函数)指定名字修饰。另一种需要指定函数名修饰的情况是在汇编程序中调用C或C++函数。<br>(2). C语言：<br>      对于_stdcall调用约定，编译器和链接器会在输出函数名前加上一个下划线前缀，函数名后面加上一个“@”符号和其参数的字节数，例如_functionname@number。_cdecl调用约定仅在输出函数名前加上一个下划线前缀，例如_functionname。_fastcall调用约定在输出函数名前加上一个 “@“符号，后面也是一个”@“符号和其参数的字节数，例如@functionname@number。<br>(3). C++语言：<br>   C++的函数名修饰规则有些复杂，但是信息更充分，通过分析修饰名不仅能够知道函数的调用方式，返回值类型，参数个数甚至参数类型。不管<strong>cdecl，</strong>fastcall还是<strong>stdcall调用方式，函数修饰都是以一个“?”开始，后面紧跟函数的名字，再后面是参数表的开始标识和按照参数类型代号拼出的参数表。对于</strong>stdcall方式，参数表的开始标识是“@@YG”，对于<strong>cdecl方式则是“@@YA”，对于</strong>fastcall方式则是“@@YI”。参数表的拼写代号如下所示：<br>X–void<br>D–char<br>E–unsigned char<br>F–short<br>H–int<br>I–unsigned int<br>J–long<br>K–unsigned long（DWORD）<br>M–float<br>N–double<br>_N—bool<br>U—struct</p>\n<p>指针的方式有些特别，用PA表示指针，用PB表示const类型的指针。后面的代号表明指针类型，如果相同类型的指针连续出现，以“0”代替，一个“0”代表一次重复。U表示结构类型，通常后跟结构体的类型名，用“@@”表示结构类型名的结束。函数的返回值不作特殊处理，它的描述方式和函数参数一样，紧跟着参数表的开始标志，也就是说，函数参数表的第一项实际上是表示函数的返回值类型。参数表后以“@Z”标识整个名字的结束，如果该函数无参数，则以“Z”标识结束。下面举两个例子，假如有以下函数声明：<br>int Function1(char *var1,unsigned long);<br>其函数修饰名为“?Function1@@YGHPADK@Z”，而对于函数声明：<br>oid Function2();<br>其函数修饰名则为“?Function2@@YGXXZ” 。<br>对于C++的类成员函数（其调用方式是thiscall），函数的名字修饰与非成员的C++函数稍有不同，首先就是在函数名字和参数表之间插入以“@”字符引导的类名；其次是参数表的开始标识不同，公有（public）成员函数的标识是“@@QAE”,保护（protected）成员函数的标识是“@@IAE”,私有（private）成员函数的标识是“@@AAE”，如果函数声明使用了const关键字，则相应的标识应分别为“@@QBE”，“@@IBE”和“@@ABE”。如果参数类型是类实例的引用，则使用“AAV1”，对于const类型的引用，则使用“ABV1”。</p>\n<h3 id=\"查看函数的名字修饰\"><a href=\"#查看函数的名字修饰\" class=\"headerlink\" title=\"查看函数的名字修饰\"></a>查看函数的名字修饰</h3><p> 有两种方式可以检查你的程序中的函数的名字修饰：使用编译输出列表或使用Dumpbin工具。使用/FAc，/FAs或/FAcs命令行参数可以让编译器输出函数或变量名字列表。使用dumpbin.exe /SYMBOLS命令也可以获得obj文件或lib文件中的函数或变量名字列表。此外，还可以使用 undname.exe 将修饰名转换为未修饰形式。</p>\n<h3 id=\"beginthread需要-cdecl的线程函数地址，-beginthreadex和-CreateThread需要-stdcall的线程函数地址。\"><a href=\"#beginthread需要-cdecl的线程函数地址，-beginthreadex和-CreateThread需要-stdcall的线程函数地址。\" class=\"headerlink\" title=\"_beginthread需要_cdecl的线程函数地址，_beginthreadex和_CreateThread需要_stdcall的线程函数地址。\"></a>_beginthread需要_cdecl的线程函数地址，_beginthreadex和_CreateThread需要_stdcall的线程函数地址。</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> CALLBACK __stdcall <span class=\"comment\">//这就是传说中的回调函数</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> WINAPI __stdcall <span class=\"comment\">//这就是传说中的WINAPI</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> WINAPIV __cdecl</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> APIENTRY WINAPI <span class=\"comment\">//DllMain的入口就在这里</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> APIPRIVATE __stdcall</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PASCAL __stdcall</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"DLL导出方法\"><a href=\"#DLL导出方法\" class=\"headerlink\" title=\"DLL导出方法\"></a>DLL导出方法</h1><h2 id=\"dll导出方法1-：\"><a href=\"#dll导出方法1-：\" class=\"headerlink\" title=\"dll导出方法1 ：\"></a>dll导出方法1 ：</h2><p>模块定义def文件，不支持c++的重载，以c的方式编译，导出的函数名不被修改，这样<br>显示调用dll取得函数地址就没事。提供给vb，python等语言,需要_stdcall约定(函数自己清理堆栈)，这样无论是c文件还是c++文件，导出函数都会被改名字。所以dll做成必须要用def文件，否则找不到名字。除非你记得<br>修饰过的函数名。</p>\n<h2 id=\"dll导出方法2：\"><a href=\"#dll导出方法2：\" class=\"headerlink\" title=\"dll导出方法2：\"></a>dll导出方法2：</h2><p>函数声明头文件声明如下：<br>__declspec(dllexport)这种方式，方便c++代码的重载，同名函数不同参数，导出名字会被修饰，所以能区分开。<br>这种方式实现了DLL的隐式调用（只提供dll的导出符号lib文件，就可直接调用函数，（只是导出函数符号，没有具体实现，<br>不同于静态库的lib文件），def文件导出的dll不能用隐式调用，只能取得函数地址getProcAddress方式）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _EXSOPINF_H_</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _EXSOPINF_H_</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> __cplusplus  <span class=\"comment\">//cpp文件时，用c方式编译导出，不会修改导出函数名。但是_stdcall</span></span></span><br><span class=\"line\"><span class=\"comment\">//调用也会修改，_cdecl(默认)调用不会修改</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">\"C\"</span> &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">__declspec(dllexport) <span class=\"function\">DWORD WINAPI <span class=\"title\">function1</span><span class=\"params\">( LPCSTR lpszFolderName, LPSTR lpszCode )</span></span>;</span><br><span class=\"line\">__declspec(dllexport) <span class=\"function\">DWORD WINAPI <span class=\"title\">function2</span><span class=\"params\">( LPCSTR lpszFolderName, LPSTR lpszCode )</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> __cplusplus</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">函数定义时，也需要在函数名前：加入修饰</span><br><span class=\"line\">__declspec(dllexport) <span class=\"function\">DWORD WINAPI <span class=\"title\">function1</span><span class=\"params\">(LPCSTR lpszFolderName, LPSTR lpszCode )</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">其中WINAPI是调用约定。</span><br></pre></td></tr></table></figure>\n<h2 id=\"常见调用约定\"><a href=\"#常见调用约定\" class=\"headerlink\" title=\"常见调用约定\"></a>常见调用约定</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">调用协议常用场合</span><br><span class=\"line\">__stdcall：Windows API默认的函数调用协议。</span><br><span class=\"line\">__cdecl：C/C++默认的函数调用协议。</span><br><span class=\"line\">__fastcall：适用于对性能要求较高的场合。</span><br><span class=\"line\">函数参数入栈方式</span><br><span class=\"line\">__stdcall：函数参数由右向左入栈。</span><br><span class=\"line\">__cdecl：函数参数由右向左入栈。</span><br><span class=\"line\">__fastcall：从左开始不大于<span class=\"number\">4</span>字节的参数放入CPU的ECX和EDX寄存器，其余参数从右向左入栈。</span><br><span class=\"line\">问题一：__fastcall在寄存器中放入不大于<span class=\"number\">4</span>字节的参数，故性能较高，适用于需要高性能的场合。</span><br><span class=\"line\">栈内数据清除方式</span><br><span class=\"line\">__stdcall：函数调用结束后由被调用函数清除栈内数据。</span><br><span class=\"line\">__cdecl：函数调用结束后由函数调用者清除栈内数据。</span><br><span class=\"line\">__fastcall：函数调用结束后由被调用函数清除栈内数据。</span><br><span class=\"line\">问题一：不同编译器设定的栈结构不尽相同，跨开发平台时由函数调用者清除栈内数据不可行。</span><br><span class=\"line\">问题二：某些函数的参数是可变的，如<span class=\"built_in\">printf</span>函数，这样的函数只能由函数调用者清除栈内数据。</span><br><span class=\"line\">问题三：由调用者清除栈内数据时，每次调用都包含清除栈内数据的代码，故可执行文件较大。</span><br><span class=\"line\">C语言编译器函数名称修饰规则</span><br><span class=\"line\">__stdcall：编译后，函数名被修饰为“_functionname@number”。</span><br><span class=\"line\">__cdecl：编译后，函数名被修饰为“_functionname”。</span><br><span class=\"line\">__fastcall：编译后，函数名给修饰为“@functionname@nmuber”。</span><br><span class=\"line\">注：“functionname”为函数名，“number”为参数字节数。</span><br><span class=\"line\">注：函数实现和函数定义时如果使用了不同的函数调用协议，则无法实现函数调用。</span><br><span class=\"line\">C++语言编译器函数名称修饰规则</span><br><span class=\"line\">__stdcall：编译后，函数名被修饰为“?functionname@@YG******@Z”。</span><br><span class=\"line\">__cdecl：编译后，函数名被修饰为“?functionname@@YA******@Z”。</span><br><span class=\"line\">__fastcall：编译后，函数名被修饰为“?functionname@@YI******@Z”。</span><br><span class=\"line\">注：“******”为函数返回值类型和参数类型表。</span><br><span class=\"line\">注：函数实现和函数定义时如果使用了不同的函数调用协议，则无法实现函数调用。</span><br><span class=\"line\">C语言和C++语言间如果不进行特殊处理，也无法实现函数的互相调用。</span><br></pre></td></tr></table></figure>\n<h2 id=\"stdcall与-cdecl的区别-函数调用方式\"><a href=\"#stdcall与-cdecl的区别-函数调用方式\" class=\"headerlink\" title=\"_stdcall与_cdecl的区别(函数调用方式)\"></a>_stdcall与_cdecl的区别(函数调用方式)</h2><p>(1). 是C Declaration的缩写，表示C语言默认的函数调用方法，实际上也是C++的默认的函数调用方法。<br>(2). 所有参数从右到左依次入栈，这些参数由调用者清除，称为手动清栈。具体所示：调用方的函数调用-&gt;被调用函数的执行-&gt;被调用函数的结果返回-&gt;调用方清除调整堆栈。<br>(3). 被调用函数无需要求调用者传递多少参数，调用者传递过多或者过少的参数，甚至完全不同的参数都不会产生编译阶段的错误。总的来说函数的参数个数可变的(就像printf函数一样)，因为只有调用者才知道它传给被调用函数几个参数，才能在调用结束时适当地调整堆栈。<br>(4). 因为每个调用的地方都需要生成一段调整堆栈的代码，所以最后生成的文件较大。</p>\n<h3 id=\"stdcall-CALLBACK-WINAPI\"><a href=\"#stdcall-CALLBACK-WINAPI\" class=\"headerlink\" title=\"_stdcall(CALLBACK/WINAPI)\"></a>_stdcall(CALLBACK/WINAPI)</h3><p>(1). 是Standard Call的缩写，要想函数按照此调用方式必须在函数名加入<em>stdcall，通常</em> win32 api 应该是_stdcall调用规则。通过VC++编写的DLL欲被其他语言编写的程序调用，应将函数的调用方式声明为_stdcall 方式，WINAPI都采用这种方式。<br>(2).  所有参数从右到左依次入栈，如果是调用类成员的话，最后一个入栈的是this指针。具体所示：调用方的函数调用-&gt;被调用函数的执行-&gt; 被调用方清除调整堆栈-&gt;被调用函数的结果返回。<br>(3).  这些堆栈中的参数由被调用的函数在返回后清除，使用的指令是 retn X，X表示参数占用的字节数，CPU在ret之后自动弹出X个字节的堆栈空间。称为自动清栈。<br>(4).  函数在编译的时候就必须确定参数个数，并且调用者必须严格的控制参数的生成，不能多，不能少，否则返回后会出错。总的来说，就是函数的参数个数不能是可变的。是从 _cdecl 修改而来, _stdcall 不支持可变参数,并且清栈由被调用者负责,其他的都一样<br>(5).  因为只需在被调用函数的地方生成一段调整堆栈的代码，所以最后生成的文件较小。</p>\n<p>PASCAL 是Pascal语言的函数调用方式，也可以在C/C++中使用，参数压栈顺序与前两者相反。返回时的清栈方式忘记了。。。</p>\n<p>_fastcall 是编译器指定的快速调用方式。由于大多数的函数参数个数很少，使用堆栈传递比较费时。因此_fastcall通常规定将前两个（或若干个）参数由寄存器传递，其余参数还是通过堆栈传递。不同编译器编译的程序规定的寄存器不同。返回方式和_stdcall相当。</p>\n<p>_thiscall 是为了解决类成员调用中this指针传递而规定的。_thiscall要求把this指针放在特定寄存器中，该寄存器由编译器决定。VC使用ecx，Borland的C++编译器使用eax。返回方式和_stdcall相当。</p>\n<p>_fastcall 和 _thiscall涉及的寄存器由编译器决定，因此不能用作跨编译器的接口。所以Windows上的COM对象接口都定义为_stdcall调用方式。</p>\n<p>C中不加说明默认函数为_cdecl方式（C中也只能用这种方式），C++也一样，但是默认的调用方式可以在IDE环境中设置。</p>\n<p>带有可变参数的函数必须且只能使用_cdecl方式，例如下面的函数:<br>      int printf(char * fmtStr, …);</p>\n<pre><code>int scanf(char * fmtStr, ...);\n</code></pre><h3 id=\"函数名修饰\"><a href=\"#函数名修饰\" class=\"headerlink\" title=\"函数名修饰\"></a>函数名修饰</h3><p>(1). _cdecl ：对于_cdecl而言，如果对于定义在C程序文件(编译器会通过后缀名为.C判断)的输出函数，函数名会保持原样；对于定义在C++程序文件中的输出函数，函数名会被修饰(见10)。为使函数名不被修饰，有两种方法：A.可通过在前面加上extern “c”以去除函数名修饰；B. 可通过.def文件去除函数名修饰。</p>\n<p>(2). _stdcall：无论是C程序文件中的输出函数还是C++程序文件中的输出函数，函数名都会被修饰。对于定义在C++程序文件中的输出函数，好像更复杂，和_cdecl的情况类似。去除函数名修饰方法：只能通过.def文件去除函数名修饰。</p>\n<h3 id=\"函数名修饰规则：\"><a href=\"#函数名修饰规则：\" class=\"headerlink\" title=\"函数名修饰规则：\"></a>函数名修饰规则：</h3><p>(1). 为什么要函数名修饰：<br>      函数名修饰就是编译器在编译期间创建的一个字符串，用来指明函数的定义和原型。LINK程序或其他工具有时需要指定函数的名字修饰来定位函数的正确位置。多少情况下程序员并不需要知道函数的名字修饰，LINK程序或其他工具会自动区分他们。当然，在某些情况下需要指定函数名修饰，例如在c++程序中，为了让LINK程序或其他工具能够匹配到正确的函数名字，就必须为重载函数后一些特殊函数(如构造函数和析构函数)指定名字修饰。另一种需要指定函数名修饰的情况是在汇编程序中调用C或C++函数。<br>(2). C语言：<br>      对于_stdcall调用约定，编译器和链接器会在输出函数名前加上一个下划线前缀，函数名后面加上一个“@”符号和其参数的字节数，例如_functionname@number。_cdecl调用约定仅在输出函数名前加上一个下划线前缀，例如_functionname。_fastcall调用约定在输出函数名前加上一个 “@“符号，后面也是一个”@“符号和其参数的字节数，例如@functionname@number。<br>(3). C++语言：<br>   C++的函数名修饰规则有些复杂，但是信息更充分，通过分析修饰名不仅能够知道函数的调用方式，返回值类型，参数个数甚至参数类型。不管<strong>cdecl，</strong>fastcall还是<strong>stdcall调用方式，函数修饰都是以一个“?”开始，后面紧跟函数的名字，再后面是参数表的开始标识和按照参数类型代号拼出的参数表。对于</strong>stdcall方式，参数表的开始标识是“@@YG”，对于<strong>cdecl方式则是“@@YA”，对于</strong>fastcall方式则是“@@YI”。参数表的拼写代号如下所示：<br>X–void<br>D–char<br>E–unsigned char<br>F–short<br>H–int<br>I–unsigned int<br>J–long<br>K–unsigned long（DWORD）<br>M–float<br>N–double<br>_N—bool<br>U—struct</p>\n<p>指针的方式有些特别，用PA表示指针，用PB表示const类型的指针。后面的代号表明指针类型，如果相同类型的指针连续出现，以“0”代替，一个“0”代表一次重复。U表示结构类型，通常后跟结构体的类型名，用“@@”表示结构类型名的结束。函数的返回值不作特殊处理，它的描述方式和函数参数一样，紧跟着参数表的开始标志，也就是说，函数参数表的第一项实际上是表示函数的返回值类型。参数表后以“@Z”标识整个名字的结束，如果该函数无参数，则以“Z”标识结束。下面举两个例子，假如有以下函数声明：<br>int Function1(char *var1,unsigned long);<br>其函数修饰名为“?Function1@@YGHPADK@Z”，而对于函数声明：<br>oid Function2();<br>其函数修饰名则为“?Function2@@YGXXZ” 。<br>对于C++的类成员函数（其调用方式是thiscall），函数的名字修饰与非成员的C++函数稍有不同，首先就是在函数名字和参数表之间插入以“@”字符引导的类名；其次是参数表的开始标识不同，公有（public）成员函数的标识是“@@QAE”,保护（protected）成员函数的标识是“@@IAE”,私有（private）成员函数的标识是“@@AAE”，如果函数声明使用了const关键字，则相应的标识应分别为“@@QBE”，“@@IBE”和“@@ABE”。如果参数类型是类实例的引用，则使用“AAV1”，对于const类型的引用，则使用“ABV1”。</p>\n<h3 id=\"查看函数的名字修饰\"><a href=\"#查看函数的名字修饰\" class=\"headerlink\" title=\"查看函数的名字修饰\"></a>查看函数的名字修饰</h3><p> 有两种方式可以检查你的程序中的函数的名字修饰：使用编译输出列表或使用Dumpbin工具。使用/FAc，/FAs或/FAcs命令行参数可以让编译器输出函数或变量名字列表。使用dumpbin.exe /SYMBOLS命令也可以获得obj文件或lib文件中的函数或变量名字列表。此外，还可以使用 undname.exe 将修饰名转换为未修饰形式。</p>\n<h3 id=\"beginthread需要-cdecl的线程函数地址，-beginthreadex和-CreateThread需要-stdcall的线程函数地址。\"><a href=\"#beginthread需要-cdecl的线程函数地址，-beginthreadex和-CreateThread需要-stdcall的线程函数地址。\" class=\"headerlink\" title=\"_beginthread需要_cdecl的线程函数地址，_beginthreadex和_CreateThread需要_stdcall的线程函数地址。\"></a>_beginthread需要_cdecl的线程函数地址，_beginthreadex和_CreateThread需要_stdcall的线程函数地址。</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> CALLBACK __stdcall <span class=\"comment\">//这就是传说中的回调函数</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> WINAPI __stdcall <span class=\"comment\">//这就是传说中的WINAPI</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> WINAPIV __cdecl</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> APIENTRY WINAPI <span class=\"comment\">//DllMain的入口就在这里</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> APIPRIVATE __stdcall</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PASCAL __stdcall</span></span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjrd0e8qg0001kwlij6pal95v","category_id":"cjrd0e8qn0003kwli8hvwso3f","_id":"cjrd0e8qw000ckwliigc5vho5"},{"post_id":"cjrd0e8qk0002kwlitrzr58fd","category_id":"cjrd0e8qu0008kwli3kuwpcnu","_id":"cjrd0e8r6000ikwli8ottxu7f"},{"post_id":"cjrd0e8qz000fkwlivr7vrp06","category_id":"cjrd0e8qu0008kwli3kuwpcnu","_id":"cjrd0e8r9000nkwliz9dn1rhd"},{"post_id":"cjrd0e8qq0004kwli1n2ipyth","category_id":"cjrd0e8qx000dkwlialpfmmms","_id":"cjrd0e8rb000qkwlinqccdx38"},{"post_id":"cjrd0e8qr0005kwlivzjqrsvi","category_id":"cjrd0e8qx000dkwlialpfmmms","_id":"cjrd0e8rc000tkwlibesu6z98"},{"post_id":"cjrd0e8qt0007kwli7zze547x","category_id":"cjrd0e8ra000okwlibj0j598w","_id":"cjrd0e8rf000zkwliik4vx9z9"},{"post_id":"cjrd0e8qu0009kwlixwkox2fv","category_id":"cjrd0e8ra000okwlibj0j598w","_id":"cjrd0e8rj0014kwlip99czjy9"},{"post_id":"cjrd0e8qv000akwli8s0shlvz","category_id":"cjrd0e8ra000okwlibj0j598w","_id":"cjrd0e8rm001akwlicxr2rrzj"},{"post_id":"cjrd0e8r7000lkwlimxz6joj0","category_id":"cjrd0e8ra000okwlibj0j598w","_id":"cjrd0e8rq001hkwlixiggtlei"},{"post_id":"cjrd0e8r8000mkwli7yimenmk","category_id":"cjrd0e8ra000okwlibj0j598w","_id":"cjrd0e8rt001lkwli3pa4fz3a"},{"post_id":"cjrd0e8ra000pkwliyb004dll","category_id":"cjrd0e8rq001gkwlibud1t3ki","_id":"cjrd0e8rv001qkwli61ql43ut"},{"post_id":"cjrd0e8rb000skwli2fu3og27","category_id":"cjrd0e8ru001okwli0du93xhj","_id":"cjrd0e8rw001ukwli74nzmp93"},{"post_id":"cjrd0e8rc000wkwlixf7a8udg","category_id":"cjrd0e8rv001rkwli1rasihy3","_id":"cjrd0e8rx001ykwli5mme88lm"},{"post_id":"cjrd0e8rh0012kwlil4983h88","category_id":"cjrd0e8rv001rkwli1rasihy3","_id":"cjrd0e8ry0021kwlird77uit4"},{"post_id":"cjrd0e8rj0015kwlifyi04wg2","category_id":"cjrd0e8rv001rkwli1rasihy3","_id":"cjrd0e8ry0022kwliu9p7vf0e"},{"post_id":"cjrd0e8rl0016kwli34q11i98","category_id":"cjrd0e8rx0020kwlimgzyjndt","_id":"cjrd0e8s00025kwli04sq4iea"},{"post_id":"cjrd0e8rm001bkwli7uanizvf","category_id":"cjrd0e8rx0020kwlimgzyjndt","_id":"cjrd0e8s00027kwli1r73z041"},{"post_id":"cjrd0e8ro001dkwlitguyq6ua","category_id":"cjrd0e8rx0020kwlimgzyjndt","_id":"cjrd0e8s10028kwlilq3j4wsb"},{"post_id":"cjrd0e8rq001ikwlidvy0uf8w","category_id":"cjrd0e8s00026kwlil55gvj7a","_id":"cjrd0e8s2002bkwlizttzrhtc"},{"post_id":"cjrd0e8rr001jkwli5x11whg5","category_id":"cjrd0e8s00026kwlil55gvj7a","_id":"cjrd0e8s2002ckwlihz04l8mk"},{"post_id":"cjrd0e8rt001mkwlizzhu82o1","category_id":"cjrd0e8s00026kwlil55gvj7a","_id":"cjrd0e8s2002dkwlis5bki570"},{"post_id":"cjrd0e8sl002ekwli43kl2oy6","category_id":"cjrd0e8s00026kwlil55gvj7a","_id":"cjrd0e8sp002ikwli4wxeb5wf"},{"post_id":"cjrd0e8sn002fkwliosdtn2oq","category_id":"cjrd0e8rx0020kwlimgzyjndt","_id":"cjrd0e8sq002jkwli28o30ed9"},{"post_id":"cjrd0e8so002gkwlioir2amd8","category_id":"cjrd0e8s00026kwlil55gvj7a","_id":"cjrd0e8sq002kkwliymp8t6d0"}],"PostTag":[{"post_id":"cjrd0e8qq0004kwli1n2ipyth","tag_id":"cjrd0e8qs0006kwlica5aho5i","_id":"cjrd0e8qz000ekwlia0npkxzr"},{"post_id":"cjrd0e8qr0005kwlivzjqrsvi","tag_id":"cjrd0e8qs0006kwlica5aho5i","_id":"cjrd0e8r6000kkwli9c069o1h"},{"post_id":"cjrd0e8qt0007kwli7zze547x","tag_id":"cjrd0e8r5000hkwli3b3tf6fr","_id":"cjrd0e8rb000rkwlixvtj9l6b"},{"post_id":"cjrd0e8ra000pkwliyb004dll","tag_id":"cjrd0e8r5000hkwli3b3tf6fr","_id":"cjrd0e8rc000ukwline2kcvec"},{"post_id":"cjrd0e8rj0015kwlifyi04wg2","tag_id":"cjrd0e8rh0011kwli94jb4hrq","_id":"cjrd0e8rm0018kwliut48gjay"},{"post_id":"cjrd0e8rd000xkwlidoqy3818","tag_id":"cjrd0e8rh0011kwli94jb4hrq","_id":"cjrd0e8ro001ckwli8ueyqtsq"},{"post_id":"cjrd0e8rh0012kwlil4983h88","tag_id":"cjrd0e8rh0011kwli94jb4hrq","_id":"cjrd0e8rp001fkwlikdvvyms2"},{"post_id":"cjrd0e8rl0016kwli34q11i98","tag_id":"cjrd0e8rp001ekwlijhy9xymq","_id":"cjrd0e8ru001nkwli412c8arp"},{"post_id":"cjrd0e8rq001ikwlidvy0uf8w","tag_id":"cjrd0e8rt001kkwliy9chnkxk","_id":"cjrd0e8rv001skwlist4xyi0x"},{"post_id":"cjrd0e8rr001jkwli5x11whg5","tag_id":"cjrd0e8rv001pkwli2egnrqqb","_id":"cjrd0e8rw001wkwli2qsaicvn"},{"post_id":"cjrd0e8rt001mkwlizzhu82o1","tag_id":"cjrd0e8rw001tkwli1umvlt8g","_id":"cjrd0e8rx001zkwlitusqvkim"},{"post_id":"cjrd0e8sn002fkwliosdtn2oq","tag_id":"cjrd0e8sp002hkwli9i596bra","_id":"cjrd0e8sq002lkwlimyqr5hr6"}],"Tag":[{"name":"git","_id":"cjrd0e8qs0006kwlica5aho5i"},{"name":"hexo","_id":"cjrd0e8r5000hkwli3b3tf6fr"},{"name":"vim","_id":"cjrd0e8rh0011kwli94jb4hrq"},{"name":"ajax","_id":"cjrd0e8rp001ekwlijhy9xymq"},{"name":"encrypt","_id":"cjrd0e8rt001kkwliy9chnkxk"},{"name":"c++","_id":"cjrd0e8rv001pkwli2egnrqqb"},{"name":"windows","_id":"cjrd0e8rw001tkwli1umvlt8g"},{"name":"html5","_id":"cjrd0e8sp002hkwli9i596bra"}]}}